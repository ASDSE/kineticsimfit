(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    415187,       8052]
NotebookOptionsPosition[    410196,       7944]
NotebookOutlinePosition[    412960,       8007]
CellTagsIndexPosition[    412779,       7999]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Pane", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Fitting of a kinetic Host:Dye interaction\>\"", ",", 
          "\"\<Chapter\>\""}], "]"}], "}"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"MouseAppearance", "[", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Launch Application\>\"", ",", "\"\<Section\>\""}], 
             "]"}], ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"nb", "=", 
               RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", 
              RowBox[{"NotebookFind", "[", 
               RowBox[{
               "nb", ",", "\"\<loadcellHD\>\"", ",", "All", ",", "CellTags"}],
                "]"}], ",", 
              RowBox[{"SelectionEvaluate", "[", "nb", "]"}]}], "}"}], ",", 
            RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
          "\"\<LinkHand\>\""}], "]"}], "}"}]}], "\n", "\n", "}"}], ",", " ", 
     RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
     RowBox[{"ItemSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7578714708975143`*^9, 
  3.757871517866379*^9}},ExpressionUUID->"dc523fa3-dec0-4f7d-a881-\
a3a7b4c3a679"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"Fitting of a kinetic Host:Dye interaction\"\>", "Chapter",
       StripOnInput->False]},
     {
      TagBox[
       ButtonBox[
        StyleBox["\<\"Launch Application\"\>", "Section",
         StripOnInput->False],
        Appearance->None,
        ButtonFunction:>{$CellContext`nb = EvaluationNotebook[], 
          NotebookFind[$CellContext`nb, "loadcellHD", All, CellTags], 
          SelectionEvaluate[$CellContext`nb]},
        Evaluator->Automatic,
        Method->"Preemptive"],
       MouseAppearanceTag["LinkHand"]]}
    },
    AutoDelete->False,
    BaselinePosition->Baseline,
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Large}}, "Rows" -> {{Large}}}],
   "Grid"],
  Alignment->Center,
  ImageSize->Full]], "Output",
 CellChangeTimes->{{3.757871490740198*^9, 
  3.757871518663219*^9}},ExpressionUUID->"54990900-7df1-4ff5-ba5b-\
272dbb900e15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Notebook", " ", "settings"}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"CellContext", "\[Rule]", "Notebook"}]}], "]"}], ";"}], "\n", 
   RowBox[{"SetOptions", "[", 
    RowBox[{"$FrontEnd", ",", 
     RowBox[{"GlobalInitializationCellWarning", "\[Rule]", "False"}]}], "]"}],
    "\n", 
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"CellEpilog", "\[RuleDelayed]", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", "All", ",", 
        "EvaluationCell"}], "]"}]}]}], "]"}], "\n", 
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"InitializationCellEvaluation", "\[Rule]", "True"}], ",", 
     RowBox[{"InitializationCellWarning", "\[Rule]", "False"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"$FrontEnd", ",", 
      RowBox[{"\"\<DynamicUpdating\>\"", "\[Rule]", "True"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"$FrontEnd", ",", 
      RowBox[{"\"\<DynamicEvaluationTimeout\>\"", "\[Rule]", "30"}]}], "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "start", ",", "end", ",", "step", ",", "h0", ",", "h0in", ",", "h0error",
       ",", "h0fixed", ",", "d0", ",", "d0in", ",", "d0error", ",", "d0fixed",
       ",", "d0out", ",", "g0", ",", "g0in", ",", "g0error", ",", "g0fixed", 
      ",", "kequhd", ",", "kequhdin", ",", "kequhderror", ",", "kequhdfixed", 
      ",", "kequhdout", ",", "kequhdpos", ",", "kequhg", ",", "kequhgin", ",",
       "kequhgerror", ",", "kequhgfixed", ",", "kequhgout", ",", "kequhgpos", 
      ",", "khd1", ",", "khd1in", ",", "khd2in", ",", "khd1error", ",", 
      "khd1fixed", ",", "khd1out", ",", "khd1pos", ",", "khg1", ",", "khg1in",
       ",", "khg2in", ",", "khg1error", ",", "khg1fixed", ",", "khg1out", ",",
       "khg1pos", ",", "kg", ",", "kgin", ",", "kgerror", ",", "kgfixed", ",",
       "sig0", ",", "sig0in", ",", "sig0error", ",", "sig0fixed", ",", 
      "sig0out", ",", "sighd", ",", "sighdin", ",", "sighderror", ",", 
      "sighderror", ",", "sighdout", ",", "sigd", ",", "sigdin", ",", 
      "sigderror", ",", "sigdfixed", ",", "sigdout", ",", "dataimport", ",", 
      "bestfit", ",", "data", ",", "sig", ",", "datad", ",", "datahd", ",", 
      "dataimport", ",", "datasignal", ",", "modelsignal", ",", "fit", ",", 
      "fitplot", ",", "fitsignal", ",", "fitteddata", ",", "inputparameter", 
      ",", "subparameter", ",", "concparameter", ",", "output", ",", "equns", 
      ",", "equnsignal", ",", "solhd", ",", "sold", ",", "initials"}], "]"}], 
    ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Load", " ", "Packges"}], "*)"}], "\t", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ParentDirectory", "[", 
           RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
          "\"\<Packages\>\"", ",", "\"\<kinHD\>\"", ",", "\"\<kinHD2.m\>\""}],
          "}"}], "]"}], "}"}], "]"}], "]"}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ParentDirectory", "[", 
           RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
          "\"\<Packages\>\"", ",", "\"\<datagen.m\>\""}], "}"}], "]"}], "}"}],
       "]"}], "]"}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ParentDirectory", "[", 
         RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
        "\"\<Styles\>\"", ",", "\"\<styles.m\>\""}], "}"}], "]"}], "]"}], 
    ";"}], "\n", "\t", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pathkinHD", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samples\>\"", ",", 
        "\"\<kinHD-sim.txt\>\""}], "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"savePath", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Parameter\>\"", 
        ",", "\"\<temp-kinHG.mx\>\""}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", "Paths", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempPath", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Parameter\>\"", 
        ",", "\"\<temp-kinHG.mx\>\""}], "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"cachePath", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Parameter\>\"", 
        ",", "\"\<cache-kin.mx\>\""}], "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"defaultPath", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Parameter\>\"", 
        ",", "\"\<default-kinHG.mx\>\""}], "}"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pathHG", "=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samples\>\"", ",", 
        "\"\<Sim-kinHG.txt\>\""}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initialparameters", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Buttons", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initializebutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{"\"\<Initialize\>\"", ",", "\"\<Initilize the values\>\""}],
           "]"}], ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", 
           RowBox[{"NotebookFind", "[", 
            RowBox[{
            "nb", ",", "\"\<initialroutineHD\>\"", ",", "All", ",", 
             "CellTags"}], "]"}], ",", 
           RowBox[{"SelectionEvaluate", "[", "nb", "]"}]}], "}"}], ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
       "\"\<LinkHand\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fitbutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{
          "\"\<Click here to fit\>\"", ",", 
           "\"\<Fits the model to the data\>\""}], "]"}], ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", 
           RowBox[{"NotebookFind", "[", 
            RowBox[{
            "nb", ",", "\"\<fixinitials\>\"", ",", "All", ",", "CellTags"}], 
            "]"}], ",", 
           RowBox[{"SelectionEvaluate", "[", "nb", "]"}], ",", 
           RowBox[{"kb", "=", 
            RowBox[{"EvaluationNotebook", "[", "]"}]}], ",", 
           RowBox[{"NotebookFind", "[", 
            RowBox[{
            "kb", ",", "\"\<fittingroutineHD\>\"", ",", "All", ",", 
             "CellTags"}], "]"}], ",", 
           RowBox[{"SelectionEvaluate", "[", "kb", "]"}]}], "}"}], ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
       "\"\<LinkHand\>\""}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"variablessavebutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{
          "\"\<Save Parameters\>\"", ",", 
           "\"\<Saves the set values of the parameters\>\""}], "]"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"initialparameters", "=", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
             "h0in", ",", "d0in", ",", "ga0in", ",", "\[IndentingNewLine]", 
              "tmax", ",", "stepsize", ",", "\[IndentingNewLine]", "kequhdin",
               ",", "kequhddin", ",", "kequhgain", ",", "\[IndentingNewLine]",
               "khd1in", ",", "khdd1in", ",", "khga1in"}], "}"}]}], ",", 
           RowBox[{"Export", "[", 
            RowBox[{"savePath", ",", "initialparameters"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
       "\"\<LinkHand\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"variablesloadbutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{
          "\"\<Load Saved Parameters\>\"", ",", 
           "\"\<Loads the previously saved values\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"initialparameters", "=", 
            RowBox[{"Import", "[", "savePath", "]"}]}], ",", "\n", "\t", 
           RowBox[{"h0in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"d0in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"ga0in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"tmax", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"stepsize", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"kequhdin", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"kequhddin", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "7", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"kequhgain", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "8", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"khd1in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "9", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"khdd1in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "10", "]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"khga1in", "=", 
            RowBox[{"initialparameters", "[", 
             RowBox[{"[", "11", "]"}], "]"}]}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
       "\"\<LinkHand\>\""}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"tmin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepsize", "=", 
     RowBox[{"tmax", "/", "100."}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QYhd", "=", "0.043"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"QYhdd", "=", "0.023"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"QYrin", "=", 
     RowBox[{"QYhdd", "/", "QYhd"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"h0in", "=", 
     RowBox[{"3.2", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ga0in", "=", 
     RowBox[{"4.9", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gb0in", "=", 
     RowBox[{"5.9", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"d0in", "=", 
     RowBox[{"10.", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hga0in", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hd0in", "=", "0"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"khga1in", "=", 
     RowBox[{"1.8", "*", 
      RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khgb1in", "=", 
     RowBox[{"1.7", "*", 
      RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khd1in", "=", 
     RowBox[{"64.", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khdd1in", "=", 
     RowBox[{"5.0", "*", 
      RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhgain", "=", "7.82`*^7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhgbin", "=", "2.42`*^7"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kequhdin", "=", 
     RowBox[{"9.5", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhddin", "=", 
     RowBox[{"2.2", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"khga2in", " ", "=", 
     RowBox[{"khga1in", "/", "kequhgain"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khgb2in", " ", "=", 
     RowBox[{"khgb1in", "/", "kequhgbin"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khd2in", " ", "=", 
     RowBox[{"khd1in", "/", "kequhdin"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khdd2in", "=", 
     RowBox[{"khdd1in", "/", "kequhddin"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"khga1guess", "=", 
     RowBox[{"1.", "*", 
      RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khga2guess", "=", "0.9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khd1guess", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khd2guess", "=", "0.9"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psguess", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gsguess", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psguess", "=", "0.1"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhgaerror", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kequhgberror", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khga1error", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khga2error", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"start", " ", "=", " ", "0."}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"sighdin", " ", "=", " ", "1."}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"sigdin", " ", "=", " ", "0."}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"sig0in", " ", "=", "  ", "0."}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sighderror", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sigderror", " ", "=", " ", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sig0error", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0error", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h0error", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ga0error", "=", "0"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"kequhderror", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhdderror", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kequhgaerror", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khga1error", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khga2error", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khd1error", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khd2error", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khdd1error", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khdd2error", "=", "0"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Parameter", " ", "fixation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"sighdfixed", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigdfixed", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sig0fixed", "=", "2"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h0fixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ga0fixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0fixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhdfixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kequhddfixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khd1fixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khdd1fixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khd2fixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kequhgafixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"kequhgbfixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"QYrfixed", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"khga1fixed", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khga2fixed", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khgb1fixed", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"khgb2fixed", "=", "1"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"inputline1", " ", "=", " ", 
     RowBox[{"{", "\n", "   ", 
      RowBox[{
       RowBox[{"{", "\n", "   \t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<species\>\"", ",", " ", "Bold", ",", "Underlined", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
         "\n", "   \t", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<concentration\>\"", ",", " ", "Bold", ",", "Underlined", ",", 
           " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         "\"\<\>\"", ",", "\n", "   \t", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<binding\>\"", ",", " ", "Bold", ",", "Underlined", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         "\"\<\>\"", ",", "\"\<\>\"", ",", "\n", "   \t", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<association\>\"", ",", " ", "Bold", ",", "Underlined", ",", 
           " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         "\"\<\>\"", ",", "\"\<\>\"", ",", "\t", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<dissociation\>\"", ",", " ", "Bold", ",", "Underlined", ",", 
           " ", 
           RowBox[{"FontSize", "\[Rule]", "12"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}]}], "}"}], 
       ",", "\n", "\n", "   ", 
       RowBox[{"{", "\n", "  \t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Host:\>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "h0in", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<M\>\"", ",", "\n", "\t", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<time-max = \>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "tmax", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<sec\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<time-step = \>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "stepsize", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<sec\>\""}], "\n", "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"h0in", "*", "1000000"}], "]"}], ",", "\"\<\[Mu]M\>\"", 
         ",", "\"\<end time\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
         "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], 
        "}"}], ",", "\n", " ", "\n", "   ", 
       RowBox[{"{", "\n", "   \t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Dye:\>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "d0in", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<M\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(K\), \(equ\)]\)(HD)\>\"", " ", ",", " ", 
           "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "kequhdin", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\)\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)(HD)\>\"", " ", ",", " ", 
           "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "khd1in", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\>\"", ",", "\n", "\t", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(k\), \(-1\)]\)(HD)\>\"", " ", ",", " ", 
           "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"khd2in", "=", 
              RowBox[{"khd1in", "/", "kequhdin"}]}], ",", "None"}], "]"}], 
           ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", 
         "\"\<\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\>\""}], "\n", 
        "}"}], ",", "\n", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"d0in", "*", "1000000"}], "]"}], ",", "\"\<\[Mu]M\>\"", 
         ",", "\"\<lg(\!\(\*SubscriptBox[\(K\), \(equ\)]\))\>\"", ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"Log10", "[", "kequhdin", "]"}], "]"}], ",", "\"\<\>\"", 
         ",", "\"\<ingression\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
         "\"\<egression\>\""}], "}"}], ",", "\n", "   ", "\n", "     ", "\n", 
       "   ", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Signal-HD\>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "sighdin", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<\>\"", ",", "\n", "      ", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Signal-D\>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "sigdin", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
         "\"\<\>\"", ",", "\n", "   ", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Signal-0\>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"InputField", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "sig0in", "]"}], ",", " ", 
           RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}]}], "}"}], ",", 
       "\n", "      ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<HD complex\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
         "\"\<dye alone\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
         "\"\<Startsignal\>\""}], "}"}], "  ", ",", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Show: \>\"", ",", " ", "Bold", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
         RowBox[{"CheckboxBar", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "species", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", " ", "\"\<Simulated signal\>\""}], ",", 
             RowBox[{"2", "\[Rule]", "\"\<Data\>\""}]}], "}"}]}], "]"}]}], 
        "}"}]}], "\n", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"species", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"kinShow", "[", 
      RowBox[{
      "fk2hd_", ",", "fk1hd_", ",", "fh0_", ",", "fd0_", ",", "fsig0_", ",", 
       "fsighd_", ",", "fsigd_", ",", "ftmin_", ",", "ftmax_", ",", 
       "fspecies_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "specieslegend", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"specieslegend", " ", "=", " ", 
         RowBox[{"fspecies", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "\"\<Signal\>\""}], ",", 
            RowBox[{"2", "\[Rule]", "\"\<Data\>\""}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"fspecies", ",", "1"}], "]"}], ",", 
            RowBox[{"Plot", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"kinHDParaCacheSignalall", "[", 
                 RowBox[{
                 "fh0", ",", "fd0", ",", "fsig0", ",", "fsighd", ",", "fsigd",
                   ",", "ftmin", ",", "ftmax"}], "]"}], "[", 
                RowBox[{
                "fk1hd", ",", "fk2hd", ",", "fsig0", ",", "fsighd", ",", 
                 "fsigd"}], "]"}], "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "ftmin", ",", "ftmax"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"{", "\"\<Signal\>\"", "}"}]}], ",", 
              RowBox[{"GridLines", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"Red", ",", "Thick"}], "}"}]}]}], 
             "\[IndentingNewLine]", "\t", "]"}], ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"{", "\"\<simulated signal excluded\>\"", "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", " ", "Transparent"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"fspecies", ",", "2"}], "]"}], ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", "adjusteddata", "}"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"{", "\"\<imported data\>\"", "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"{", "\"\<imported data excluded\>\"", "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", " ", "Transparent"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", " ", 
           RowBox[{"Scaled", "[", "0.5", "]"}]}], ",", 
          RowBox[{"AxesOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Simulated HG kinetics\>\"", ",", "\"\<Subsection\>\""}], 
            "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Signal / INT\>\"", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<time / sec\>\"", ",", "None"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
         "\t", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Output", "*)"}], "\n", 
   RowBox[{
    RowBox[{"output", "=", "\"\<empty\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputinfo", "=", "\"\<data not yet generated\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kinGenerateOutput", "[", 
      RowBox[{
      "fk2hd_", ",", "fk1hd_", ",", "fh0_", ",", "fd0_", ",", "fsig0_", ",", 
       "fsighd_", ",", "fsigd_", ",", "ftmin_", ",", "ftmax_", ",", 
       "fsteps_"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "inputs", ",", "datafitted", ",", "header", ",", "units", ",", 
         "column1", ",", "column2", ",", "column3", ",", "signaloutput", ",", 
         "put", ",", "dataHD", ",", "dataD", ",", "dataHG", ",", "dataG", ",",
          "dataH", ",", "specieslegend", ",", "dataX"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"inputs", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Quantity\>\"", ",", "\"\<Value\>\"", ",", "\"\<Error\>\""}], 
            "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<adjusted R-squared\>\"", ",", 
             RowBox[{"fitsignal2", "[", "\"\<AdjustedRSquared\>\"", "]"}], 
             ",", "\"\<\>\""}], "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<conc(H)\>\"", ",", "fh0", ",", "\"\<\>\""}], "}"}], 
           ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<conc(D)\>\"", ",", "fd0", ",", "\"\<\>\""}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<Kequ(HD)\>\"", ",", 
             RowBox[{"fk1hd", "/", "fk2hd"}], ",", "kequhdderror"}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<k1(HD)\>\"", ",", "fk1hd", ",", "khd1error"}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<k-1(HD)\>\"", ",", "fk2hd", ",", "khd2error"}], 
            "}"}], ",", "\n", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<Signal-0\>\"", ",", "sig0in", ",", "sig0error"}], 
            "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<Signal-HD\>\"", ",", "sighdin", ",", "sighderror"}], 
            "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<Signal-Dye\>\"", ",", "sigdin", ",", "sigderror"}], 
            "}"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{"\"\<tmax\>\"", ",", "ftmax", ",", "\"\<sec\>\""}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", ",", 
             RowBox[{"DateString", "[", "]"}], ",", "\"\<\>\""}], "}"}]}], 
          "\n", "}"}]}], ";", "\n", 
        RowBox[{"header", "=", 
         RowBox[{"{", 
          RowBox[{
          "\"\<time / sec\>\"", ",", "\"\<fitted signal\>\"", ",", 
           "\"\<time / sec\>\"", ",", "\"\<imported data\>\""}], "}"}]}], ";",
         "\n", "\n", 
        RowBox[{"column1", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"inputs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"column2", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"inputs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"column3", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"inputs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
        RowBox[{"dataX", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "x", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "ftmax", ",", 
             RowBox[{"ftmax", "/", "fsteps"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
        RowBox[{"datafitted", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"kinHDParaCacheSignalall", "[", 
              RowBox[{
              "fh0", ",", "fd0", ",", "fsig0", ",", "fsighd", ",", "fsigd", 
               ",", "ftmin", ",", "ftmax"}], "]"}], "[", 
             RowBox[{
             "fk1hd", ",", "fk2hd", ",", "fsig0", ",", "fsighd", ",", 
              "fsigd"}], "]"}], "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "ftmax", ",", 
             RowBox[{"ftmax", "/", "fsteps"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"signaloutput", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"dataX", ",", 
           RowBox[{"List", "/@", "datafitted"}], ",", 
           RowBox[{"List", "/@", 
            RowBox[{"adjusteddata", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"List", "/@", 
            RowBox[{"adjusteddata", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", "2"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"put", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"signaloutput", ",", "header"}], "]"}], ",", 
           RowBox[{"List", "/@", "column1"}], ",", 
           RowBox[{"List", "/@", "column2"}], ",", 
           RowBox[{"List", "/@", "column3"}], ",", "2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "put", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "=", "pathkinHD"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"TableForm", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "initializebutton", ",", "variablesloadbutton", ",", 
         "variablessavebutton"}], "}"}], "}"}], "]"}], "]"}], ";"}], "\n", 
   "\n", "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\n", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Please keep in mind, that in this fitting model, all \
concentrations and affinity constant should be known and fixed.\>\"", ",", 
       "\"\<Subsubsection\>\"", ",", "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\n", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<File format\>\"", ",", "\"\<Time domain\>\"", ",", 
            "\"\<Normalization\>\"", ",", "\"\<Concentration factor\>\"", 
            ",", "\"\<JASCO Import?\>\"", ",", " ", 
            "\"\<Reset to Minimum?\>\""}], "}"}], ",", "\n", 
          RowBox[{"{", 
           RowBox[{"\"\<tab delimited .txt file\>\"", ",", 
            RowBox[{"RadioButtonBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "factor", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "60."}], " ", "->", " ", "\"\<min\>\""}], 
                ",", " ", 
                RowBox[{"1", " ", "->", " ", "\"\<sec\>\""}], ",", 
                RowBox[{"1000", "\[Rule]", " ", "\"\<msec\>\""}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"RadioButtonBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "normchoice", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", " ", "->", " ", "\"\<None\>\""}], ",", " ", 
                RowBox[{"2", " ", "->", " ", "\"\<to N[0,1]\>\""}], ",", 
                RowBox[{"3", "\[Rule]", " ", "\"\<Devide by max\>\""}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "cfac", "]"}], ",", " ", 
              RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
            RowBox[{"Checkbox", "[", 
             RowBox[{"Dynamic", "[", "jascoImport", "]"}], "]"}], ",", 
            RowBox[{"Checkbox", "[", 
             RowBox[{"Dynamic", "[", "resetToMin", "]"}], "]"}]}], "}"}]}], 
         "}"}], "]"}], ",", "\"\<Subsubsection\>\"", ",", "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<currently loaded data:\>\"", ",", 
            RowBox[{"Dynamic", "[", "f", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"MouseAppearance", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"FileNameSetter", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "f", "]"}], ",", "\"\<Open\>\"", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Readable files\>\"", "\[Rule]", 
                    RowBox[{"{", "\"\<*.TXT\>\"", "}"}]}], ",", 
                    RowBox[{"\"\<All files\>\"", "\[Rule]", 
                    RowBox[{"{", "\"\<*\>\"", "}"}]}]}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"Browse", "..."}]}]}], "]"}], ",", 
                   "\"\<Section\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
                 RowBox[{"RoundingRadius", "\[Rule]", "15"}], ",", 
                 RowBox[{"Background", "\[Rule]", "LightGray"}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"LightGray", ",", "12"}], "]"}]}]}], "]"}], ",", 
               "\"\<Browse the file\>\""}], "]"}], ",", "\"\<LinkHand\>\""}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], "]"}], ",", "\n", 
       "\"\<Subsubsection\>\"", ",", "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "\n", "]"}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"TableForm", "[", 
       RowBox[{"inputline", ",", 
        RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], "]"}], ",", 
      "\"\<Subsubsection\>\"", ",", "Black", ",", 
      RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], "*)"}], "\n", "\n", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{"inputline1", ",", 
       RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
     "\"\<Subsubsection\>\"", ",", "Black", ",", 
     RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"cfac", "=", "1"}], ";"}], "\n", "\n", "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.7251845499625125`*^9, 3.7251845853644776`*^9}, {
   3.725184623214929*^9, 3.725184704757572*^9}, {3.7251847668319445`*^9, 
   3.7251847830907893`*^9}, {3.7251848538560224`*^9, 3.725184854084258*^9}, {
   3.7251851962707114`*^9, 3.7251852152576284`*^9}, 3.725185312779334*^9, {
   3.7251853607073584`*^9, 3.7251853609467173`*^9}, {3.725185423585928*^9, 
   3.7251854240057216`*^9}, 3.725185462713163*^9, {3.725185537822959*^9, 
   3.725185568222003*^9}, {3.725185616843117*^9, 3.7251857020116525`*^9}, 
   3.725185739747748*^9, {3.7251857902682767`*^9, 3.725185819405298*^9}, {
   3.72518597978321*^9, 3.7251860528726997`*^9}, {3.725186166583143*^9, 
   3.7251861744500294`*^9}, {3.725186215085828*^9, 3.725186237433365*^9}, {
   3.725186307160355*^9, 3.7251863285862975`*^9}, {3.7251863798607855`*^9, 
   3.725186384628996*^9}, {3.7251866178296337`*^9, 3.725186620733754*^9}, 
   3.725186962766814*^9, {3.725253963212988*^9, 3.725254039023421*^9}, {
   3.725254081950596*^9, 3.725254120971803*^9}, {3.725254358596717*^9, 
   3.725254440521703*^9}, {3.7252546204811172`*^9, 3.725254667293328*^9}, {
   3.7252675778298798`*^9, 3.7252676073159*^9}, {3.725268864862412*^9, 
   3.7252689158228903`*^9}, {3.725269028817477*^9, 3.725269032643248*^9}, {
   3.7252693685803976`*^9, 3.725269404486298*^9}, {3.7252696537053823`*^9, 
   3.725269670643283*^9}, {3.7252697240021534`*^9, 3.7252697515025797`*^9}, {
   3.725269786160289*^9, 3.7252698015330315`*^9}, 3.725270629439415*^9, {
   3.7268905638025446`*^9, 3.726890569287174*^9}, {3.726890641814128*^9, 
   3.726890678353526*^9}, {3.726907384353819*^9, 3.7269074320478916`*^9}, 
   3.7269075384651117`*^9, {3.726907583294896*^9, 3.7269079531939487`*^9}, {
   3.7287137608978925`*^9, 3.728713776355686*^9}, {3.7287138239390097`*^9, 
   3.7287139116258907`*^9}, {3.728714060018873*^9, 3.7287141436747766`*^9}, {
   3.728714203793826*^9, 3.728714205860924*^9}, 3.7287142692609787`*^9, {
   3.728714303924647*^9, 3.7287143264225073`*^9}, {3.7287143751443667`*^9, 
   3.728714401457255*^9}, {3.7287144354671125`*^9, 3.728714459720932*^9}, 
   3.728714499455089*^9, {3.728714550064599*^9, 3.728714648799958*^9}, {
   3.7287147104280734`*^9, 3.728714759764427*^9}, {3.728714805231908*^9, 
   3.7287148055402393`*^9}, {3.7287152900237193`*^9, 
   3.7287153521150255`*^9}, {3.7287161786389246`*^9, 3.728716184191245*^9}, {
   3.757869808426323*^9, 3.757869876875882*^9}, {3.757869916741931*^9, 
   3.7578700405739193`*^9}, 3.7578700818394046`*^9, {3.757870198358901*^9, 
   3.7578702030523386`*^9}, 3.757871264246692*^9, 3.777303838168767*^9, 
   3.7773038848841224`*^9, {3.7773039219538345`*^9, 3.7773039573646727`*^9}, {
   3.7773039946710124`*^9, 3.7773041008743744`*^9}, {3.7773041741081095`*^9, 
   3.777304445051614*^9}, {3.777304483900729*^9, 3.777304522584905*^9}, {
   3.7773069829515605`*^9, 3.777306983312421*^9}, {3.7773075451737943`*^9, 
   3.7773075620101166`*^9}, 3.7773075937999315`*^9, 3.777307677012081*^9, {
   3.777307791395672*^9, 3.7773078004217453`*^9}, 3.777307962882502*^9, {
   3.7777249535320168`*^9, 3.777724957917143*^9}, {3.7777275461203337`*^9, 
   3.7777275646380615`*^9}, {3.777727639479884*^9, 3.777727657089055*^9}, {
   3.777727712606353*^9, 3.777727747438059*^9}, 3.7777400576302223`*^9, {
   3.7777405041612377`*^9, 3.777740809526328*^9}, {3.777740864537634*^9, 
   3.7777409781813827`*^9}, 3.777741032365987*^9, {3.777741073955797*^9, 
   3.777741171905474*^9}, 3.77774135193089*^9, {3.7777414005904408`*^9, 
   3.777741453164218*^9}, {3.777741562755443*^9, 3.777741574734324*^9}, {
   3.77774164449537*^9, 3.777741718795373*^9}, {3.777741784805295*^9, 
   3.7777417995654507`*^9}, 3.777741925315132*^9, {3.777742020685233*^9, 
   3.7777420223152313`*^9}, {3.777742532357033*^9, 3.77774255589207*^9}, {
   3.7777430724115314`*^9, 3.7777430748312397`*^9}, {3.777743201308544*^9, 
   3.777743312332122*^9}, {3.7777434932986774`*^9, 3.7777436491355495`*^9}, {
   3.7777436796976213`*^9, 3.7777436856915045`*^9}, {3.7777437207562914`*^9, 
   3.7777437763856783`*^9}, {3.7777438569299126`*^9, 3.777743983947357*^9}, {
   3.777744021537899*^9, 3.7777442477664204`*^9}, {3.7777443782626266`*^9, 
   3.7777444003083076`*^9}, {3.7777444589553185`*^9, 3.777744471404969*^9}, {
   3.777744546492518*^9, 3.777744548423971*^9}, 3.777744634408422*^9, {
   3.7782362906925526`*^9, 3.778236291516615*^9}, 3.7784114693282213`*^9, {
   3.7784118803544316`*^9, 3.7784119091333046`*^9}, 3.778412118591485*^9, {
   3.7784121600616817`*^9, 3.7784122332661443`*^9}},
 CellTags->"loadcellHD",
 CellLabel->
  "In[487]:=",ExpressionUUID->"336ae152-ac88-4e87-a725-d05aef132b48"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      ButtonBox[
       TagBox[
        TooltipBox[
         FrameBox[
          StyleBox["\<\"Initialize\"\>", "Section",
           StripOnInput->False,
           FontSize->18],
          Background->GrayLevel[0.85],
          FrameStyle->Directive[
            GrayLevel[0.85], 12],
          RoundingRadius->15,
          StripOnInput->False],
         "\"Initilize the values\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Initilize the values", "Tooltip"]& ],
       Appearance->None,
       ButtonFunction:>{$CellContext`nb = EvaluationNotebook[], 
         NotebookFind[$CellContext`nb, "initialroutineHD", All, CellTags], 
         SelectionEvaluate[$CellContext`nb]},
       Evaluator->Automatic,
       Method->"Preemptive"],
      MouseAppearanceTag["LinkHand"]], 
     TagBox[
      ButtonBox[
       TagBox[
        TooltipBox[
         FrameBox[
          StyleBox["\<\"Load Saved Parameters\"\>", "Section",
           StripOnInput->False,
           FontSize->18],
          Background->GrayLevel[0.85],
          FrameStyle->Directive[
            GrayLevel[0.85], 12],
          RoundingRadius->15,
          StripOnInput->False],
         "\"Loads the previously saved values\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Loads the previously saved values", "Tooltip"]& ],
       Appearance->None,
       ButtonFunction:>{$CellContext`initialparameters = 
         Import[$CellContext`savePath], $CellContext`h0in = 
         Part[$CellContext`initialparameters, 1], $CellContext`d0in = 
         Part[$CellContext`initialparameters, 2], $CellContext`ga0in = 
         Part[$CellContext`initialparameters, 3], $CellContext`tmax = 
         Part[$CellContext`initialparameters, 4], $CellContext`stepsize = 
         Part[$CellContext`initialparameters, 5], $CellContext`kequhdin = 
         Part[$CellContext`initialparameters, 6], $CellContext`kequhddin = 
         Part[$CellContext`initialparameters, 7], $CellContext`kequhgain = 
         Part[$CellContext`initialparameters, 8], $CellContext`khd1in = 
         Part[$CellContext`initialparameters, 9], $CellContext`khdd1in = 
         Part[$CellContext`initialparameters, 10], $CellContext`khga1in = 
         Part[$CellContext`initialparameters, 11]},
       Evaluator->Automatic,
       Method->"Preemptive"],
      MouseAppearanceTag["LinkHand"]], 
     TagBox[
      ButtonBox[
       TagBox[
        TooltipBox[
         FrameBox[
          StyleBox["\<\"Save Parameters\"\>", "Section",
           StripOnInput->False,
           FontSize->18],
          Background->GrayLevel[0.85],
          FrameStyle->Directive[
            GrayLevel[0.85], 12],
          RoundingRadius->15,
          StripOnInput->False],
         "\"Saves the set values of the parameters\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Saves the set values of the parameters", "Tooltip"]& ],
       Appearance->None,
       ButtonFunction:>{$CellContext`initialparameters = {$CellContext`h0in, \
$CellContext`d0in, $CellContext`ga0in, $CellContext`tmax, \
$CellContext`stepsize, $CellContext`kequhdin, $CellContext`kequhddin, \
$CellContext`kequhgain, $CellContext`khd1in, $CellContext`khdd1in, \
$CellContext`khga1in}, 
         Export[$CellContext`savePath, $CellContext`initialparameters]},
       Evaluator->Automatic,
       Method->"Preemptive"],
      MouseAppearanceTag["LinkHand"]]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.7287161849686637`*^9, 3.7578700436263247`*^9, 3.757870083689233*^9, 
   3.7578702048742948`*^9, 3.7578710081593976`*^9, 3.7578712657575417`*^9, 
   3.757871421928232*^9, 3.7578715211868763`*^9, 3.7731273559947596`*^9, 
   3.77312744721105*^9, 3.7734729441740437`*^9, 3.777303552525897*^9, 
   3.7773044484423313`*^9, {3.777304501029148*^9, 3.777304524011648*^9}, {
   3.777305056928799*^9, 3.7773050642741323`*^9}, 3.777305719692893*^9, 
   3.7773074134738755`*^9, 3.7773075961777873`*^9, 3.777307807439125*^9, 
   3.7773079691182337`*^9, 3.7777002386219454`*^9, {3.777724959870545*^9, 
   3.7777249957186546`*^9}, 3.777725184402731*^9, 3.7777252240140696`*^9, 
   3.7777255007187924`*^9, {3.777725604148838*^9, 3.777725623868262*^9}, 
   3.7777267481090193`*^9, 3.7777275663553505`*^9, 3.777727606974986*^9, 
   3.7777277498399096`*^9, 3.7777400154366865`*^9, 3.777740077181805*^9, 
   3.777741208827573*^9, {3.7777414444707146`*^9, 3.777741454540615*^9}, 
   3.7777415784557824`*^9, 3.777741725845019*^9, 3.777741801115137*^9, 
   3.7777419579052076`*^9, 3.777742039205282*^9, {3.777742613628578*^9, 
   3.777742622383164*^9}, 3.7777429044005404`*^9, 3.777744262556107*^9, 
   3.7777444057078238`*^9, 3.7777444734503126`*^9, 3.77774463735417*^9, 
   3.7777449097370634`*^9, 3.777744975095461*^9, 3.7777454775454016`*^9, 
   3.7777460696295404`*^9, 3.77778201720723*^9, 3.7782374574250193`*^9, 
   3.7784094142329836`*^9, {3.778409775625389*^9, 3.7784097908279943`*^9}, 
   3.7784114895781326`*^9, 3.7784115986031322`*^9, 3.7784118034383435`*^9, 
   3.778411910932773*^9, 3.7784120121554465`*^9, 3.778412121077879*^9, 
   3.7784122479128447`*^9, 3.778412613531994*^9},
 CellTags->"loadcellHD",
 CellLabel->
  "During evaluation of \
In[487]:=",ExpressionUUID->"6c723d1a-ee87-4425-96ff-b4160d21b009"],

Cell[BoxData[
 StyleBox["\<\"Please keep in mind, that in this fitting model, all \
concentrations and affinity constant should be known and fixed.\"\>", 
  "Subsubsection",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontSize->16,
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.7287161849686637`*^9, 3.7578700436263247`*^9, 3.757870083689233*^9, 
   3.7578702048742948`*^9, 3.7578710081593976`*^9, 3.7578712657575417`*^9, 
   3.757871421928232*^9, 3.7578715211868763`*^9, 3.7731273559947596`*^9, 
   3.77312744721105*^9, 3.7734729441740437`*^9, 3.777303552525897*^9, 
   3.7773044484423313`*^9, {3.777304501029148*^9, 3.777304524011648*^9}, {
   3.777305056928799*^9, 3.7773050642741323`*^9}, 3.777305719692893*^9, 
   3.7773074134738755`*^9, 3.7773075961777873`*^9, 3.777307807439125*^9, 
   3.7773079691182337`*^9, 3.7777002386219454`*^9, {3.777724959870545*^9, 
   3.7777249957186546`*^9}, 3.777725184402731*^9, 3.7777252240140696`*^9, 
   3.7777255007187924`*^9, {3.777725604148838*^9, 3.777725623868262*^9}, 
   3.7777267481090193`*^9, 3.7777275663553505`*^9, 3.777727606974986*^9, 
   3.7777277498399096`*^9, 3.7777400154366865`*^9, 3.777740077181805*^9, 
   3.777741208827573*^9, {3.7777414444707146`*^9, 3.777741454540615*^9}, 
   3.7777415784557824`*^9, 3.777741725845019*^9, 3.777741801115137*^9, 
   3.7777419579052076`*^9, 3.777742039205282*^9, {3.777742613628578*^9, 
   3.777742622383164*^9}, 3.7777429044005404`*^9, 3.777744262556107*^9, 
   3.7777444057078238`*^9, 3.7777444734503126`*^9, 3.77774463735417*^9, 
   3.7777449097370634`*^9, 3.777744975095461*^9, 3.7777454775454016`*^9, 
   3.7777460696295404`*^9, 3.77778201720723*^9, 3.7782374574250193`*^9, 
   3.7784094142329836`*^9, {3.778409775625389*^9, 3.7784097908279943`*^9}, 
   3.7784114895781326`*^9, 3.7784115986031322`*^9, 3.7784118034383435`*^9, 
   3.778411910932773*^9, 3.7784120121554465`*^9, 3.778412121077879*^9, 
   3.7784122479128447`*^9, 3.7784126135441604`*^9},
 CellTags->"loadcellHD",
 CellLabel->
  "During evaluation of \
In[487]:=",ExpressionUUID->"203d6dab-52a6-45bd-97b9-bcbff594af3f"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"File format\"\>", "\<\"Time domain\"\>", "\<\"Normalization\"\>", \
"\<\"Concentration factor\"\>", "\<\"JASCO Import?\"\>", "\<\"Reset to \
Minimum?\"\>"},
     {"\<\"tab delimited .txt file\"\>", 
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            
            RadioButtonBox[Dynamic[$CellContext`factor], {
             0.016666666666666666`},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"min\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[$CellContext`factor], {1},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"sec\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[$CellContext`factor], {1000},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"msec\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[$CellContext`factor], {
        0.016666666666666666` -> "min", 1 -> "sec", 1000 -> "msec"}]], 
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            RadioButtonBox[Dynamic[$CellContext`normchoice], {1},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"None\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[$CellContext`normchoice], {2},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"to N[0,1]\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "  ", GridBox[{
           {
            RadioButtonBox[Dynamic[$CellContext`normchoice], {3},
             DefaultBaseStyle->"RadioButtonBar"], 
            StyleBox["\<\"Devide by max\"\>", "RadioButtonBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}]}], "Deploy"],
       RadioButtonBar[
        Dynamic[$CellContext`normchoice], {
        1 -> "None", 2 -> "to N[0,1]", 3 -> "Devide by max"}]], 
      InputFieldBox[Dynamic[$CellContext`cfac],
       FieldSize->8], 
      CheckboxBox[Dynamic[$CellContext`jascoImport]], 
      CheckboxBox[Dynamic[$CellContext`resetToMin]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], "Subsubsection",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontSize->16,
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.7287161849686637`*^9, 3.7578700436263247`*^9, 3.757870083689233*^9, 
   3.7578702048742948`*^9, 3.7578710081593976`*^9, 3.7578712657575417`*^9, 
   3.757871421928232*^9, 3.7578715211868763`*^9, 3.7731273559947596`*^9, 
   3.77312744721105*^9, 3.7734729441740437`*^9, 3.777303552525897*^9, 
   3.7773044484423313`*^9, {3.777304501029148*^9, 3.777304524011648*^9}, {
   3.777305056928799*^9, 3.7773050642741323`*^9}, 3.777305719692893*^9, 
   3.7773074134738755`*^9, 3.7773075961777873`*^9, 3.777307807439125*^9, 
   3.7773079691182337`*^9, 3.7777002386219454`*^9, {3.777724959870545*^9, 
   3.7777249957186546`*^9}, 3.777725184402731*^9, 3.7777252240140696`*^9, 
   3.7777255007187924`*^9, {3.777725604148838*^9, 3.777725623868262*^9}, 
   3.7777267481090193`*^9, 3.7777275663553505`*^9, 3.777727606974986*^9, 
   3.7777277498399096`*^9, 3.7777400154366865`*^9, 3.777740077181805*^9, 
   3.777741208827573*^9, {3.7777414444707146`*^9, 3.777741454540615*^9}, 
   3.7777415784557824`*^9, 3.777741725845019*^9, 3.777741801115137*^9, 
   3.7777419579052076`*^9, 3.777742039205282*^9, {3.777742613628578*^9, 
   3.777742622383164*^9}, 3.7777429044005404`*^9, 3.777744262556107*^9, 
   3.7777444057078238`*^9, 3.7777444734503126`*^9, 3.77774463735417*^9, 
   3.7777449097370634`*^9, 3.777744975095461*^9, 3.7777454775454016`*^9, 
   3.7777460696295404`*^9, 3.77778201720723*^9, 3.7782374574250193`*^9, 
   3.7784094142329836`*^9, {3.778409775625389*^9, 3.7784097908279943`*^9}, 
   3.7784114895781326`*^9, 3.7784115986031322`*^9, 3.7784118034383435`*^9, 
   3.778411910932773*^9, 3.7784120121554465`*^9, 3.778412121077879*^9, 
   3.7784122479128447`*^9, 3.778412613546164*^9},
 CellTags->"loadcellHD",
 CellLabel->
  "During evaluation of \
In[487]:=",ExpressionUUID->"fc793b85-f9d3-4897-ac1a-e755ea7c6820"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[GridBox[{
     {"\<\"currently loaded data:\"\>", 
      DynamicBox[ToBoxes[$CellContext`f, StandardForm],
       ImageSizeCache->{603., {3., 10.}}]},
     {
      TagBox[
       TagBox[
        TooltipBox[
         FrameBox[
          StyleBox[
           
           TemplateBox[{
            Dynamic[$CellContext`f],"Open",{
             "Readable files" -> {"*.TXT"}, "All files" -> {"*"}},Automatic,
             RowBox[{"Browse", "..."}],None,{"FileNameSetter"},Automatic,0,
             Automatic},
            "FileNameSetterBoxes4"], "Section",
           StripOnInput->False,
           FontSize->18],
          Background->GrayLevel[0.85],
          FrameStyle->Directive[
            GrayLevel[0.85], 12],
          RoundingRadius->15,
          StripOnInput->False],
         "\"Browse the file\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Browse the file", "Tooltip"]& ],
       MouseAppearanceTag["LinkHand"]], "\<\"\"\>"},
     {"\<\"\"\>", "\<\"\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   TableForm[{{"currently loaded data:", 
      Dynamic[$CellContext`f]}, {
      MouseAppearance[
       Tooltip[
        Framed[
         Style[
          FileNameSetter[
           Dynamic[$CellContext`f], "Open", {
           "Readable files" -> {"*.TXT"}, "All files" -> {"*"}}, Appearance -> 
           RepeatedNull[$CellContext`Browse]], "Section", FontSize -> 18], 
         RoundingRadius -> 15, Background -> GrayLevel[0.85], FrameStyle -> 
         Directive[
           GrayLevel[0.85], 12]], "Browse the file"], "LinkHand"]}, {}}]], 
  "Subsubsection",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontSize->14,
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{
  3.7287161849686637`*^9, 3.7578700436263247`*^9, 3.757870083689233*^9, 
   3.7578702048742948`*^9, 3.7578710081593976`*^9, 3.7578712657575417`*^9, 
   3.757871421928232*^9, 3.7578715211868763`*^9, 3.7731273559947596`*^9, 
   3.77312744721105*^9, 3.7734729441740437`*^9, 3.777303552525897*^9, 
   3.7773044484423313`*^9, {3.777304501029148*^9, 3.777304524011648*^9}, {
   3.777305056928799*^9, 3.7773050642741323`*^9}, 3.777305719692893*^9, 
   3.7773074134738755`*^9, 3.7773075961777873`*^9, 3.777307807439125*^9, 
   3.7773079691182337`*^9, 3.7777002386219454`*^9, {3.777724959870545*^9, 
   3.7777249957186546`*^9}, 3.777725184402731*^9, 3.7777252240140696`*^9, 
   3.7777255007187924`*^9, {3.777725604148838*^9, 3.777725623868262*^9}, 
   3.7777267481090193`*^9, 3.7777275663553505`*^9, 3.777727606974986*^9, 
   3.7777277498399096`*^9, 3.7777400154366865`*^9, 3.777740077181805*^9, 
   3.777741208827573*^9, {3.7777414444707146`*^9, 3.777741454540615*^9}, 
   3.7777415784557824`*^9, 3.777741725845019*^9, 3.777741801115137*^9, 
   3.7777419579052076`*^9, 3.777742039205282*^9, {3.777742613628578*^9, 
   3.777742622383164*^9}, 3.7777429044005404`*^9, 3.777744262556107*^9, 
   3.7777444057078238`*^9, 3.7777444734503126`*^9, 3.77774463735417*^9, 
   3.7777449097370634`*^9, 3.777744975095461*^9, 3.7777454775454016`*^9, 
   3.7777460696295404`*^9, 3.77778201720723*^9, 3.7782374574250193`*^9, 
   3.7784094142329836`*^9, {3.778409775625389*^9, 3.7784097908279943`*^9}, 
   3.7784114895781326`*^9, 3.7784115986031322`*^9, 3.7784118034383435`*^9, 
   3.778411910932773*^9, 3.7784120121554465`*^9, 3.778412121077879*^9, 
   3.7784122479128447`*^9, 3.778412613546164*^9},
 CellTags->"loadcellHD",
 CellLabel->
  "During evaluation of \
In[487]:=",ExpressionUUID->"1454ac4b-e89c-4457-b3d1-3b4c9f78f65f"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"species\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->12,
       FontWeight->Bold,
       FontVariations->{"Underline"->True}], 
      StyleBox["\<\"concentration\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->12,
       FontWeight->Bold,
       FontVariations->{"Underline"->True}], "\<\"\"\>", 
      StyleBox["\<\"binding\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->12,
       FontWeight->Bold,
       FontVariations->{"Underline"->True}], "\<\"\"\>", "\<\"\"\>", 
      StyleBox["\<\"association\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->12,
       FontWeight->Bold,
       FontVariations->{"Underline"->True}], "\<\"\"\>", "\<\"\"\>", 
      StyleBox["\<\"dissociation\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->12,
       FontWeight->Bold,
       FontVariations->{"Underline"->True}], "", ""},
     {
      StyleBox["\<\"Host:\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`h0in],
       FieldSize->8], "\<\"M\"\>", 
      StyleBox["\<\"time-max = \"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`tmax],
       FieldSize->8], "\<\"sec\"\>", 
      StyleBox["\<\"time-step = \"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`stepsize],
       FieldSize->8], "\<\"sec\"\>", "", "", ""},
     {"\<\"\"\>", 
      DynamicBox[ToBoxes[$CellContext`h0in 1000000, StandardForm],
       ImageSizeCache->{
        22., {0., 
         11.}}], "\<\"\[Mu]M\"\>", "\<\"end time\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "", ""},
     {
      StyleBox["\<\"Dye:\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`d0in],
       FieldSize->8], "\<\"M\"\>", 
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(equ\\)]\\)(HD)\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`kequhdin],
       FieldSize->8], "\<\"\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\)\"\>", 
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)(HD)\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`khd1in],
       FieldSize->
        8], "\<\"\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\"\>", 
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(-1\\)]\\)(HD)\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[
       Dynamic[$CellContext`khd2in = \
$CellContext`khd1in/$CellContext`kequhdin, None],
       Background->GrayLevel[0.85],
       FieldSize->8], "\<\"\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\"\>"},
     {"\<\"\"\>", 
      DynamicBox[ToBoxes[$CellContext`d0in 1000000, StandardForm],
       ImageSizeCache->{
        22., {0., 
         11.}}], "\<\"\[Mu]M\"\>", "\<\"lg(\\!\\(\\*SubscriptBox[\\(K\\), \
\\(equ\\)]\\))\"\>", 
      DynamicBox[ToBoxes[
        Log10[$CellContext`kequhdin], StandardForm],
       ImageSizeCache->{
        58., {0., 
         11.}}], "\<\"\"\>", "\<\"ingression\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"egression\"\>", "", ""},
     {
      StyleBox["\<\"Signal-HD\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`sighdin],
       FieldSize->8], "\<\"\"\>", 
      StyleBox["\<\"Signal-D\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`sigdin],
       FieldSize->8], "\<\"\"\>", 
      StyleBox["\<\"Signal-0\"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InputFieldBox[Dynamic[$CellContext`sig0in],
       FieldSize->8], "", "", "", ""},
     {"\<\"HD complex\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"dye alone\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"Startsignal\"\>", "", "", "", "", ""},
     {
      StyleBox["\<\"Show: \"\>",
       StripOnInput->False,
       TextAlignment->Right,
       FontSize->16,
       FontWeight->Bold], 
      InterpretationBox[
       StyleBox[
        RowBox[{GridBox[{
           {
            CheckboxBox[Dynamic[
              MemberQ[$CellContext`species, 1], 
              BoxForm`TogglerBarFunction[$CellContext`species, 1]& ],
             DefaultBaseStyle->"CheckboxBar"], 
            StyleBox["\<\"Simulated signal\"\>", "CheckboxBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "  ", GridBox[{
           {
            CheckboxBox[Dynamic[
              MemberQ[$CellContext`species, 2], 
              BoxForm`TogglerBarFunction[$CellContext`species, 2]& ],
             DefaultBaseStyle->"CheckboxBar"], 
            StyleBox["\<\"Data\"\>", "CheckboxBarLabel",
             StripOnInput->False]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 2},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.21]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}]}], "Deploy"],
       CheckboxBar[
        Dynamic[$CellContext`species], {
        1 -> "Simulated signal", 2 -> "Data"}]], "", "", "", "", "", "", "", 
      "", "", ""}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsubsection",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontSize->18,
  FontColor->GrayLevel[0]]], "Output",
 CellChangeTimes->{
  3.7773044485778923`*^9, {3.77730450107603*^9, 3.7773045240428967`*^9}, {
   3.7773050569600472`*^9, 3.777305064305379*^9}, 3.777305719739765*^9, 
   3.7773074135207524`*^9, 3.777307596365286*^9, 3.777307807486005*^9, 
   3.777307969165112*^9, 3.777700238676891*^9, {3.7777249599344783`*^9, 
   3.7777249957625513`*^9}, 3.7777251844489794`*^9, 3.777725224071375*^9, 
   3.7777255007767577`*^9, {3.777725604191798*^9, 3.7777256239212112`*^9}, 
   3.7777267483768625`*^9, 3.7777275663908224`*^9, 3.777727607004233*^9, 
   3.7777277498903346`*^9, 3.777740015487933*^9, 3.7777400772443933`*^9, 
   3.777741208925778*^9, {3.777741444525569*^9, 3.7777414545861855`*^9}, 
   3.777741500335758*^9, {3.777741578505554*^9, 3.7777415980453434`*^9}, {
   3.777741725895293*^9, 3.7777417469757037`*^9}, {3.777741801159978*^9, 
   3.7777418521454353`*^9}, {3.7777419579548235`*^9, 3.7777419833954673`*^9}, 
   3.7777420392454357`*^9, 3.777742162966896*^9, 3.7777422656036053`*^9, {
   3.777742613648672*^9, 3.777742622420924*^9}, 3.777742904444055*^9, 
   3.7777442625989084`*^9, 3.7777444057536583`*^9, 3.777744473497181*^9, 
   3.777744637385418*^9, 3.777744909768311*^9, 3.777744975142334*^9, 
   3.7777454775863647`*^9, 3.777746069703472*^9, 3.777782017265024*^9, 
   3.7782374574534616`*^9, 3.7784094142941303`*^9, {3.778409775659788*^9, 
   3.7784097908858676`*^9}, 3.778411489616253*^9, 3.77841159864322*^9, 
   3.7784118034778347`*^9, {3.7784119109530993`*^9, 3.7784119285154333`*^9}, 
   3.778412012203407*^9, 3.7784120510421705`*^9, 3.7784121211248455`*^9, 
   3.7784122479365487`*^9, 3.7784126135617948`*^9},
 CellTags->"loadcellHD",
 CellLabel->
  "Out[591]=",ExpressionUUID->"1d9b38aa-d107-4ccd-a0c5-ad9943bbcc36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"step", " ", "=", " ", 
    RowBox[{"end", "/", "100."}]}], ";"}], "\n", "\n", "\n", "\n", "\n", 
  RowBox[{"(*", "Import", "*)"}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"dataimport", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"f", ",", "\"\<Table\>\""}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"end", " ", "=", "  ", 
    RowBox[{"Max", "[", 
     RowBox[{"dataimport", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"step", " ", "=", " ", 
    RowBox[{"end", "/", "100."}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"jascoImport", ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ";", "\n", "\t\t", 
      RowBox[{"dataHeader", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t\t", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"dataimport", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"dataHeader", "=", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dataHeader", ",", 
            RowBox[{"dataimport", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "All"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"i", "++"}], ";", 
         RowBox[{"Off", "[", 
          RowBox[{"Part", "::", "partw"}], "]"}]}]}], "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"dataXY", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"NumericQ", "[", 
         RowBox[{"dataimport", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"dataXY", "=", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dataXY", ",", 
            RowBox[{"dataimport", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "All"}], "]"}], "]"}]}], "]"}]}], ";", 
         RowBox[{"i", "++"}], ";", 
         RowBox[{"Off", "[", 
          RowBox[{"Part", "::", "partw"}], "]"}]}]}], "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"dataFooter", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"First", "[", 
          RowBox[{"Dimensions", "[", "dataimport", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"dataFooter", "=", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dataFooter", ",", 
            RowBox[{"dataimport", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "All"}], "]"}], "]"}]}], "]"}]}], ";", 
         RowBox[{"i", "++"}]}]}], "]"}], ";"}], "\n", "\t\t", ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"dataXY", "=", "dataimport"}], ";"}]}], "\n", "\t", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"resetToMin", ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"posMin", "=", 
       RowBox[{"First", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"dataXY", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"Min", "[", 
            RowBox[{"dataXY", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minimizedPart", "=", 
       RowBox[{
        RowBox[{"Length", "[", "dataXY", "]"}], "-", "posMin", "+", "1"}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"dataXY", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dataXY", ",", 
         RowBox[{"-", "minimizedPart"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"dataXY", "=", "dataXY"}], ";"}]}], "\n", "\t", "]"}], ";"}], 
  "\[IndentingNewLine]", "\t"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"ymax", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"dataXY", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"ymin", "=", 
    RowBox[{"Min", "[", 
     RowBox[{"dataXY", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"adjusteddata", "=", 
    RowBox[{"dataXY", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cfac", "*", 
         RowBox[{"x", "/", "factor"}]}], ",", 
        RowBox[{"normalize", "[", 
         RowBox[{"y", ",", "ymax", ",", "ymin", ",", "normchoice"}], "]"}]}], 
       "}"}]}]}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"end", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"adjusteddata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Data", " ", "summary"}], "*)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataplot", "=", 
    RowBox[{"Manipulate", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Show", "[", "\t", "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a2", "*", "adjusteddata"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a1", "*", 
            RowBox[{
             RowBox[{
              RowBox[{"kinHDParaCacheSignalall", "[", 
               RowBox[{
               "h0in", ",", "d0in", ",", "sig0in", ",", "sighdin", ",", 
                "sigdin", ",", "tmin", ",", "tmax"}], "]"}], "[", 
              RowBox[{
              "khd1in", ",", "khd2in", ",", "sig0in", ",", "sighdin", ",", 
               "sigdin"}], "]"}], "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Signal\>\"", ",", 
           "\"\<[\!\(\*SubscriptBox[\(HD\), \(2\)]\)]\>\"", ",", 
           "\"\<[D]\>\"", ",", 
           "\"\<[\!\(\*SubscriptBox[\(HG\), \(A\)]\)]\>\"", ",", 
           "\"\<[\!\(\*SubscriptBox[\(G\), \(A\)]\)]\>\"", ",", 
           "\"\<[H]\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Simulated Data\>\"", ",", "\"\<Subsection\>\""}], 
          "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Signal / INT\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time / sec\>\"", ",", "None"}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"FrameTicks", "\[Rule]", "All"}]}], "\n", "\t\t\t\t", "]"}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a1", ",", "1", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Signal\>\"", ",", "Red"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a2", ",", "1", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Data\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"ControlPlacement", "\[Rule]", "Right"}]}], "\n", "\t\t\t", 
     "]"}]}], ";"}], "\n", "\n", "\t", "\n", "\t"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inputline2", " ", "=", " ", 
    RowBox[{"{", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Exact input parameters \>\"", ",", " ", "\"\<Value\>\"", ",", 
        " ", "\"\<Error\>\"", ",", "\"\<Unit\>\"", ",", " ", 
        "\"\<Fixation\>\""}], "}"}], ",", "\n", "   ", "\n", "       ", "\n", 
      "    ", "\n", "   ", "\n", "   ", 
      RowBox[{"(*", "Dye", "*)"}], "\n", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<  \!\(\*SubscriptBox[\(K\), \(equ\)]\)(HD) = \>\"", " ", ",", 
          " ", "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "kequhdin", "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"kequhderror", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", "  ", 
        "\"\<\!\(\*SuperscriptBox[\(M\), \(-1\)]\)\>\"", ",", "\n", "    ", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "kequhdfixed", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", " ", "->", " ", "\"\<Fixed\>\""}], ",", " ", 
            RowBox[{"2", " ", "->", " ", "\"\<not fixed\>\""}]}], "}"}]}], 
         "]"}]}], "}"}], ",", "\n", "   ", 
      RowBox[{
      "{", "\"\<\!\(\*StyleBox[\"affinity\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"of\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"guest\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"for\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"host\",FontSlant->\"Italic\"]\)\>\
\"", "}"}], ",", "\n", "      ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<  \!\(\*SubscriptBox[\(k\), \(1\)]\)(HD) = \>\"", " ", ",", " ",
           "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "khd1in", "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"khd1error", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", "  ", 
        "\"\<\!\(\*SuperscriptBox[\(M\), \(-1\)]\)\!\(\*SuperscriptBox[\(s\), \
\(-1\)]\)\>\"", ",", "\n", "    ", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "khd1fixed", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", " ", "->", " ", "\"\<Fixed\>\""}], ",", " ", 
            RowBox[{"2", " ", "->", " ", "\"\<not fixed\>\""}]}], "}"}]}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "{", "\"\<\!\(\*StyleBox[\"ingression\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rate\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"constant\",FontSlant->\"Italic\"]\
\)\>\"", "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<  \!\(\*SubscriptBox[\(k\), \(-1\)]\)(HD) = \>\"", " ", ",", 
          " ", "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{
            RowBox[{"khd2in", "=", 
             RowBox[{"khd1in", "/", "kequhdin"}]}], ",", "None"}], "]"}], ",",
           " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", " ", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"khga2error", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", " ", 
        "\"\<\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\"", ",", "\n", "    ", 
        "\"\<\>\""}], "}"}], ",", "\n", "   ", 
      RowBox[{
      "{", "\"\<\!\(\*UnderscriptBox[StyleBox[RowBox[{\"egression\", \" \", \
\"rate\", \" \", \"constant\", \"                                           \
\"}],FontSlant->\"Italic\"], \"_\"]\)\>\"", "}"}], ",", " ", "\n", "   ", 
      "\n", "           ", "\n", "   ", "\n", "   ", "\n", "   ", 
      RowBox[{"(*", "Signals", "*)"}], "\n", "   ", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<  Signal-0 = \>\"", ",", " ", "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sig0in", "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"sig0error", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", " ", 
        "\"\<a.u.\>\"", ",", "\n", "    ", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sig0fixed", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", " ", "->", " ", "\"\<Fixed\>\""}], ",", " ", 
            RowBox[{"2", " ", "->", " ", "\"\<not fixed\>\""}]}], "}"}]}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\"\<  Startsignal\>\"", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<  Signal-HD = \>\"", ",", " ", "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", " ", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sighdin", "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", "    ", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"sighderror", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", "  ", 
        "\"\<a.u.\>\"", ",", "\n", "    ", 
        RowBox[{"RadioButtonBar", "[", " ", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sighdfixed", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", " ", "->", " ", "\"\<Fixed\>\""}], ",", " ", 
            RowBox[{"2", " ", "->", " ", "\"\<not fixed\>\""}]}], "}"}]}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\"\<  Signal from HD complex\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<  Signal-D = \>\"", ",", " ", "Bold", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "16"}], " ", ",", 
          RowBox[{"TextAlignment", "\[Rule]", "Right"}]}], "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sigdin", "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}]}], "]"}], ",", " ", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"sigderror", ",", "None"}], "]"}], ",", " ", 
          RowBox[{"FieldSize", " ", "->", " ", "8"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], ",", " ", 
        "\"\<a.u.\>\"", ",", "\n", "    ", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "sigdfixed", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", " ", "->", " ", "\"\<Fixed\>\""}], ",", " ", 
            RowBox[{"2", " ", "->", " ", "\"\<not fixed\>\""}]}], "}"}]}], 
         "]"}]}], "}"}], ",", "   ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<  Signal from dye alone\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "fitbutton", "}"}]}], "}"}]}], " ", "\n", "}"}]}], ";"}],
   "\n", "\n", "\n", "\t", "\n", "\t", "\n", "\t", "\n"}], "\n", 
 RowBox[{"Print", "[", "\n", "\n", 
  RowBox[{
   RowBox[{"kinShow", "[", 
    RowBox[{
    "khd2in", ",", "khd1in", ",", "h0in", ",", "d0in", ",", "sig0in", ",", 
     "sighdin", ",", "sigdin", ",", "tmin", ",", "tmax", ",", "species"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{"{", 
     RowBox[{"initializebutton", ",", "variablessavebutton"}], "}"}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"inputline2", ",", " ", 
       RowBox[{"TableAlignments", " ", "->", " ", "Left"}]}], "]"}], ",", 
     "\"\<Subsubsection\>\"", ",", "Black", ",", 
     RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Please keep in mind, that in this fitting model, all concentrations \
should be known and fixed. The affinity constants should be known as well as \
the ingression rate of the dye.\>\"", ",", "Bold"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\t"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.725254137096717*^9, 3.7252541374383726`*^9}, 
   3.7252542612562513`*^9, 3.7252544944863997`*^9, {3.725254533362337*^9, 
   3.725254570688819*^9}, {3.725266474268921*^9, 3.725266548845482*^9}, {
   3.7252666294061303`*^9, 3.7252667708541512`*^9}, {3.7252668022370715`*^9, 
   3.725266869219159*^9}, {3.725266934092969*^9, 3.725267002935566*^9}, {
   3.725267082407237*^9, 3.725267090502107*^9}, {3.7252671408292456`*^9, 
   3.725267312501072*^9}, {3.725267348905128*^9, 3.725267554516585*^9}, {
   3.7252676349072037`*^9, 3.7252678443005934`*^9}, {3.725267909454728*^9, 
   3.7252679201070642`*^9}, {3.725267990548365*^9, 3.7252680757359395`*^9}, {
   3.7252682283001833`*^9, 3.725268349818635*^9}, {3.7252683847024937`*^9, 
   3.7252685567310295`*^9}, {3.7252691527517395`*^9, 3.725269257317491*^9}, 
   3.7252694400329475`*^9, {3.725269497612366*^9, 3.7252695697052903`*^9}, {
   3.7252696024563894`*^9, 3.725269630639729*^9}, {3.725271273815401*^9, 
   3.725271277487241*^9}, {3.7268907106190834`*^9, 3.72689071124411*^9}, {
   3.7269070572490234`*^9, 3.726907086038515*^9}, {3.726907117868949*^9, 
   3.7269072153966136`*^9}, 3.7287149892063684`*^9, {3.728715032799965*^9, 
   3.7287150343933105`*^9}, {3.72871510693785*^9, 3.728715220519114*^9}, {
   3.7287153709218607`*^9, 3.7287154265423117`*^9}, {3.728715516344833*^9, 
   3.728715615093551*^9}, {3.7287156523161182`*^9, 3.7287156820196157`*^9}, {
   3.757870137073166*^9, 3.7578701429100647`*^9}, {3.757870182012275*^9, 
   3.7578701912248917`*^9}, {3.7578702517991*^9, 3.757870255339902*^9}, {
   3.7578708676260653`*^9, 3.7578709926086235`*^9}, {3.7578711939046893`*^9, 
   3.7578711952078*^9}, 3.777304561116952*^9, 3.777304909683202*^9, {
   3.777304948294718*^9, 3.777304948497836*^9}, {3.7773051850844364`*^9, 
   3.777305185202824*^9}, {3.7773053053244767`*^9, 3.7773053066681547`*^9}, 
   3.7773056630061817`*^9, {3.777305909555831*^9, 3.7773059202484484`*^9}, {
   3.7773059600435843`*^9, 3.777305979360731*^9}, {3.7773061408662653`*^9, 
   3.7773061642780447`*^9}, 3.7773063401682315`*^9, {3.77730706600395*^9, 
   3.777307196310295*^9}, {3.777725038980324*^9, 3.777725122808774*^9}, {
   3.777725232701145*^9, 3.777725265559251*^9}, {3.777725308856189*^9, 
   3.7777253281521273`*^9}, {3.7777253684485636`*^9, 3.777725415795888*^9}, {
   3.777739441559067*^9, 3.777739484220068*^9}, {3.777739518445937*^9, 
   3.7777395919905496`*^9}, {3.7777396631259875`*^9, 3.777739716604776*^9}, {
   3.7777397640347147`*^9, 3.777739797340669*^9}, {3.777739828337578*^9, 
   3.777739835714514*^9}, {3.7777404331511555`*^9, 3.7777404375866385`*^9}, 
   3.777741223865901*^9, {3.777741254315884*^9, 3.777741271935944*^9}, {
   3.7777420749448624`*^9, 3.7777420950076284`*^9}, {3.7784118320472403`*^9, 
   3.7784118446069603`*^9}, {3.7784120751063213`*^9, 3.7784120772956977`*^9}},
 CellTags->"initialroutineHD",
 CellLabel->
  "In[663]:=",ExpressionUUID->"65e619f9-c74a-41db-8215-0c65d8f5a4cc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{GraphicsBox[{{{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0], 
             Thickness[Large]], 
            LineBox[CompressedData["
1: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
             "]]}, 
           Annotation[#, "Charting`Private`Tag$132358#1"]& ]}}, {}}, {{}, {{{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1:eJw83Hc8le8bB/DjcI7jiFRSSZEkaUslqesuKZW095L20NAuSZPWt9KSSkLS
jkqStJCQ7D3OPvbe8/dwrvvXP9+XF+fxjPu+3p/rvh/fIY77lmxls1isGfos
Vtd/6b+kcoMYx6PPoO15dcoCRwf4vt7mm/3tF/j1flD81I2IFtddEYduHYPY
A6+lAZp++H03cHjMcnpV+AJOar+ZIzxxHrIuhxwvfxgIip/3AIde866l7nsB
x4uNx/NeXQWPjtAl9/eH4+dvgN6l7RHXGoPBqnDhtXt7PcHi7X8kuNdzPN5t
iFLtPde7IhTC5/Zgj3S/C4vs/H8MO+2Px/eCHf+2v6+0eQ+WH2KPRD72hipP
7V9r3b/g73sIe0Puho2o/AFhgy+ULg7zAQOvwf9ib3/H3+8L4/pxQt0iP8HD
KIN3zjueQIIwrOnF2XA8Hz8wbv51RPryO+Q2d/1Cf7DdKVr77k8Unl8ABFWA
mu60TzBwbL4R98xTMF8sjM16HY3nGwhB9RN29dEJhTVbpjJHfAba6y5z4xaF
4vkHgdtbaZ7fvWjwvt/17zmktXwrWvolEq/nBRjpvUnZvikcshMbl4qfvoSr
jwMOuHyPwet7BQEfVnxLmhAFA1RWaI4OeQ0tw1eNdppBr/cNhMG6X4Z2sbBq
StcB3wLr4uwNYw8k4vW/g0Me24xHzf8FdpMvzXCQvoPYbZYXe8RG4/0IhqBH
HRt3kRgoW9x1xGDYsTGsXhqYiPcnBBwK1Lw412Pgyh556/PqEPC9M7fPvN3x
eL/eQ16CUvRW6V8Y6a7DXMJ7sLpsHnzY4hfevw9g4Tz+5zTnKIh/YhNa2/4B
whyFAbMGxeL9/AhGBksr8m/+ht3M3eqvEgoO5tfFU+cl4f0NBa2Tc6aMfRML
/Ez//dP4n8DWXyfk6LnfeL+Z5zpmfcPWpgR40XW5WmFg4v1JOfRdPN7/MDDf
lbJu1NdEmNd1OJ3PUFZrYuG0PR6fx2cQBAbfz/H4DSVdt1svHPbL69THFsTj
8wkH3skhlQe0kqHr7iUZfoFDT3ubzf8Qhc/rC6iU6wQncVJhxLrrP+tNIuDD
rvbfw84k4POLgHVLnGfdZifAH+ZoumO/QtUt/saX/AR8nl9h1rO1t+a9/QM7
b5a7wMRIMPmreU7tRhw+30gou2k3tZ9SMjAnx1zyN5hl6HR72fxEfN7fQPdr
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
ik0W7A2k+9nKhHhOurXGWoqeM+Px4M7+P77I0HNl4v6LmzfkpgQ9VybfrKzK
vy+i/bQyeSq4o/dhCH2/hXne+nWssoHUc2VC9ycVnisTu2vBk0vC6Pq5MrlW
rOZc9Il6rkx0NiWNv8eMf4XnyqTqVMt+nXd0vY2ZH2K7KTOXytFzZbKMteSS
7hkpeq5MUkarKV98WYSeqxBHT42yGpYMPVchYx848Gd00PV3FRJ09/wJrWi6
36ZClpwLb1LyKkbPVch0o7rFtxgfFJ6rEN/z/r2a99D1eRWik/MrbaehFD1X
IbM1nR6n9yxCz1VIwZCHho3BtD9XIS9b5Yv23aDr98zxF4+YH1NAPVchAwIG
ad1i8qfCcxVS3UvPffRt6rkKKRNtOPyUuf8Kz1XIAfnGOpejtD9XIaNm6VRY
9StCz1VI3nm1GVafpOi5Clm29/Nnj1lS9FyFgJu6XX1PKXquQixLrMaIdsvR
c+bzi7r+D1C0P1chQx6Zr5+1gu4PqPx/fCg8VyHjXEJ2jd4qR89VyI6ROxe3
RcrRcxUyU9hHOvKiHD1XIRaqScYTF8vQcxUSYe3ZK+C9FD1XIQ6HNc6qt8tw
vVGFaPv69KobJUfPmef1bdaMi3q0P2e+Npz1ncv0vwrPVcgwNbewHzeo58z1
BbwM01giRc9VCEf7t9mf5yL0XIWI2kM4P3bS/lyFBA6yHW4wXoaeqxA3Y9VL
KUep58z13rs3etlHOXquQmZNsl6z77MUPVchuwauDl4JMvScOf8Z1m6fj9D3
C1XIJN/Du66WUM+Zn//R543XPCl6rkKO7M3+OZ3p3xSeqxDuf4sm24bS/lyF
tDjnzNAZK0PPVchcY834oXbUcxVye3tA+ozpdD1UhRi/DPeYsFqGnquQmB+H
hw0ktD9nxqfH9TOjmoXouQr5z8hFVjZMjp4z4+fl7qg6Zv4pPFdh+ukrl4Xm
MvRchTQ0+E984ChGz1VI0vGyBwkfaX+uQnwmrRuSFiRHz1XIw0Gf6rRbqOcq
JPzK5kGCvbQ/Z+7X4odJJ9voeitzf0a2Bk+Ol6PnzPz6VryMM6AYPeeQ83nT
79kNkaHnHPL4Y8m9SaPpeiyHVNmc/fjwBO3POcRk6plNhkVy9JxDpk/KKMrx
pv05hwyCz+oqLRL0nENE1+SnDpVRzzlkVbAwKH8d9ZxDvu48IKv9QfdrOGSW
r/B11YQi9JxDNkd8fDR2FX0fg0M+BFsbODDjUeE5h6yu0mtJ7EP7cw7xkF4+
OHeeDD3nEPp+sMJzDimqGbZ1VBz1nEN+xp69L3hYhJ5zyBZz24gtf+ToOYck
aKy6Mf4w3f/hkBi5+rwFtjL0nEPMNgWFbRwuR885ZPagnxXGQyXoOYdkZc7s
2GokRc85JC9s376Xj+ToOYf8jVy+8PMsMXrOIdrr7ooCwqnnHPJig49+ygPq
OYc0Wf1Wf+lBPeeQsDVN6SPv0v0kDvHuufzyw570fTDm+ZQ4VK46L0fPOaS3
353GabF0/ZlDXHfFqKpIitBzDplwRRSXeZmuR3MIO+hk5vx9QvScQ3Lf/3ar
+0c955C0DSO99Vxpf86Mj/G/JJWr6PtkHDL4q6w9dpMMPeeQRQuqnD80FqHn
HBK7+V39VV4xes4hS/fPZGmWUc85ROLQar7xDO3POeSI1lmzw1Fy9JxDLH64
b3KdRj3nkKiTSxaq60rRcw7RUW3++/AW7c85xNxXrLa4QI6ec0jHkd+Fx2/Q
91E5RGu2a3vuMOo5c3y3HieGSannHGL/43nM7ZfUcw7RHd5f8PFrEXrOIY7i
hb9SUmToOYecKFu4dQjTPys8Z57Ht91Xr32QouccUnP+0Ir9I2XoOYcEbBj/
ZtopKXrO/P4d13va/yhCzznku7WRc+E3ul/OIT1ftweNPEH305jxsbfcP+Qv
9ZxLItxad9dEyNFzLtkysAx+GcjQcy4RnZ2kt9Ncjp5ziYlw6obNtTL0nEs4
Rgbnroyl+29cIrlb8nxpTxl6ziWpEWdNZcz8VXjOJcYlun/i2+l6O5esmKTX
cwdTXxSecwnd71J4ziV0v0rhOZfsWriYsM2K0HMuOb/p5+u60iL0nEuSZohO
9ztE+3MuKT79906xGX0/h0sWTbN3TmM8VnjOnG8qf9n53kXoOZf0N/BpWTuT
9udc4uDquuBtHzl6ziWPVs5buVBM19u5xCM1KE9pkAw955LAo9dMC5n6rvCc
S2pOKl9J0Kb9OZfwvjjMSJtCPeeSkY38W5pnJeg5l9xL7LhZEkDX27mE7kcp
POeSbT8sHoEF9ZxL+nb9uZ4PfR+IS06olh01/U495xK6/6LYT+SStN1vauLE
9P0BLuk9z7B0yBkxes4lVqti9X/PkaPnzPHdyvbvY/KownMuKUh0X3bITIqe
c4mlxfnBquNof84liVesUrIyZOg58zz39n92Ipx6ziV6IbGmI67I0XPm+3bz
N05slaLnzPOs2FkQzPRLCs+5xEKs3vy0ga63c4kdZ6dNDJPHFJ5zSb+Ko47L
2ml/ziXWe7/0La6QoOdc4vby8uMTM4vQcy55uH1NY60jXW/nkpYtxzIfzaJ/
T8Ql3BvZp/6up+vtXNLjgvLogWEy9JxLIvf7DRw3WYaec0lA3rnrz5n5rPCc
eX7F3gG1FbQ/5xIvafJvbiD1nEvaSnXucH/R9xmZ+VZhJFvmT/tzLjEPe240
mydBz7mkemjHoMM/6H4plxj+NFjwZWoxes4lPs1Tj/o/laLnzPw8cZDd4FWE
njPjfdDSIWZraH+uSmZt5n/In0Q9VyXvqta8y6mSoueq5L+8f39WrpKh56pE
dLR2teH+IvRclWyoVDFe2F6CnquSJWs4o3x20vV2VXIoxu7fmoVF6LkqMTsw
7zO8L0LPVcmi2byKOx5y9FyVfJf7ZIWNoP25KlnlPqXRlyNHz1XJi+09Sw+H
UM9VSVJQ7RW/NCl6rkom22mXnqgRoeeqRDNm9bC/hjL0XJUYTFt2sX6XDD1X
JTXLnbZ595Cj56rEQVvQPPo+XW9nrmdpWsOmOtqfqxLfS/NZ7yzl6LkqGREw
8INZFX2/Q5U0iCxWJV6jnqsSdu2HqZkrZOi5KtlzjqV/fXAJeq5K7l5f/sS8
ha63q5JjjZ90eprI0HNVEtH+qTT4Fl1vVyUCjRP1c8TUc1VSVe5iazNcjJ6r
Ej9bx+OeFXL0XJX89JLO2dBJ3xdRJZ5Xdigne1HPmfN9/1j1KzP+FZ4z52vu
87POT4qeqxKvB0cP21jL0XPmfJzvK51IoZ4zz0tjYnvJeCl6rkrWbk/iWrIk
6LkqMSyL7Wj0lKLnqmS5ut0Da6Dr7aqEZfDkfNkPut6uSrg5Lm6vYuh6O/N8
Iib+VN1OPVcl5tNGT61g5pfCc1Vif/RrHy8r+vcjqmTLdbeANpkQPVclgdKL
XzzqZei5KlmRPO/+LEcZes48T81poXrNxei5KpmgfWzv5QD6vpoq6R/1712/
QLrerkpi74+Pj/ArRs+77s+Y6OHT5Og58/zcJ4LgnRw9VyXOUv0NfTPoersq
+dd/9Pv3NnS9XZUMXuOTaMr0IwrPmfMbW5o98hV9f12VpAXDjsftUvRcldgu
Dj+V3FeGnquSm86/MnqViNFz5vmA2/n7W6jnPHIpOislajp9/5VHAj2dyzlM
vlB4ziNnPZdIFobQ9XYe6b9sQXbRGNqf80hZc1GL/3y63s4jblp9trq1ytFz
HpkV5VaW5VuEnvMI+876lxp9aH/OI1tOJuj07iFGz3mkyGKvqThfjp7zSKLJ
ReUj8bQ/55Gw5Yvkh5i8qfCcR5bL3Z0+SGh/ziO+Y7/apTL9nsJzHtl2Y2No
DOO3wnPm/LPOTWefoevtPBKboOR1mk/3z3kk6uy583Ouy9BzHql6/Dts7T66
3s4jAeN3LfvXKUHPeWTBoGNa2XPoejuP3C67c+VNG/WcR0rUzwr/OsvRcx7R
zqrOjzkkQ895xC725vz3unS9nUdSgqysvudI0XMeeTfw/q9fMXL0nEcatHVI
WIIcPeeRtLedyZPXydFzHhk1Or3/OkO63s4jemuWD9aYRd/35ZGadctLw04W
oec8cnylqf19ffq+EI94GU41XP62CD3nEdN5O3q9VaXvD/HIoT2HdzvYy9Fz
5n4kk7+OmkXoOY8oSZckb9gjRs955LJbfuRDfxl6zowXjWVZ+w3oejuPmLsP
qCiZQftz5nm5mu/bZEH3z3nEbN3cEzEbJeg5j/hszokzMqCeM/djUbHFmpUS
9JxHHvbm3lJj8pjCcx4p9g5ZpXWOrrfzyI4B7uEfbsrRcx5xYd1dOme9DD3n
kZ81pvMH1dH1dh6pc3IZ/9qK/n0Rj4TLx283UqeeM/Nl4DeB9yXan/PIlLFn
aoZr0PcXmfOvbcxMXS9Hz3lE/1HpK+NFtD/nEYdvzea8PbQ/5xHLeds+2q+n
nvP+v96o8Jy5f3LulnWD5eg5j9w1fP5jgH8Res4jKwZ994w5Rt9/5JEbLhb+
xgdpf65GbhuPqCiSStFzNWJhIK4Jq5Wj52rkwEmLNUeWi9FzNeK9e2ia4CXd
P1cjkc1u+1gr6fuSasQvr3rM3hjqOXN898fGkv97rkZ2vH0c2reXFD1XIxFV
5reUx9D9czUy7uvoJRe/Us/VyOUfPRsy66XouRrhtxllz/Oi++dqpMfTOWNy
/xWj52rEZ+B3zfgNcvRcjQwMzfk0IYf+PYUa8VV/t9e4kPbnaqSu+D+XYCa/
KDxXIzpfEs5bnKP9uRrRvef9ScL0LwrP1YjzHjF/2EzquRoxA6MhFnvpersa
SRzi47pyHfVcjWzoHb3ESUr7czXiEFc7e7ypFD1XI5LFgVKNvcXoOXN/hd7z
l+8sRs/VyNKda05WutD3O9XIryFRD8boS9BzNfIz1Jd9fx/tz9VIiQXryuAS
6rkaKRK0DPp9l663q5EhoXNGxDbR/XPmem0PfawvpevtamSL7fv7431k6Lka
ianSPDJqN30/VI3wBuwb4nZUip6rkYLgJO8X5rQ/VyNlNXON/UX0fTI1Yile
9vxXG/VcjdhaPAtecJB6rkbevJyaO3Ua7c/VyI1B+b3KIuj7ZmqkJnCGz0fm
ehSeM8cbv7Q4Lpy+f8aML8v8k6nfaX+uRsJP/tBjiSXouRoJYOUMOsT0SwrP
1UhhxNOvozh0/1yNhBWMmWpTRNfb1cgYQ6NPi3bR/lyNuIo/v8g4QD1XY/oj
/989mH5E4bkaWfZFIzqtkPbnasTg4NWXqp20P1cjoRai/NgkGXquRm45mFbJ
f4rRczUyPTRYK+Ee9VyN7MrJ/9Mho+vtamSd7e5+s5xk6DlzPTkttkYj6ftv
auTY4aVBXufo/jnz/DeYaF3tkKHnfOJ7P2CR8/ci9JxPXqUvHjXNQ4qe8///
/pjCcz5ZJt0TUztOip7zyRLPmHsTn9L1dj45ZJiy44yUes4nJlPe7jptWYye
84nDy/9WTr0nR8/55CK4x5Qw9VvhOZ+sGZASYzaTes4n05t+rk7eW4Ke80mk
de6PH5+p53wyKqq67xht2p/zSVtxRofPEOo5n0RZ3xQfLJCi53zyYWnZ9bua
tD/nE9VAnSXTBPTvaZjz/5qr/MmiCD3nk9MnAx7l+ND34fhEEBd51L2Yrrfz
SdaGhWtv3aX9OZ9kv3dNyvhD98/5pCzwiotyDPWcTzZsdG8/dagYPeeT95Ex
xzTD6N/XMtefF6zHBuo5n2xTOlb5ZFMpes4nESP7Pku4Xoye88mRLw+cFt4r
Rs/5ZJFF5YSpAfR9OD5xbTTy8J8tQ8/55O/Ka7XzSyToOZ/kXTvRQ/BXip7z
yaS/VlEt26nnfHI7rlfdRWsZes6c373cRrebReg5n7wJdX10VqkI3w/mk5LW
QkG5jK6380na7DdjbdaU4PvCfBJqcukadz5db+eTAL8p+Vcri9BzPtl8+67Z
sSAJes4cz6491jhehp7zyWzfiMi5s6nnfOLsm3v/n3kxes4nKc1+aTrRdL2d
T/Ztr9m9aK8EPeeTliV3yYp+YvScT1wGFn80e0I9Z8aXhv/Dt8Nof84ns/ze
B9wS0v6cT4z2THI3ekj3z/nE7uWeGqMR1HM+cfMbkJbBzD+F53yyqiLMr2o1
fR+OT84OMhm8y0mKnvPJPQf74A25YvScTyy/qk582yJDz5nnt7Q2WS6i6+18
kjCo5UYvJeo5n4TYOb+wukX7c+b6Z3y9sf8iXW9nxpdgntakA7Q/VydaPpbh
fQ8WoefqhB97uOXrS/o+nDp555aV9fI43T9XJ1Y+fjaftxej5+r/7wcVnquT
MSN6WO3LlqPn6qRBLph9Ya0cPVcngW4d9Wet5Oi5OlkV5be4UrMYPVcn3usu
pB3wpJ6rE91v7NTPzPhUeK5OLj+aH2v7gPbn6uTn/p7XopbTv59QJ+fLBPdG
vf4fV28eF/P7/f9nydY0zb6XJGsoSVLSEZJkJ0mKJElIWZOQsku2bElSSCQh
2bIllYg2qSylZbYihFeS3/X+zHXme7v9/uw2zXOu57Wc+/Oc8zjniTzXgx1z
FXs6pSDP9WB718JzeTmfKc/1oLP/x04PTqN/rgdHP68MGqhGnuvBtgu16U/X
Yryd/P5j9wutf+opz/WgeF3g6r/BCspzPZiRfmGcsIuS8lwP4pa+SV91D/1z
PTAWrrue7Inxdj247BpSEeiP+XM9sDAb8Nn8APrnerB71fLnYsIXDc/J/QZP
7zvkF/JcDwIeF/wNJc/nGp7rwc499wfppjVQnutBnsEDPnRFPZweWCdOWmx+
AvPnehD6a/IGF8JjDc/JegTw4jnEfmp4TtbPJvBVxAg55bkezDq9jfvrMfJc
D8JNRx42L0Ce6wFjrLXJjNUqynOyH1bN0LkVWkd5rgfTmoOMuwyqpzwn43uc
XWbj1Eh5rgeP+1jafeegf07md8MV3aVkPBqek/Up8EhKmoz+OZmvROeD3oR3
Gp7rQZ//va7kGPJcD3g1PikB+9A/14PmEWELP1ghz/W0+QgNz/Wgnbfjuquq
kfKcrDdn6AdWJdaP6sFNL/NZ74tRD6cHhwcal1pux/y5Hvjf8D/S2QP16XoQ
xus0nGeJ/jlZrznp4af/U1Ke64H6elT0kEiMt+uBIDXEav1fjLeT/R82ae5/
X5HnehDd3MZ6sA/9cz3I/fB52PNRDZTn5DzXjJV/D0aeMyDtwbXi7PUKynMG
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
M/v+Q/+cCTq5ScOnlGD+nNxPxBWza29Q3072a2X16VfsRspzJkRw6hf0TUE9
HLk/8xp9F/cGynOyP3aZmz28jvlzJhy1ftGctwZ5bgCHMxf6xfk3Up4bgPHN
7FrHmQ2U5wZwiTXP/OpbOeW5AUSykp/d6475cwOwlleUd8mQU54bwF1eOmtd
BMbbDaDSq+beK2KvNTw3gICoX13f3UGeGwB0L/rdNQzj7QYwrXyM32Q9BeW5
AfD4+W/frZFTnhtATszs6MiVCspzAwg6rWxrW4T+ORmf//dai8VKynMDKDX4
dGnnJPTPDeDWM/DyH1FHeW4AO81kCkNf1MMZQKbpBp32P+ifG8Ci6RsWvvuB
8XYD+MpZbnOfgTw3gFhnh4YpqchzA6jVK3wonYb6dgO44NkiLK9C/9wA/JpX
xganYLzdABrU17aNf4zxdgNwqXC3sz3aSHluAMr/zrrsnNhIeW4AYxOdRvx7
0kB5bgDD2ifU6hB/X8NzA/BcZ7kmQ4n+uQHcWVQ9/91h9M8NtP61hucGkG0e
VPejDv1zAzg3plj3wXXUw5Hf29DDWNCE+nYyH6YRbfr9GijPDeCI63qfv411
lOcGEMj4GOw9Vkl5bgCCaF2zAt1GynMD2Lt03JUj85HnBjCm/b+yiFT0z8n+
a6+Ij+M0Up4bgGVIyb8cD+Q5uf6aZTZLfykozw3AtWbBMvFtrFczgLR1XTIH
pcgpzw1g8L1RpwJ/YbzdAD7MfnK34yfy3AB8X/jesb6npDwn+9XwWuSRGeif
k/3UOnPJ66fIcwMIPb484Y8z5s/Jfm/ttGaxAuPtBhCh69Nl3XgF5TkZ/283
wcp+yHMDuH/G+Nm2tAbKcwOYM1T8eXcHxtsNoHNK3u7KRoy3G0DCrwmH5vdq
pDwn96vTq/vQGchzA7jpsD0jfzTy3AC6TTXS0ffF+nMWBHoc7TyZ2H/NeWeB
aN3L1WfXYf8JFlzQ6fvqkAOef/L/g7oWNpkrKO9ZkGTf9jxpDD7fs+DJ074L
JpXVU/6zoFud7d8P5PlJYx9Y4JLTtHDlQzl9HmDBlawhJWmxWA/DAv+otDn3
bsjp8wELhjEaaz81ov1ggdPnYfvVo1Fvx4KuRaOzl3ZGe8ICk+Mn99z0xvo4
FoDffWUo2W8a+8KCzsNcz0ZkKOjzBAtiYkbWDJuD9oalrdfQPF+wIDF18W+O
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
oP6CDV7hanVI90bKczbs/9LBHtahojwn81G1kR13UEV5TvbjgJajacRea3hO
5ufRSZ9YrX9I9stZ76FZofWU52yItua/FExFnrOhoONOzJMFCspzNpRzDl3/
vgl5zoa8bUb/bHRQz0HO35M3u8OslZTnbK2eR8NzYh9q8rt9uIw8Z8PgtJvj
sg8hz8n6hueEjDmF/iZZj5MFKyfvQP0HOc9ts1kVD5HnbMitf3Gj/gLynNir
T8tV97xRz80G/4fjbrfGoT6EDTbx4ZGO0xWU5+T6le1JkWWNlOfEXjmPc7wy
F3lO7PN2b4cyTwXlORuudd3yfs9DrM9mw5Or5qNa3eWU52R8CWFX3mdjP0M2
7HUbqb/IFfNR5H6PuT+TEX9Vw3Ny/hjmS1+JFJTnbMgK0Uu8Rp4XNDxnw637
RYdzZHWU52R+Ha+mrxyhpDwn9lcdk/ygWE55Tu7n6sgpAnfUk7Oh+FKU+v2n
espzNnRUFniv4Ckpz9nw6nDmbctZGA8j9iJwsq3/fjnlORssdnw+u7wS813k
vEzoldsmwvw2G8aEe034bzrqU8l+KmoPtyWfa3jOBsu2j57fCuWU52y4XP1V
Z2wL+tdsiApadHWJLupd2CAbNGLX+jXob7Phhx6X9y4FeU7s07hOC874oN6N
8GFa5I0peaiHIftVfHa2IlVBec6G5tmPvOJdkedsqA4c33/SAQXlOQemHXsc
/jUD9a8c7fOZhucc8Imfc+3yKCXlOQdqTz46t4zYWw3POdCtU0q3fVPRP+dA
kPOBMI8q5DkHrPotM/7vEvKcAx4c5TheCebfObB+sf7d4DjkOQeyvR5Fyns2
UJ5zoNeu8U8j5mO9KwdsMhSLDUzllOcciK888PYgA3nOAeNe39x//UT9HQes
LZ/t0emDelsO7DzJD30+AuP9HKiMaD65uQvqdTgwsHxv+zw7OeU5B+73X5nF
f4I850CkdeQpPQHm9zmwKmVgUrslxgvJ/YTYdKooQp5zYG3Ph3F/HdE/50Do
zIrBA8wx/8+BU0xxa/In9M85wEnJHRJqj/kDDuisWXe/e0Ij5Tm5fqJDy9Vm
5DkHyjOfLLv2HvOHHJBNX8Coi8J+mxy4ecSs9veoJspzDrgrvzzrwsb6ew5s
vLiJ+EBKynMOuAn7PbSOwPo9DrRd7jk12Av9c3I95amm8wwl5TkHCpfs69Yg
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
ZqbVQ6v+cspzcv6CTqWmHcD6Yx5k6CafXeOC+XMeGA2ImulSjTzngcmcD3o/
liLPebBqqHdPQRTmz8l5CgldndQJec6DwwFn77dPwfw52W+jqoRhtUrKcx7w
wg6NmFSI+miy32Yde1s5UU15zgO11Tav6ReR5zwIezKaZ2ymojznafudaXjO
g4FGyVnX25HnPHAz0p8wtwX9cx44ynxO3KlC/5ys/+QTD2UmWC/Fg5/9x+0y
1EGe8yDRbOfrPl3QP+dBodXL3KGdMX/Og9e9veRf7iLPeeCqLLR8QHio4Tm5
/vQRR66IMH9OxvPmyGQff6y/IOth9XpG9nb0z8n/99tXs/oxxtt5AN6GgtAy
5DkPlN5D2H+D1JTnxF5N75nNI3zX8JwHdTWB2e3tSspzsh8G5p8NLsb6LB7U
Jq3pEtKIPCfrbR2+UylAPRg5L5mPR2/tgfUcPK2+WcNzHlyOSP0b3o79lHiQ
d1xg2t6M+XMyf6dNztSPxfw52S/x3NXMKvTPedDZ/ceMhz2xfyJP229Ow3Ni
D3SuSa64on9O5pu1wWbJaQXlOdlfphuHDXmD/jmZj4Lplw8byynPeRD5caFD
+CQl5TmZX3VgndNdzJ/zYBajuzo2FetHiL1mxjrZz8J+LsReTS2ye+WF8XZy
f6y4Ab32YP6c2Ne88beSlPg+K2J/XtowbLmoP+dBjJVRY+F1zJ+T86EL8V5l
6J+T+c07/zp3JPKc2GP3xM5fI5Hn5G+TPkMfketreE7sT+uIzNDLWH9GxrfX
JlbmjzznwRhfg8/h4SrKc3Ke8/SzCkoVlOdkf+73PfposZrynPBvplOBygR5
zgPLrUtCTh1XUZ7zoWOd46mlC5SU53yIcTd7tomD8Xbyd1TKqgIyHxqe84FV
98JcuR/j7Xzo3z6RNXw45s/5IA94H9xjEOrh+RC4xmj3JHIeNTzng86X+R1p
nbAfDR88J8zfO9oI61v50OPKnMSEIchzPgTfSb418g32o+LDt97qmIBg1MPx
ofbBy628GCXlOR8y41clObSrKM/5ELkw3VgZp6I850PbtstTZuujHo58vsvA
pGczxtv5wGzQy505TEF5zocLS97F/XBB/5zMh2Pz154xKspzPjxROz1f/Qv7
VfIhImLZiFnG2P+GD7sruktP16Felw9hCX1lD5Zi/pwPvNHlt3YWo39O7ifk
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
OL60zWZ/XinE69zL8X1E9+1DpBBs3iB3PlxO/FwKYabaMzPnkz/3UHx+yzn2
74NZ3y6FHJ12h2MSWN+O45fcw7f5G86fS0H7TP8LP0cwP5dCdEzhkwM+nD+X
qv1iVfxcCiOSd9dd+sn+A1Lwt1qzSOcW9dO0luL5+kNsaW/m5/j+VuMX2L0g
PZwNrt/Bq661vcP+/lI4pd1YGxjA+nZ8n6fvnhc3cT8+XI8Lt8XVaJJ/qN3/
5kPFz/H3ia+2um7l/LkU8jpYrHokYz8DfF7R4S7eelQfNUEKNfe/jhhax/p2
fN5RvePjGgjPHfDzD/7Ojyrh+kgpxM3MW961N+fP8f/bPjswK4vz51LwWnap
f/3dEuLnOP+dXXU2dKD79ilS6K2xT9lvZhnxc9zPzzYE/F5XTPxcCvsS2nYf
P436fU7H8bo1RN9GwPxcCvbjz2tuNGZ+LoV3oyJWHr7Dfki4v/buW5EhrCR+
ju/r3KMiMpX17fj7yd13LXpA9dauUmg7I3nlx1j2V8B4pr+g1zKHMuLnUig9
OwmSejI/l6r7xar4uRT0qp1XCQK4HxGu34bA5b4PqT7bHX/WyDK7spv9laRq
fbyKn+P6ivXs0qM783MpZMXqT37dqZL4Ob7v/i5rv33hfgdSmDr8epFnMNV/
LUY8iZq+ZA+e91T8HOfjdVRhv6cfiZ9LIdBWEVV5jPRwS/D7/Zt8t0tY347x
cdBRy5cH2a8Jx7NfUUlyOfNzjKcVpb2c9nH+HONJddC66R/Ir80X99/MsZFe
Uez/IFXfB6n4OcbLf8tpDrNfI/79/WdJX1NZ347znWFQlPOD+Tk+v52O8Z3F
zM8xPuenxUQFc/5cCnaX8+O2TqT79vVSCBmedqz7JfaP+N/+VfFzfL6goLNT
fNkfSgoefkm934SRHm6jFHpuGfLtyV26b/fHeJOwVTugJ9Wrbcb15/Zhx4YC
1rcjvgvd9x8sryJ+juvpz8/jJkWsb8f95J7UMfod83MpDE39K9Ne3T8Z47t+
fVE7Dda34/vJ+hwyPEZ6uO1SuCGZZay1kvm5FCR3E/dDEftD4/r8EV7Ye08J
8XPcj449v0/R4v4PuD6jX5q3Kf5E/Bzjn8Y57ykxrG/H5106rPj7Fer/EiqF
VpEO9h9LCc/3IH6t62Uz4Sf52YRJwSLv7J4Yf/a7wOexyfGeVMr8HMfv6s+5
C5uxn5UUNB9YLnzgx/p2/Py7Z8c3H8L+0//bXyp+jvM5o/qC/28l8XMpmN97
+vPBnSri51Lo0fCxNGAC69vx+T/mjoutrSR+jnh2MMpNv4b9sHC+M3p2+vOY
/Omj8flNLjR+f85+l1IQGDuYDJaXEj/HeJTxr+MB95vC81Gt8XfHc9QvNhbP
IxO7he26xvW5UkgWeRwTBzA/x/mtGGby0Zv7UeHzNnr3a/uN+TnGl67xNvtN
OH+O6/X4sEWGPszP8Tx3vELPoYL7VWE80D+5SDOJ6tVOScHMxHaX2wX268D5
1o+zLHjJ+XMp/Nf+xoX7TUvV+TAVP5dC04aKHT2NmJ/j/n/X6+fXznTffk4K
EyZ2nT+rhPXtiOf5x/V3+BCen8f18LTwT5dc9u/C86DZhBqjVqSHu4Dz1T2i
243sMuLneH7wPBO6UoP0cBelEJn4T2F6P+6nIYX63VGj73uQ/89lKdy16TVG
5Mp+X1LQiRl6retKwvOreN4pHHTftoD5Oc7nhxrHEmvy+7suhWFb0wP2dWd+
jueDq9Pu3K9jfTvGF9OYa7+XsT+YFN4Yd6rWsmJ9O66HzAuvFYbsL4J/H/vT
Vu5AeH5bCvBWMTZLxvwc8fq/fzXEzxEfg2blX5/B+nY8H5iferWtC+vbpdD3
8uWlR9K4nwf+ft+fRZNdCM8fSNX6HBU/l0KF0fDotkV03/4Qv89nkCK2ieub
cT0077TPxJru2x/h+dPaJb99f+63je/z9oOD90rm5/h9nh1a1zVQvVoO7sf6
z8EPTZmfS8FEoNvH1oDrofH79O73+G5EfsPPpbAk6EVXs8fsX4Z85mmr6uu3
Wd/+b/xv+jThIOF5Lv68ZaVonIT5Oe7XJdVmi6CE+Dnuj3WDsj6zn2G+FIaM
F7c+/pDq1f5BfPgg7VBYx/lzjCfQr22kJuvbER8kG1rvdSM93BspZH//06X5
SO4/gniYdqHctDfVq72TQutjWf2HzWd/NIzPd8V2EXZK4ue4Pw5YVoQ3cP9Q
KWTazbn9/DDp4T5iPNXxOgynS4if43pruDrSQJP5OeLd2scdDPLLiZ/j+Lo8
ddPrSX7IpYh/NlPj7L5x/lwKzm6dVgys5fw5jm+pnUM/C/ZDx3iUN2rC0EGc
P8f9F3Q6umHOJ+LneD54c+LQ3PAy4ucYPzf42A+yYX07xiuvL0MaT5YRP8d4
nRHR2uIA69txfW8eGx9rTX6MNYg39gNK43qyXxvGo4b4l9sHK4mfI/4nbSu7
WsX+bXi+C/V85veM6tW+4flN3zi25VXOn2N8lFSXxRuRf2Md7u/xHbNHYDxW
8XPcL1F92i8qp/5J9XjeLU3euHwz+73hfkhd1Gf7DvKPaJCq85kqfi6F+Scu
VI3+Q/2PG3G+jSY4vJ7H/Bzn9/rPvp2G0H17E+73Ntfnjcrl+nMZ9B28/2Do
eda3y6DCo0u4wXvC8xYyOJX+M0XbifyeW+LPLr6VrQ8zP5eBc1t9UcvVpIfT
kEHOtZAVj3/RfXtrGeStHrvZOegT8XMZdMmUJBqUsl+sDG7n5N5w2k31au1k
6vsgFT+XQfiSCXfrGc+1ZOByefchjSNUr6Ytg+MFnuXlAta3y2DYiPU3J6zh
+nMZmORvTvNtzvXnMkjOvxoYksb5cxls3pk+fdBW8qPsJIOGAd1OH33GfnUy
tX+6ip/L1H66Kn4ug+iRViHDLhCed5XBEuPduitfcf5cBv/RwVecP5ep8VnF
z3H8I8ctqL1B/tT6MpBtSt6kZ0d43kMGPdp4jByQWkL8XAapz8/oPJjO+naZ
un+kip/LYFk7J+PFMsJzgQwUsWvvKw+UET/H8W0IijkWw/1iZbB8lsZqh+3M
z2VgUTopzF+T+83JQE/aekrSMtLDSWXg2eQydrkV94eXwaq8k0LDl6xvl0FI
UI6rrzp/LoNM//DSon6E571wPLJLa246sx+PDG6svpKYVM/15zIofp6d3tOX
/fZk6nozFT+XQYronOPIHaxvl8F7v4zBm425/hzXZ/3YBZEJ7Jcvg/zNf3+5
Nonw3FQGLar0PcfO4344OJ7ujf2tQgnPzXC8A/12xedz/bkMunXV3fFjLd23
m+N8568wferC+XN8/s/zo+dtJj2chQz8jFos3x3E/FwGK1Yf2VY6h+7bh8hA
EvHR8sVCzp/L1PkXFT+XwdCI3vPmKtm/VwZxujfSrntw/lwGpi6fh8Vosv8f
jo/OtL8n4Piq+DmOr/LCkFbduP+ODFq/dVqXUcr8HOd38ueiP4Hs9yuD+Pv5
BqtnMz+XQaRtwbzhPZmfy2Dq3LrsFcO5/hz3V94Zt2WJ5cTPZRBYMd0xQYPz
5zheV0M+P/vA/Byfxz5TL2UK83N8f8mVlUoR+/9jPMgTlkkfkB7OXgZn3NIf
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
7JpPJ1szP8f5efR71p0o5uf4fRFXFgx1IDx3x+e96u9lYsn9BnF/N566WPSL
7tsXyqHBZdf7KOQfKn4uh/CzD5IcF5QRP8fx3fDPAMsi9oeTQ4sN68pLMzl/
LodvFfs2StwriZ9jfFvrFXHoYynxczm8mdNnifIU9zfC+d1rMMj+LPmrLsXx
t3KKPxzP+nb8Ponh6j8HCc99MN5UXIn8Kef+xLheq3SyD36oJH4uh+KCL/nH
t3A/JDl4Tcz66RfM9edycPk6b29CL/aHw3iwOWPk2rmkh1uN719hdzR3eyXx
c5yPlEWuryczP5er/QZU/FwO75v9iD68kfxb1+P+LBh15MM2zp/j+yjTW5Uu
LiN+LodDLn0ixg3n/LkcJHm7+uzQ4fy5HFodjJ9lrM/9luSw6kP5B/fDpIfb
jPu5IODtxiLOn+N4Bjl/ye5P9WoBcrWfrYqfy0FzR9iqTi+4/hx/XpP89mEc
93NAPLt/R/v5bdLDbZOr/elU/Fyu7ueo4ucY39M3XFugV0r8XA5zssSTQ/1K
iZ/LQdl+av5yEdefY3xp08fE4gjnz+WQURQyPrmA8+dy9X2Aip/LYcnZoQPa
BJQSP5er+2mo+Dnuv4Up63dIuP8Tnj9GLSx5WlxE/BzPK7eEToUm7A+HeHor
bvapRXTffkAOYUsKnRZUcf4c19/TDNmeEs6f4/NNsrWtacv6dpzvr8aZv0vJ
7/UQjk9mSJgwiP2pcfx2pGx8cJDz53IQjMsYMnUP95/A9bZgfXaAIefPcT08
celak8f153LI+r407Z4Z83M53M0rbjkD15+Kn+P4pkY9avaN/Otjcf5He7xP
qi0lfo77bah72uMc8pM5jvv7+mS356XMz/H7NSu7xUuon2wcxtu85PScKZw/
x/lZe0ZjYRfOn+PnnX+i0+Mi159j/C4JaJkVS/ftpzC+xxa1c3zH/tg4P0kX
j1v3Z384/H67cx+Wj6N6tTNydb21ip/jfE33kl87zflz3L+u+4/ddWF9uxye
+bfoY7eW+bkc9jWZrMiXsj8cnuesgu0CA7n+HOPT6tZwrTfXn+P8NN804Osg
9ofD+CMJfLHiIvXLuSiH5WuObZ/+nPtj4fmou0W3HlnkJ3NZDnlGBoO/rOL8
OZ6Xvt+e892N/eHwfPesuneWjZL4Ocb7N86mW6yoXu06nqei0qNePOR+Wvj8
zhv3TEQ+rOLn+PxaVXXNy8qIn+P4lPcY86yI9e14Pq/SVdTtYn07nofN2mt/
duT6cznopcYtTl3B/Trkav2bip/j+1hEaejMYn6O5ynnXZ1r5HTffk8O81wG
/BPZift54Plp+8GZLRqpXu0Bnp/3u1sNrGd/OLna71zFz3H87h59MGcP69sR
j23f3Dhyv5z4Oe7Pu0e8m4qZn2M8mvk4bmAu588Rr+KiW1vlsr5drvZ7U/Fz
OTxOTH7zHdgfDuPhptTB/0STHu65HJxsHWMuhHK/EDxvCbLG14+kfgJ/y+Hd
h0vR9vnsN474bvLSTRs/T8XP5WDTVXtV3jruD4brMddnWsR25uf4/d8L5DMd
mZ/jeElSWnqvJT1cAcYDq/x3+9JID/ca10NVlwBnC+ov9Abje2JTzgID7ieG
7+8l//59Bunh3uH+X/LxzbclpIcrxP3cP9XpdjeuP5eDp+fOX30zmZ8jn8Lo
deUl1at9xO8LKfu57gXzc4wPXYsbYrTovr0Y9+sUvwO+y9nvHNd/rHBBow7d
t5fK1X48Kn6O8dbPzT70IvUjLJer+/Op+Dmun9rxTW1Wcv5cDpOjv1zo25v8
ZCpxPK9vzPi5kf3hMJ6416/dYMn5czmc3u/452mDkvg54oni7zIXbe5Xivi6
IPGClTnXn+N6+LpzSEcvzp/j+X2PT/jDm6xvx/V4wGPcrb3cnxzP+6sdMhNm
cP4c3y/97dzuRdzfVK7261Dxc+SjfTNyluzi/mj4vub+Laobuf4czw9/a04N
1GU/djnc3P1g1c3eJcTPcX1MerXu10j2h8N4WWDZb95brj9H/HndttvaWu6/
gue1pFdtZhwpU+F5E873/XkpOV3YH04BZ64fMG7KZH6uANvxu8e17sz8XAFh
Lsb31uty/lyh1ger+LkCPDRGPQ49TfftGgp4M0nw5EpUBfFzBXSxPX7TaQTz
c4W6v4aKnyugrn2Jpt90wvN2Ciie0r/v/q7kJ6OJPy8qurqxhvBcSwHh+kPq
VodwvxcFLL8c3GE14puKn+P/N88ediSA9HAdFKBbOLbF6VecP1dAtKzcyNGH
/GR0FBAYtO31VluuP1dAzZKFu1x/sb5dAbMTDx0VP6d6tc4KsMhd+tPiLfNz
Bdj/Ts1evbSK+LkCWqfsEjgtZn27AhwOB896+4v94RSQ7HYof3Yu588VkBHR
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
4861ZtGU347n7eJ9lRP9qP4c7fmY1PZ31ZTfjv6156YvZ1yZnkwN8sNbUe66
/DrG5/g8OdZbP+QSn+N5t1Ew5uosip+j/TP+3V42iOrP8Txh/W7N+QKKn6P9
evv6RnU99RPH8XM/qPOtm+XDNeL4Ciw01LRJHw79V1HleYUqip/jecY32Pmm
poTxOe4X4XGOgiXxOdqfH13JQ36zerUvHFDuSC2aeIvi53gedrtRuU2P+JwD
BfFv68/+Q/XneB562Kf0TTLlt6M/Hhx7wkGthfE5R3b/IuVzjkx/ScrnOP/G
W84+FkkYn+P3j21+oxHVzPicA7WpAToL+jF//gu/7/qQK2HiFsbneH5st3V7
fo/lw/1G+/F99cvO3xLG52jvVAavCvldz/icA82GlSc3dlP8HM8nxtA68R7x
OVeWDyrlcy54eok+rx9FfM4F8yXZUWvNKb+dC0UzY//lzaL4OVdWvyTlcy7o
prla3rKl/HYufAgZEXgJ/ZWUz7mQbj4mrCSR8tu5sOGPY9PAQ0xPpi8XzsVz
5u9MIH04/P936xXWF1L8nAtx35VnVSSyfDglruz8L+VzLjgtsThqfon4nAv2
4lG1v3ybTKL+x+dcWFl4v3byAuJzLgR9f2i1tY304bgg/njp2c9BzJ+rcqE0
Y+jy66NYvdpgLki8l5x+vZbqz7n/NRs9Pv0gu28fyoU9xrN1dx2n+DkXlNcN
H7c9geXDDeOCN88mqL8Bxc+5EOIa37ztJem3c8HR5sIR95EUP+eCmceabxv+
UP9zLvBXFkfkazUxPudC1dfNB5a/p/g5/sw1+vlTg+rPubBFVbLPLpj1YxnN
hUzuvoO9resYn3OBC7z5b25QfjsX0gyaJ1ztR3zOhWSP83O0JlL8nAvN3be/
Za0lPueCJsxbl7apkfE5Fy7v8z7csY36n3NBq9r/6oXtlN+O8/t1yqgjqXWM
z7my/oJSPsf5NeL9nbiS8tu5svtoKZ/jeEe1LJ05jvThuOC2c22TamAt43Mu
LPXoLB57gPThuDC9KD/Ndxj1P+eCxbKXU4RdzJ9P5ML69N4f9T1Ivx3nL+Hf
P3WJxOdc+KEeGGx7hPgc17fRw5qB6sTnXJgfMzJ3eB+qP+fCiYavPoaPKX7O
hTmDH12dIcfy4Qy5cGHplqWLd9UxPsf1aDt+1asMym/Hz88517+nGsXPcb1d
Gz7qxCoJ43N8nxXP5gyrJj7nQm76WPmunqQPx4W5ZZ4+F5ZQfjsX1EbOypsk
63+O+9t/qebVaHbfPhPn23OBvWYb1Z9zQa/rvcu3xw2Mz7mgaqQ2p9W/nvE5
Pr/bm7gfVsTn+Dw32y+eS6H6c1zfR/OKdJZS//P/W29SPueCc8GKnLB1lN/O
BX0vfUFhWx3jcy4U+A48WOggYXzOhRle95c841J+O76f7tc+T76TfjsXshNK
f4+Sxc9xPVeURN+pkjA+58JOpOOFxpTfjuv1cPtJb3nicy5UqNvPXvub+JwL
0SrON40XMj0ZOy70FsavcRxF8XPcXxYGFrFC4nMuXGlep7oxkvLbuRC18c3K
gykSxudcKP+YVbIllfThuFActXHe792k384FDzd+3uEuCeNzrqy/iZTPuRDh
9GmIixLz50u4svijlM+5kLDg9T8XN7YwPsf5OfpXvzuS6s+58NhjUntcQxPj
c9yPGtV92/c2MT7ngkHXrXXW7ym/He3LyFVaVoup/pwLnz6+XZL/lficC/KV
U1781aP6c7TfR3zqfVWY3utqtHdg+1BlHOnDof0cY9x104TpyazBn69mjtWQ
1Z/j/vbXtxy2lenJrEX7p/Sp+0se1Z+j/YsxffOlhPnzdVwY83CDX3w81Z9z
wfShvIa6I/U/x/k9Gvzpewrrl+rLBa+r9zaG8+oYn+N6L06qrdcn/XYuTMss
/7t+dx3jcy40Bq6p8/pOfI7+oDnx45jnlN+O+2fYH3+dxgbG51zQgACXhe7U
/5wr07+R8jkXVnRp/Wp9SXyO66VU81p3HvPnW7ig0mHCWVdE8XMubCpevWFE
L3bfHoT7u7uw9xtP6q+G9rFQ0U4Oz7tSPudCbD9Fj5OHmhmfo724Glmuerue
8TkXbo/fUPpIm+LnaN/0D2bkbyE+58r06KR8/t9+6H/cpp3023H+Y+6eWa3D
7tv3oP0d3CBead7M+Bztnd3OS9E+EsbnuN+3JG9IO9PE+Bz987F4n/P7KL8d
91PnFKN6A9Jvx+cfNeHImxZ23x6O82FuzzVTpvpz/H43k8dTjrJ+LBFozwoy
+i781iD155FcuJSe2Xr/IPU/R3/qxpnUa2s943OurH+2lM9xvSb8dTa3IX04
nJ+4Rx4TokgfDu1ZYMsmh6kSxudcEDY+b9ymRfntuP/cDm9YXUj91XC+9ika
7EJ+kvI5F/rsOv1q+h/WLzUG91/b9oaJ3ZTfzoXnzWZrB9qQPhyuz8rcyuK1
lN/Ohbf5c98ORn8n5XMuyPUzyX9lS/nt+DxDi2wsv7H79tM4X3WLs+/2ofx2
rqzfoJTPcTwsx+68cLWZ8TlXph8j5XN8ntbQnhtbic+5MGRyITdoF8XPcbyU
OO1zfNh9+wUuBDuqblHvS/XnaJ+fGB0riab4ORcy+o8IdbZj9+1J+HmOZnf0
Sii/nQsBwyIvTBvL+qVe5kK/BU7z/hpTfjuO//tRItW7LB/uCheOpLRnXMmk
/udoX416ezWNIf123G/2byb0mk7157hfisI/FpWTfjv+Xjyr54tJ1P8c11+W
gvzl2s+Mz7lwN9VeO86c+BzPs7qzdj+2ofpz/PnGwDnRmpTfzoWS4HceL5AP
pXyO833ea9ROtFdSPsfz8ph5BqOMqb8a2vNXb1uLhlL9ORfGVwY9dKml+Dn6
1w2pV2OeEZ/j8z8JcK/7h+rPuXBLN6ZM6R+qP+dCYebn9MxAqj/H/Zfy/L7i
Q4qfo/+TxMZ132L+vADPY2b8Z2lVlN/OhfjUom1jI5k/L8T9/2fTfO2/FD/n
AuiG3vdIJv12Lvgueb22TZ/6q+H4h21dtW4K1Z+jP1MvNI2KIT7nglVp3urk
U9T/nCvT85fyORcMY29cdOhNfI7+OazIr6me4ufo/73Wng7uov5qeN6s2zbq
9Qbqf86FkduqM8/7NDM+R38cxv28rprqz/H5VIqd5KxJHw7/PyhWI8mD+qvh
+cN8vu+um6QPh+Pfy+GDoyHVn+P/O2f0/4u/l/I52nub7ZbLQim/He1NTeSr
Gc6k386Fzpk+Xa6OxOfoj/Yv5rmlUP057o9eATlV2tT/HP1XenPT6bPU/xzP
1wmj+sS5U/05fv+Sl9d1P1D8HNdLw6Gd5o6U347juyAm8mQs8+cf0Z+vDFEq
ayM+R//buT2vbDX1V0O+ia/Z7VBI+e1ob79P0tseRfXnuN6m1qX19W5mfI6f
H7fb9ERfpvda/998692YN5H4HNdHpSRt+S7Sh0P7l1K2rXgU5bdzZfEPKZ9z
4Vvwm50f9BsZn6P9GV8S9NuB+JwLf/7dH76vu5bxOZ4fyw2v7M0k/Xb0v48y
Us4fJf12Liy3aVWztyH9djxfedp4ix5Q/BzPC7sjrBW+svv27+hPvoieZJpQ
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
PtOA+JwPXlWdvndi6xif80HNb73exjFUf86HTLvgry80iM/5cMup59ePXcTn
fEgwnfzPgyaKn/PhXUrwRkMzdt+uwoc5aY90b3+l/HY+TF+nOnDpGcpv50M/
hWPnWq8wPZnBfEhziL1fcJbpvQ7hQ3e05qxyc9KH48MJc4seciqfGZ/zZf2o
/ufPh/EhuXi6v50a6cPxYY+Zzo0zvSm/nQ//a7c3lfTh+BCQV9kry5Di53xQ
WlKb79aH+qvxofRPz8Fp4UxPZhQfnk16eD83spbxOT6/RPdG5wjmz0fj+/0d
HpzxgvTb+dA5rX1In0qmJzOWD1UZF6Jv25M+HB/2OgWefdBC+e34/t91L7Wq
ML3X8XwIagP5DkuKn+N4akXE2/el+Dk+n2pmQuxq4nM+fPWXX750ZRPjcz7U
Oi93fbaf6s/5Mj1RKZ/zIbbg7O9xJcTnfLAPDwi4l8Hy4UT4PE9sX8bLkX47
jm9zdE/NbcTn+H6PD9bGyOLnOD/rAvZ8ONbC+JwPVmlTn++spfg5Hzpexjot
CyB9uP+bLymf43j2GrB0jSLFz3G+mtsvPJ9N9ee4HguP8VJV2H37FPz8LVaL
IxzZfbshH7wTsiqcRrL79qm4nm/OmnG9kt23T8P1cnvK6uE6TYzP+bBS8UvP
HBPicz4425Q4VKN9k/I5HyKvu6UO0q1hfI7fd/RU3uZYym/nw7TznWviSpg/
BxyviEufGhZSfzU+BIclpgU8Y3oyprjeCtoO6XVRfjsftt0LTFJzZv7cjA8e
wdtGb59B9ef4ed1O9wLGkj4cH4b76MUN3E7153wY2bHi1vW+TYzP+XDZv0F5
TTv1V8P5vGn0dKIe9VdD+xE2J7m2nerP+TBmgdJQ22xWrzaHDxpO0zbOiaL6
c/x7OVUz54mU386HiP8lbJN+Ox+cbqq932/G/Pl8PhgYGTicm0L67TjftgaN
Dc8ofo7r/96aHWWLSb+dD5LixMRjyym/He3hqrab47eTPhwfVNV72B+4wvRe
F/Jh/dTBM1a8JT7nw4bGpgGzconP+bJ8ZSmf4+/D5UbN8KL8dtwvgePuvPei
+DlfVl8n5XM+bCrifLjuSvFzXE/9Tlf9jGP37cv4UC4SFXbfo/x2Phi2jb/e
o5L6q+H8KAU9wTlgfM6H3DH79D3uU347fn/d+WPKtdT/nA/KWfLlWwdS/BzH
+9Yqzn03pvfqjvb8SCX/1SKKn/NhuU/O0hgl0m/Hvy+ZX1HQTvpwaO8N+p4v
m8v0Xj35kLhxzRqPAZTfjv5EvbhrfivxOT7v+wz/GR2U386X3R9I+Rx/HmrZ
fS2E4ue4P/J6bWs9z/qx+OJ+Pym+zzFmejJ+aF+C15kENVH9OR+4ju7jLQ2p
/zmO9y3jKwc7JIzP8Xna/bz2hLH79kAcH4vzQyPbKX7OhwK96zanxlH9Ofqf
JUnvThSzfLhN+PymWtG7flP9OR+6tsotiTMhPudD6LmiytIm6n+O608rYZzH
eOp/zodjKWFDGwuIz/kwJOjQpNkyPufDgvd7Tc31ic9xP+3qlTQ6nurP+fAj
3W190STWL3UnHzR1O0a2fqP4OX6/wg+3tHkUP+eDSWuOcMebWsbnfMjOMH7T
uJ/dt+/hy+LfUj7H93fqUXBtAqtX28sHbdPXuxWsqf852pOUtFxbBcpvx/Wa
sdZ91k/Sb+fDN5GC9X1H4nP0h10H0gtOMb3Xg3woTnh+Oq8/6cPh/Ikl2V92
tzI+x/X58XJYtruE8Tn6+2dVgaH2lN/OB5fiyC8LfFk/lmg++No9n3HmdB3j
cz6ULK0ZpmPD6tWO8CFu/OnNk9aQPhwfVAZVTd2gwvRej/HhcVB86Zq8Rsbn
fHj6dYBF91GKn/Phis56cIiUMD7H8dEqjjt9iOrP+eC5eJ5d3ArSb+fD0l6+
vUaWkn477t9nryZNCqH+anwwVxL19fYmPsef04YOVHr82WTa/z4Qv0+Q5OZh
zvReE3C8fg1K7B9B+nDoP8OUTmzyJv129Nfxsa+m3Kb8drQ/iXvPPPpB8XP0
X/v+3u95g923n8fxmmoo6ltMfM6Hh/zECnf7WsbnOB8uny/a61H8HP1hzAmu
bgHVn/PB1HFGyqBH1F+NDw2/HGM9TIjP+XD7e1zTAmeKn+P8V9z23PaO4ud8
2HXLb57iilrG53ywCI89FCvTh0P7Jvn49aYaxc/5YLbjvvfwi1R/zoco5b0F
sUmk386HC/ojlkzXo/g5+pMdFw5HZ7N+LDdwf/zZU1Z8sY7xOdp3d/tlry1Z
P5YsPvD3vvLy3kX6cDj+3qUhLZOIz/myfltSPkf7mGTVd/AZdt+eg/Yuo/Re
phrpt+N4Hdsc8uck8Tn6hxSTw92HKL+dD30utrsprmJ6Mnf4MCH1mve2H7WM
z/F92p4Eg5DpvebjevRUaDY5Rv3V+HAkYY2pVTPlt/Ph0eeecquV6xif4/h1
zXm6p4ny23H9zZzXlhJN9edoX2vWDimeSf3V0L7U6k78tyf1V8P1FjPxUW4i
xc/R38Zvebyji/gc/UuGa6zrWYqf43k+6disfG3Sh8Pxi+YOzI6l+Dnuh2qt
SMXnpN/Oh/GahrNHvaP4OX5/AlfuSiSrV3uOP4+xeZsbzfz5CzwvRHnYb2pk
/VJL8X1eOiyXu0f57WgP2n73jznB/HkZX1YfKOVzXO9X1Ge96E357WivooZW
bIoiPkd+2Nf1XuUAxc/x85f2TgmMov7n+Pvy3P1jNZoZn+N8lut3PJD1V8Pn
e5Sp2Bsovx39Q2DonR0+dYzP+bJ8DCmf4/rZEv7QeS/1P+fL+rdK+RzXt8HX
ap9l9YzP0d+2Lsn0cSQ+R3uR93FYxRSqP+dD69e+UUYzSR8O7YFicMWqx8Tn
ON61Bv9o9qT4OZ7X2udsex9D8XP0N9V/f98NZ/1YPuPfZ/k0Xd1FfI72N2j7
z5qn1F+ND9+HH/MKG8j0ZJr5IDel9wizZ8TnuF/qgq0V5zB/3soHR/ebyxtv
U3815MHwzE+REuJz9NfhDjHGRZTfzpf1o5HyOR+01rW93tiH+BzPA1P/KyCj
+DkfIHzBwFS0l1I+54O76oBXzmpMT6YDf5/eMOn9XIqfo/80fLtuNqeB8TnO
X0/D6slvic/RP0bp/jbmMz2ZLvx/m29PhySyerXfeF7zXHTM5z71P8f9pN7y
+Wcl1Z/zIT5i+LsBHVR/jvNnO2R3qSvltwtk+hZSPhfAp4nq+rrz2X27nACU
LQJrJuTXMj4XgHuetsrkz5TfLgCryXkS/lXqryaAbzNvVlydyO7bewvAwj/s
vtorqj8XQLbXuFGHHpI+nACCK+6cSL1OfC7A/WOWmxlP9ecCqK1INzX6wO7b
+wvgqdKVxRsWNDM+F0D3yUjlLUuo/7kAqqK1fh87SfrtApkeopTPBbLzrpTP
BRDlWgdGOsTnAnCy2z98iHod43MBKLma/D2whPhcAGWbH1yeUEz15wIorRk5
f9904nMB3N53o/76G+qvJoDGnZNbDXH/SPlcADXXixYUdtUyPhfA3ahN2wSL
Sb9dAI9nzVbQ7sX6sWgIoMT26dJ/KonPBXDs0U738DLKbxfA3F3HphzYTnyO
49W9wbdkWhPjcwFcsAuZo3dfIvXnowVgflxu1l4e6cMJYMaSm7dPjqD8doHM
Pkr5XACwrGyVyzPicwGkH1+xNDmA+FwAQbvD+maMoPpzAUjOHS38/Jfi5wLw
7FVlHjKC9OEEEGtmq5EdQPpwAjDjTMkxukx8LoC353I+3i2g/ucCGF/4bdbS
z5TfLgCtKTfTVwVQ/blAVr8s5XMBNNy5N0XsSPntuH4fnso9b0D67QI48nPs
H9UHTE9mogDkFqg8GTSA+XM9Afgm9Ni3QYvy2wUgjLj5dUQI65eqL4CQ4+WD
olZTfzV8X1tDc8st1P8c10dmvaMjnkekfC6Ald93jW/1pPi5AJYXPBOODGf1
alMFsvxnKZ8LwLHttZVWCMXPBRCRuHuYUSDpwwmg9UDJFrsIip8L4JzOxwFW
ThLG57if942/cSmxnvE5ru9U52l5/5A+nACc9eI+nXhH+e04Pz69Pu4xZvft
pgIINf6zfdUhip/jfoqx032pQvXnuP8OTC+tKJcwPsefXSZ/kssmfThcDx/j
e6ndpvg5Pv/4SQbPRlP9uQA6U9+b7QkmPhfI7g+lfI72RYlnm6rO6tWsBXBp
043mojSWDzdHAHrLPLQ6d1P9uQACwgYFrzlBfC6A3LzSVQq3iM8F8Dx7TtVK
53rG5zifmiEP+w1k+XC2uH8+tjywv8fq1RYIYMHxCeVPvSi/XQCJx1M9uROY
3qs9jsfP5Ltx9qQPh+P9vf/N2eOo/hztS3bG6j7zqP5cIOsnIeVztK/t/xhF
3Kf4Odq776ELNIHVqy0WyPoJSvlcACP1WuQMI1g+3BIcH4XOEX7niM8Fsvwu
KZ8LZP3CpHwugD4JW4NTP0sYn+N+Pqp0wNuN4ucCWb9gKZ8LgO/YGRpqRvFz
AaxIGZO94Sz1V0P743TCQHki6cPh+lOZ5G1wh/ThBDAtzUhYE0H15wIobv4n
xkSL6s/xfYYOcn6QyPLhPAWy/Fgpn+P7Bx5p0P9AfI7r12T4r3Yf4nMB3ErV
XTVBTHwukPXnkvI52pdnPvJfJ1P8XADTj07cMtSW3bf74ed72mq3jqD6c7TP
IW4/j14jPsfnT+r384I66bejP1t9IvWvCdN7DcTxVVc7tEyT+FwAyRs9jAwN
WT+WjWhfRk6q1o0lPsf1aNE2z3gr8TmOL+dSbdRo0ofD9y+Ky3/II/12tL9J
/B5Lqqn+XACb1xctT1xTw/gc98vJrLBrJVR/jus70Slb9R3xuQCiFYb97Igm
PheAvsD63IXzFD8XyOpHpXyO/lnTaf7LM8TnaA9cG7WFi6j+HO1BlOrcBhWK
n6O91eCvf1nTyPhcIDt/Svkc7VevWx/XpBKf49+ft3Dpf576q+H6S7o7fNEM
0ocTQNw+jslULao/F4CXSG1RZzDTkzkoANW29ZYD+5M+nAB6nFl8++KsZsbn
aG+O/+4xxYHi5wL4mrbu1uV1LYzP0T//VI84NIry2/F5PK91LrMk/XYBNAsG
Hk6Jovi5QFZPLuVzfL6QTP+j/Sm/HT//9YsylWt1jM9xvhONprbEUPxcIKvX
lPI5/vzF6XmwkPj8//yrlM8FYKrZ9G7GLuJznD/eut35v0i/Hf2FzZQHfnbE
5wLocu1OMQloYnwugD8vY/g6pym/Hdf3szdN38sovx3n09l6geAr6bejv9Is
H27du4XxOZ5XxE3xH662MD7H9ZJ4o8ePAxLG5wKZvpOUz9E+Dt2UNa2A4ucC
SDAUD9/oKGF8jv6uXWmtvyrpt6P99r5yZ8MIym8XyPhJyue4P0ocbl9H/yDl
cwEMsdk/yy+1nvG5QNZPS8rn+HnvdI+fj65jfI7vq6A6qPca4nO0N46iU+8S
KX6O9iJQ29K3mfTbcf+a7kw9b97E+Bz/P27j7fblLYzPcTwdon59mEf15+hf
GhelKqYxf56Fv/+16W9wKtOTycbzlHGeyUN94nMBFOW5nVBp+8z4HOfr0sPM
fnmkD4fvM+RJZGwR6bfjeoiIaLE73MD4XADxCV0BDuMofo72SVvzR3ku8+d3
8P03X3px+k0d43Nc3y4q3xeXMD2ZfAEYGqzZaB5E9ecCWf9uKZ/j+aTmSlqh
Bem34/w16lT4nGD9WO7j+alHh/eaS6Tfju9vq9U3sB/Vnwtgg+kyjWW92H17
sQAyTQYPVjCn+Dn617aeY24dp/pzAQzvMzYqVLOJ8Tnu/7RlLYsuEp8LoCCb
Z6k5jPgcxy9oouureOJz/L6Xwyu0c+oYn+P4OQ91sH1L9efIH7t/58YoE5/j
fOQ4vVgQRfnteF7s9vz7WpP4HM/TiU3mwXeIz/H9x1xLPa1H8XMBXPbKeiMM
IX04PI/+177ZkPVjqcDzgvkd4007KX6O8zOtdEf+ceJzfL6XtpdmelP9uQDm
KL9V8RQzf16F52fHgrBkMenDCUB3y/qy+/eo/zme/0N+DYxWZf1S36N/cB3S
fc+3nvG5AIYWz6uWNNQyPsfzSbBt654g0odDnmpsfK9aT3yO/lvbvi2ttJbx
OX5/d+O4NBHVn+N6+bIgd4mI6s/x/DLxUr/KKgnjcwGsT3mV0vmN+p/j+rG6
mzsvieLnuH4fXTkeeoz4HHmj75GYyY5Uf47nI9fcmJfNFD9H/7wFIi/LUX81
9N9J2ZdeH6H4OY639pj5U1aTPhyOZ/1cieU86n8ukOlBSfkc7e/LnXf4zhLG
5+iPw/pNH15I/c/RXnuNrDRpZ/VqP/DzBAuHxuRT/3MB9FvRNe/9Q9aPpQPX
a6fK1/fxLB/uJ9oPi0unRwcSn+P6iHIcPrSF9OGQt9z2BjmcJD7H8fov3WE4
9VcTgOb2mcqhPNYvtRv9180K7vbVxOf48927qafKic/Rn+7L+V1WQfFzIbz1
/9Q1u4P04YSglWCnsCGI6s+FYK5U6zTfg+LnQjAb+aPzRz3ltwvhuYLTlMNf
KH4uBNObK9SnllB+uxBCsjQGz99O8XMhPH454N2QaMpvF4Kz6YyaTZ5MT6av
EBrz371r7Uv67UJY4e2d2u8Ixc+FcK4ocu1Cum9XEsKeIdFuo9fUMT4Xgr1x
To3HftYvVRmfx1/Dfmcm8bkQ+FkTBqy4RHwuhIafoWfvH6L8diFEjaoe1JxL
fI7PE3L54vUs0m/H7wuRuzLrEPG5EGpbL7gfdGH9UocKZfePUj7H57VrberI
ljA+F4LKXUW5xXqsH8twIaS3vljjYMnq1dSFsn4ZUj4XwhbbCj5Hh/LbhaDn
+NPR3of6nwth02Flt5ffqb+aUFZ/J+VzIez3ezF6De4fKZ8LoWv925lqOhLG
50LQ3F31cfAYpiczVijLV5PyuRB026p0BycTnwthWk7zwVZzym8XwoXmCVH7
lrJ8uAn4fFPh1H4/0m8XQkF3w4N5uxpNBv6Pz4VwxTaVs8yU9OGEMN/z8YgJ
NZTfLgTVno9jXkRRfjuux0V7upInNTM+x+9v6D6+pYTqz4WQO8L/QnMv0m8X
yvQZpHwuhH6DfIo/thGfC2V6UVI+F4L2ysWjRPLUXw3Hz2rI6u0VdYzPcf5d
Bqx5ZEXxcyGcOD7ScFQr8bkQghLGjcxbRXwuhPUxySsP3yF9OByPdYbCySup
/lwI4Y4P1p10Ij7H9T30Tv/OUcTnuF6M/HaMPsr0ZIyEIN60UKSgwurVpuN8
fUwWOOWy+3ZjIXQstT5bOpP1Y5khhOFmP/ZqJxGfCyG+pKn8agjTewUhGO4S
aC3s/5nxuRDmlLs6fO2k/HYhfBtglwzWLB9ulhBu4+kjy5P024XQWbO775Le
LB/uH5zfV3MTL/chfTihLB4p5XMhLBhmdaWa+qVa4H45MNXCYiHpwwlhes6D
+NmLqL8avr9elsLSTcTnQtn9lpTPhaDx5fT46Xup/lwIn9w6RmhEUv9znL+8
G5L3gaTfLoQqwaAv/Y0ofi4ExxeHLVd4SBif43gsvtd7pwPltwvhcqHCzzNv
KL8d7UfD7zVW7Swfzh7/36vg5YwkCeNzXJ9B5pyHI1i92kIh9CnzH+BURXyO
+/NOR/LGZgnjcyF0G+8QPx1N+nBCUJs62v1cBfG5EEpb1Vakd1H/c5y/0aUn
X6XWMj7H8aos+PLZk/TbhaD/LMh5RV/Kb8f52bcvM2cY6bfj+s4Q2L/2IT7H
+Z3py40WUPxcCAnJh+U+Fn5hfI72ftv1jwOcWhifCyFZa8hrm2GU3y6Efe+a
4i0+1jI+F8KPmuTOXj9IH04IS3eP0koLIv12IVR4ty3216L8dny+7hOvPlyi
/mpCOHZT2afvSZYPt1aIvGo36PK4esbnaJ8rDtod+Ub67fhz4OvQifXUXw3H
L6mx5asD9VcTQsT/CtgkjM9xfCR5OrP+EJ+jv2t+dUojlOLnaG/aeDFt8sTn
Qij2gTUr/mF6MgFCGHIl69HcQZTfLoREPW8HWE/6cLjf7G3eNIgpvx33d5qS
n7MN03vdhH//J7Do6HbicyH0HrrkSCCX+quhfRJb+y2opv7nQsh27nwlOEZ8
LoRM1+PJwr/U/xzn32bY7ZxI4nMh+GY+yxt7jfTb0f/5Vbje8iQ+R/+sbb5O
mU/6cLgerVM6FguZ3usufF7dhhPWVqxfaii+764Cj10zic+FMMav16qdC4nP
haC8pVZgrcTq1cJwffSYHdnHifnzvULYaVRTca6a+Bz9Yf3Judxkqj8XgotR
w+2jilR/LoQPgslpO+0aGZ+j/fRwe+fwl/Tb0b7539qhso/i57ieXIqGKH9h
/jwSxydV6dyVoaTfjuP7X3q2E+W3C+GW7qdQvjXltwtBYvFgy3k3qj8XwsiW
ZRFlEuJzIfx6IL7QY34t43O0fwdmiKfuoPx2ITz1itC7b8zy4Y7jeL2PSn9Q
TfpwQvD+s1Ad3Kn+HO3rvPhLH8JZPlws2kPPi8LgdubPTwpB6eh50e9ZpA+H
9tPMqLpGnvThcP+ePeatmcPu2+OFkGa/VPdxQDPjc/TPkk+ajU0UP8fvuzjo
RvdL4nN83zDftYuV2X17IvpHhZTr0ZaU347jtcxy9vrjFD9Hf/Z23dM3FhQ/
R3939HDbceRZKZ8LwSq9QK1PeIPUn19E+2xoaTSd6tUu4f43KNXVMKf8diG0
vjy5J9KS4ue4vj1jy/trUf9zXF+mY1faaZM+nBAMHjiBzdpmxufoX1xU5+UG
UP9zIdxV1Y67o9DA+Byf371hhH8P1i/1Gs6PS/PEumv1jM/RPltnfl3nQPFz
IRwpGfRjzyxWr5aB6yfY3+5UI9Wfo733GGO6qJPqz4Wy+IGUz3E+CtJTO2ZT
/TnaT388ZGZT/Tn6kxcfrsG9OsbnQvhq4ZSaFkvxczx/1X1ebnSX9OHw/HvS
YHKShPVjyRPC3u9nRefErB/LbVwvBW6fs0yZnswd/KqwDduDBpA+HNrfVoO1
Hrcpvx3fp1u5Ttuc4uc4nz5VR7efp/7naP9bFzsPvEz67Wh/2vgPxr6l+nM8
z+mXXtYUUn77/50/pHwuBHn9zS9tbjA9mWIcL6fJhxa7U381PM+Zpqatm0T6
7WgfW++qru9Vy/gcz9d9P7ysqaT8drRfZZ3Dxg6l/ufIBxaG57rKqf4c14Oy
z+/Jt6j/Of6/oOOR+RmKnwuhSH1r9PrDVH+O9nFoYVvDbNJvx/Oz0UnHrMvU
X00Iyzse5BQFNzM+x/PZzZWBMQFMT6Yc16+Cadft7cTnuN447/gj7IjPcb3u
cLlhVk367Xh+v8rdfDqe+BzHt8dz2+g64nP8/kS39PGKxOc4Xy711j/CWD+W
alw/xT++rqpjeq/vhLL7YimfIy+07E5JSaL4Oe7HRt3eCetIvx3f97uJc34E
xc9xv6hmd3cNIj5H+5u5OevQa3bfXov8Umh3MK0v8TnOX8cj/7CXpN+O9vBm
2tXZXey+vV4Ic/UK/vqcofi5EDgb+ydf8KplfI7nrYbvv4qtic/RHx97nJ/+
q4XxOfqb+DuF71Ko/hznszt8ZWs46bejv+5RfVH+poTxOc6/oc33bjPic6Gs
P4eUz9H+xST+GKRG+e1CkIvfXXR4HNOT+Yb+Q/3Z9MQCqj/H91c8frokh/gc
99c8+Ypxr6n+HP2PXf+1I/9l9WodeL4Q5RW/nkB8jt/vf/Hp4xPE52hfTfd9
6dCg+nP0t4ldnfONmd5rF66v9z92J28jPsf9b3Vi1vDpFD/H801x1cKJj+oY
n+P5Z8zrkg3txOc43tWV06wCGhmfi0BfPDbu1n3icxGo2M9VVJen/HYRPC+e
cnBFM9Wfi8Al7WHZEnPicxFkuEVEbYil/moiiIqa/FFsT/FzEZiJyyOn4/6T
8rkI1BpXvbK8wvRk+ohgpGPXh9pW0ocTwYZhnlmHJ1H8XARvzaKd7V80MT4X
wd7iKyUVS9l9u5II9o+IT8r4SvrtIuhWFyT0ukn6cCKAhLzmzSOo/lwERS+e
Blbfp/7nIlh+uHi6+bomxuciUEpalFOnSfpw+L67D+QH+BKfi6A8pdhhz2jm
z4eIwKBi+56ZQnbfPlQEFVfHHb4SQHwugj9Vdhe+5jQwPhfJ+utK+Ry/r2vD
Wc1epA8nAvdrx+KWXa5hfC4C+XUzwNGN3bePEIGvychrmYUSxuciqJ1pc9S6
gerP8f214tZefEb15yIY7ugRkvSpnvG5CBoN7v7ItKD+5yK47Llx1v13VH8u
Au2IozrnV1P9OX7/ILmFNi9ZPtw4EXSY2NudSaT+5yJ4rL3W5cYwqj/H7/sy
oLBHEPG5CCKsl+WmXmhifI7fLyj6dHA/xc9FMH5Z97vD05neK08kix9L+VwE
yZNnjR6fR/3P8WfRfcNFz9h9u0gEBc7gpP6A+Fwk65cp5XMRNGQu8NpvQvrt
+LP6gqZ+tuy+faIIWn3FHlZmzJ/riSC45mZyuR/rxzJJBIk2+VmCTNKHE8nu
R6R8LgKNwuR832zShxPJ+qFJ+RzXt/Dk+/uniM9FEK3/6+eEQup/ju9zxaCg
w6qF8blI1s9AyuciKIm6+3d4OOm3i6DUeIWdxUSmJ2MsgqAQ7iMNe4qfi2T5
6lI+x/2sMKco4SXxuQg8bAxiZgYTn4tkekNSPhdBj6YbKmsuMH8+SwSFfi4z
7J4yvVczEXjO6xNVK6D6c9w/pj/kBZGU3y4C+zybxdN3sPv22bheXs8wP/+M
9OHw86q2v27YRnwugg8XPD7n7qT+avh+WgPbXFoovx0/rzhq1K5/SB9OBDuD
dl09N474HD9f7fQe4wAJ43MRxLt8+6f3NdKHQ3sR++PAoewWxuci4Lr3mcAr
pPg5rt+TR7VOulB/NRH0EwgfjsmqY3yO9s+uUG3ZGao/F8GnZRu+WM1pZnwu
guyN7u9fHyQ+x/0UFhdn95z4XAQr/Tzcjz6m/moiiNXvfNjeyurVnEVgejS+
KcmH+p+LYH1lTuqJY82Mz0VwJPzPym3D2H37EhFIXLb2iZpB8XORrN5Xyuci
mf6SlM/Rfor6vHIop/x2EVxqFCeb3KP4OdorgcG7dC7lt+P6k8R1uqwi/Xa0
5wvenFHUamF8juu7TPv85h0UP8f1c+3l5y9ZrYzP8fPUJp+e+qqO8TmuN9G3
4zvcJYzPRbApPVeuPpzy20VQpl7/qryK9OHQXqhPHX/BleLn+P/pwj/9BSwf
bp0IQlzr406+ofi5CLpc7PP2XqD+aiI4FixeDFNJHw79ScovL5/+pN+O88vf
eWTVEab3uh7tbUzYizlBpN+O4/encH9ZKOvHEoDrTSvMpddkym/H/XSz/LFm
HsXPRTDn/AvNo3qU3y4Cq5vJJ7V/kz6cCFaYFf1+Mp3qz3F9K/q/sztL8XMR
pM/UaWh/SvntOD4mKyeda2d6r0Hofzy/XFmrTfntIsg9/j3qRgrpw4mgKlPC
1e6g/uciEOedbLO6RvrtuF5Ojv/1z2fSh8P1kF2t7HuI4ue4n50K+l+waGB8
LgKLwRdbH3ym/uci6PSf88n6KPVXE8ECl4j14wbVMT7H949fONUoi+rPRZB2
wfvf6h3U/xzX/6OVNw1yqL8avr/+NMOCMVR/LgLdi1+3qRlRfjvag8ezbysd
ovi5SFafLuVz9B8lvbsCNEgfTgRf1fsMyAskfTgcD+fh7z8uovx2/L6+3ePf
WFH8HM8L4ev01n9geq+H8X091brW3yb9drRPc+SuDmsn/XYReD26bDS+uZHx
uQi+qRUG1rqy+/bjIuD0XfxQ4yzLhzuBz+9Q7XonmfLbRTDd56RDjUUj43MR
zL+9wdr+I+W3i2T3u1I+x+e1cFnl94X4HD+vbtDb9SLqr4brpXtS2ZNJ7L79
NP6/Wb1exivic/w+zeB1ySuJz9G/NPbNOfGK+qvheSh4p4Kvh4TxOf6cPrG2
257dt59D/+jlfvPgc9JvR38SdCneehDFz0Wwpzy4bKgxu2+/iOcfvaA3nzQo
vx39b1H/yNvfiM9FoGVrW/ivdR3jc9wPYSW8y9Mpvx3XY/9QY/Eoip/jfmt9
vW2DBem34/+3DE3b07+J8TnaT+MxdVv/NpjU/o/PRdB8q2PR81jqryYC1Y69
r/c/pvx2XI/+90YXKFL9OdqPJ8pTEn9Tfjuex9zlBvW5T/3V0F/r3/n11kjC
+FwEcd6mQaqlEsbnaP92PNR+85v4HO3NDpte65c1Mz7H+fGP1x2hQfntOB56
jZsuKlP9uQi27Zy1vlKxjvG5CKYZDXL/15Li53jeMj+ncb2B+quh/+8RHraq
L+W34/o8bjT4bBXVn+P+cb9tXtnA/Hm+CIoDo8PLJpM+3H/vu7D+Tk/Sh0N7
bt028nM66bfj+9cozqw7w/Lh7otk/TClfI7rK/h06NHLFD/Hvw9UTjMqpf5q
uB4Gnw42h2bG52hP8qxepPSk+LkIzCu28T/ieUDK5yK466X1ZfmPBsbneH7b
HbxW7lQj43MRnNPf191Dm/qricBbtKyv2m7mz5+JYIti80b+XZYP9xzX69tl
VlMSiM/xvPBe4+wOID7H9zm2UzNNg/nzlzgfZkt9+RZUfy6CMd2RrcFKrF6t
HL+/0S5Gkkb15+ifw2t9GhaQPhy+3+SbYk/nFsbnIpBrCzjvc4P6n4tk/e6k
fI7+zK1Ke3cJ1Z+LQHOwRsA2Rao/x/WW5av+wYn04USQ8NPs0KJ+VH+O+0H7
U4xgfx3jcxy/U+kTcm+x+/aPuB8yXQy9DhOfo/+ZuufesE7Sh8P1aPXZLatJ
wvhcBEtFrqs26FD9uQic/zT3UvrG6tUkeB6ucpCzdSc+x/PNy6ZNf8ZR/Bzt
hdLd42/mUf9zfF943bPfxGbG5yJQVkps3GXA8uGa8Dxkkfx7+2jSb8f9aDdo
u3E36cOJoHfcmrbEWIqfiyB05gOXBW+ZnswXPK9EJKmoiyi/Hfmr7+vJekso
vx39UYaVzhLkQSmf4/PZv7WbNIj02/F8UTflp+VX6q+G/jTq6a4cfep/jvbS
0eTNzATSh8PzlpvlCfXPLB/uJ+7Pm5d/7jlP9ee4/vOn/Tr9qZbxuQjm2kfO
vrG8kfE52rNT+y+H2pB+O9rzA0mz1pE/78bzwxZRlYcqxc+Rhz+mLNp7iNWr
/cH5M/0ZkaNMfC6GWB1FwdgRzJ/3FMOmjVWtowSU3y6G5frjf7ekMX/eSwzT
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
lQ39JhWRPhyO33uzTepOFD/XgekjZ7w2Jb1XdR2ouHb5zaSRVH+uAxAxvvf8
H8TnOuC5+6f8m5uU347/nxS38NME6n+uI+tHKeVzHdn5RMrnOjD8hlJBz9Ok
D6cD2+b0t3noX8v4XAdu6cwZF/yY1atp6UCI58DssY2U364DDRfS1iZfZ/lw
43Wgy2q99szNxOc6oMYxfuaSQvXnOrDFTElr8b3PjM91ZPV4Uj7XgTmZVzPW
ttQxPtf5fz2de1TTVxLHUcuha1kUq61opaAIPjvWKq5algGXiByji6LLUmx8
8ahFQVFCWcVTWtQKKAIWkUdXoNiocBZlKYhIjo3oCaRSecimkKIm4RHBIghI
2brj5k7+/J2T88vvd+/cO/fzm5nv4F9lryIezOeAju3n8qR7RT+WRYBfVtKp
fqVJ8Dmgb+W9k5ourj+n+fdsDn4RLvw5AOaN3b2ZVdMt+BwwetaCOPXbBsHn
gDvLfBvHrnH8nOzxD9E7N1azfjvgqZoBp84Irj8n+6sbXpufI763Lyf7OH59
naKb89sBdRHJLbvThT9fAahNtQlo6ez2rPw/nwMaE+wX35KIerWVgMqNEsmv
r3N+O9lj2QlD+GquPwfUH9aPDK0xCT6n8a9IG/+sg/kcsOjt4s2pq0S92p8B
36vEstnBzOf0/nKf7/oHmc8BG6YWH9OPZz4nez3itDk/plfwOaDr7kKN30SO
n4OlX6uZzwFnHJI1aD83CD4HvLnaKlDtLPy5BCz6ZGY+p/vX+ESW9zOfA8Zs
ffO7dTquPweU1GanZwVw/JzeN8T+B6038zmN78w2mVIjvrevp/nv92y5fVB8
b5cCtiX+0bt4vknwOb3vhNGB5mUmweeAQWVppX6nuf4c8MmA1G3qFuHP/QEP
xI2pjrr2CD4n+9ymtOp9yvXnYKkvNvM53T+u2MqL3tfM5/R82fsepKu4vxqg
+/w37DxfYz4n++mckpz3DvM54N3aUNXTN3sEnwMWVq1XTE5jfTiy38pppUGR
3P+c/v+X2hF/e46fA9quPPVB1gWOnwOukoUN3vmXyIeT0f9VTspdGcX67YDJ
RRsG3W4aBJ+TfTvUX7Vfw/ntYOnvZ+ZzwNCBaYnz5Vx/Dha9TjOf0/NZJ11q
SxT+PJTmLzag4GCq0HsNA0t8xcznND4u0oW79ZzfDthXP1Z6qoP5HHBRXOYP
EaVcf07r3bhpxqST3F8N8HDr4j8duNgl+BzwXFr1iy9cuf85rYft7w41Z7F+
O6DaZmFw6AHmcxo/622zvnQQ9Wr7Ac+siXZ3vK0XfE7+rr9JecZKfG+PJn+n
6rD5zcT67bRe1PI56hSuP6fxmaJy8Zgs9GRiADMiJkz92VroycjJfjTerTPD
WL8d8Gp+X4OdJ8fPaTxT7Z0qVnN+O+D49ve+X/cj9z+n/fvFUa+Gz5nPX413
U9BoEsfPwdJfyszngKqMkrort5jPASuut16Jo/Vp5nMaz+V5b3yrFP48ge5X
HdWXoOL4Oa0Hv+qlNfOZz2m8bZbP861l/XbavwyF4To75nOw9F8z8znglaBm
b8MmoSdzAnDiO04LehWc3072OFKR8nTGE8HnNF/FD/9pnMf57YBfW81d8Kzb
KPicrj+brlHJRb1aCmBC3fZxMaGc307zoawsyvz9oeBz8j+uIb4Z0zm/nfz3
rtFG7WNRr3aG7MWxQ78oSOi9pgEOXev6XhvO+nB0nXv58R4jx89p/DfusQlz
Fv1Sz5L/lpSATxDHz2n9Dp/46JhR6MlkAp4PuLQnbtQk+BwwOGsoz8uH89vJ
PkLu6/JShT8/D5Z4p5nPaT90cVfKvhH5cDmA+bP2vnXHUfRLzaX1MbF+tdMy
kQ+XR/7lXtIWQyHHzwHLG/Pvdsxi/XbASXcffbpJLfz5Bbr/odhMz/3c/5z+
f4fsdW9n7q9G49cWezZTwfFzwHgP34+vRbB+O+03PUnPnPaL7+1FgMsu1p2K
lAp/fhEwKjrhl7mXOX5O5xO3bpfFh1kfDrBE3nylfivXn9PzPv5tekFBl+Bz
Gv94yeDBzawPR/uHl+ynEoPol1pC9nSvCEadmM9pfrW7l8xTM5/T/b4qn6Yv
6RR8TvPdlJj26TDXn5O/3v9Jxu0LnN9O/lXb/PcjHqzfTu//rmnnqlzWb6fz
xFhjxeUurj8HPKHZWnl6Eeu303xa+TlkPTCa/XkFPZ8i/lKyLdef0/UXccaz
k5nP6f6BSR3Z24TeaxXtf0dKlSMKveBzsPTnNPM5nXfbb8hUiZzfTu+zZ4uu
JIr5nOwx3tV08zTntwMOlh962ZDA8XPaT7bleMY8YD6n+VM+Rr0Dx89pvT4/
u/i/3zCf0/lrbPiz2eNYHw7w2fqx80PPuf857aet2qoDUs5vB9wQGOiSr2A+
B6yXZj5KzzMJPqfzbdDEKafTRb9UNVjqk818TufnaTmxpVquP6fx8n75+4cV
Qk9GA5Z+T2Y+B4s+jZnP6fxx//2Zqams307nhfVrLx4sEvVqP73aT+VhYU3M
54BOiqVRumNcf07+zz/FURHPfA64qbBfd75V9GNpofXdVnBO9jX3VwPc8Te9
m23WI8HngL9GyaeH+zGfkz3kpvu51xsEn9P1DqV/hpfIh/uZfv/VSb3pCee3
03lNaojN/5Hj54ABKx7IqlJYv53OKz3qluA5nN9O56ugkuH266zfTv6jYklS
pEn484eAU3u333jtBuu3k33vmi2d4s/57eQPbNdIvHUmwed0/q/uXPjCnePn
dP7R5A94XBX5cEbaX7OjPhjcx/FzwKWBK3qrJnP8nObfw/pWeQjXn5M/rAkt
yjkp/HkPoEvy+621xRw/J/tVrD2a4Mz57fQ8dvXJdxKZz8k/rdBdsN0pvrf3
0XoO2X7cwZfz28mebG3vH2/m/HbAvyT6ZHd2i+/t/bRfyDdICqINgs9pf4uM
vZVjzfFzOh9u7lR8q+f4Ob3f83+7X9vF+nDEN4Ym/8y5rA8Hln4NZj6n+Wt+
2b53gvDnI3SerUteum8e57cDhmcv+4/vh0LvdZTm87ndncYbrN8O6DyzoU9T
qhd8Tv52WFbmWMjxc/LH7sVe0YEcPyc+3TXnH96u3F9tCUrG9UjcLvV4/g8h
Fnq4
            "]]}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {}}, {{
           Directive[
            PointSize[
             NCache[
              Rational[1, 360], 0.002777777777777778]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}}, {
      ImageSize -> Scaled[0.5], AxesOrigin -> {0, 0}, PlotLabel -> FormBox[
         StyleBox[
         "\"Simulated HG kinetics\"", "Subsection", StripOnInput -> False], 
         TraditionalForm], Frame -> {{True, False}, {True, False}}, 
       FrameLabel -> {{
          FormBox["\"Signal / INT\"", TraditionalForm], None}, {
          FormBox["\"time / sec\"", TraditionalForm], None}}, FrameTicks -> 
       All, PlotRange -> All, DisplayFunction -> Identity, 
       Ticks -> {Automatic, Automatic}, AxesOrigin -> {Automatic, Automatic}, 
       FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {{}, {}}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{}, {}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Signal\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
                 ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{"\"imported data\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "False", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox[
         ButtonBox[
          TagBox[
           TooltipBox[
            FrameBox[
             StyleBox["\<\"Initialize\"\>", "Section",
              StripOnInput->False,
              FontSize->18],
             Background->GrayLevel[0.85],
             FrameStyle->Directive[
               GrayLevel[0.85], 12],
             RoundingRadius->15,
             StripOnInput->False],
            "\"Initilize the values\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Initilize the values", "Tooltip"]& ],
          Appearance->None,
          ButtonFunction:>{$CellContext`nb = EvaluationNotebook[], 
            NotebookFind[$CellContext`nb, "initialroutineHD", All, CellTags], 
            SelectionEvaluate[$CellContext`nb]},
          Evaluator->Automatic,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]]},
       {
        TagBox[
         ButtonBox[
          TagBox[
           TooltipBox[
            FrameBox[
             StyleBox["\<\"Save Parameters\"\>", "Section",
              StripOnInput->False,
              FontSize->18],
             Background->GrayLevel[0.85],
             FrameStyle->Directive[
               GrayLevel[0.85], 12],
             RoundingRadius->15,
             StripOnInput->False],
            "\"Saves the set values of the parameters\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Saves the set values of the parameters", 
            "Tooltip"]& ],
          Appearance->None,
          
          ButtonFunction:>{$CellContext`initialparameters = \
{$CellContext`h0in, $CellContext`d0in, $CellContext`ga0in, $CellContext`tmax, 
              $CellContext`stepsize, $CellContext`kequhdin, \
$CellContext`kequhddin, $CellContext`kequhgain, $CellContext`khd1in, \
$CellContext`khdd1in, $CellContext`khga1in}, 
            Export[$CellContext`savePath, $CellContext`initialparameters]},
          Evaluator->Automatic,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   Legended[
    Legended[
     Graphics[{{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0], 
             Thickness[Large]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag$132358#1"]}}, {}}, {{}, {{{
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           Point[CompressedData["
1:eJw83Hc8le8bB/DjcI7jiFRSSZEkaUslqesuKZW095L20NAuSZPWt9KSSkLS
jkqStJCQ7D3OPvbe8/dwrvvXP9+XF+fxjPu+3p/rvh/fIY77lmxls1isGfos
Vtd/6b+kcoMYx6PPoO15dcoCRwf4vt7mm/3tF/j1flD81I2IFtddEYduHYPY
A6+lAZp++H03cHjMcnpV+AJOar+ZIzxxHrIuhxwvfxgIip/3AIde866l7nsB
x4uNx/NeXQWPjtAl9/eH4+dvgN6l7RHXGoPBqnDhtXt7PcHi7X8kuNdzPN5t
iFLtPde7IhTC5/Zgj3S/C4vs/H8MO+2Px/eCHf+2v6+0eQ+WH2KPRD72hipP
7V9r3b/g73sIe0Puho2o/AFhgy+ULg7zAQOvwf9ib3/H3+8L4/pxQt0iP8HD
KIN3zjueQIIwrOnF2XA8Hz8wbv51RPryO+Q2d/1Cf7DdKVr77k8Unl8ABFWA
mu60TzBwbL4R98xTMF8sjM16HY3nGwhB9RN29dEJhTVbpjJHfAba6y5z4xaF
4vkHgdtbaZ7fvWjwvt/17zmktXwrWvolEq/nBRjpvUnZvikcshMbl4qfvoSr
jwMOuHyPwet7BQEfVnxLmhAFA1RWaI4OeQ0tw1eNdppBr/cNhMG6X4Z2sbBq
StcB3wLr4uwNYw8k4vW/g0Me24xHzf8FdpMvzXCQvoPYbZYXe8RG4/0IhqBH
HRt3kRgoW9x1xGDYsTGsXhqYiPcnBBwK1Lw412Pgyh556/PqEPC9M7fPvN3x
eL/eQ16CUvRW6V8Y6a7DXMJ7sLpsHnzY4hfevw9g4Tz+5zTnKIh/YhNa2/4B
whyFAbMGxeL9/AhGBksr8m/+ht3M3eqvEgoO5tfFU+cl4f0NBa2Tc6aMfRML
/Ez//dP4n8DWXyfk6LnfeL+Z5zpmfcPWpgR40XW5WmFg4v1JOfRdPN7/MDDf
lbJu1NdEmNd1OJ3PUFZrYuG0PR6fx2cQBAbfz/H4DSVdt1svHPbL69THFsTj
8wkH3skhlQe0kqHr7iUZfoFDT3ubzf8Qhc/rC6iU6wQncVJhxLrrP+tNIuDD
rvbfw84k4POLgHVLnGfdZifAH+ZoumO/QtUt/saX/AR8nl9h1rO1t+a9/QM7
b5a7wMRIMPmreU7tRhw+30gou2k3tZ9SMjAnx1zyN5hl6HR72fxEfN7fQPdr
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
ik0W7A2k+9nKhHhOurXGWoqeM+Px4M7+P77I0HNl4v6LmzfkpgQ9VybfrKzK
vy+i/bQyeSq4o/dhCH2/hXne+nWssoHUc2VC9ycVnisTu2vBk0vC6Pq5MrlW
rOZc9Il6rkx0NiWNv8eMf4XnyqTqVMt+nXd0vY2ZH2K7KTOXytFzZbKMteSS
7hkpeq5MUkarKV98WYSeqxBHT42yGpYMPVchYx848Gd00PV3FRJ09/wJrWi6
36ZClpwLb1LyKkbPVch0o7rFtxgfFJ6rEN/z/r2a99D1eRWik/MrbaehFD1X
IbM1nR6n9yxCz1VIwZCHho3BtD9XIS9b5Yv23aDr98zxF4+YH1NAPVchAwIG
ad1i8qfCcxVS3UvPffRt6rkKKRNtOPyUuf8Kz1XIAfnGOpejtD9XIaNm6VRY
9StCz1VI3nm1GVafpOi5Clm29/Nnj1lS9FyFgJu6XX1PKXquQixLrMaIdsvR
c+bzi7r+D1C0P1chQx6Zr5+1gu4PqPx/fCg8VyHjXEJ2jd4qR89VyI6ROxe3
RcrRcxUyU9hHOvKiHD1XIRaqScYTF8vQcxUSYe3ZK+C9FD1XIQ6HNc6qt8tw
vVGFaPv69KobJUfPmef1bdaMi3q0P2e+Npz1ncv0vwrPVcgwNbewHzeo58z1
BbwM01giRc9VCEf7t9mf5yL0XIWI2kM4P3bS/lyFBA6yHW4wXoaeqxA3Y9VL
KUep58z13rs3etlHOXquQmZNsl6z77MUPVchuwauDl4JMvScOf8Z1m6fj9D3
C1XIJN/Du66WUM+Zn//R543XPCl6rkKO7M3+OZ3p3xSeqxDuf4sm24bS/lyF
tDjnzNAZK0PPVchcY834oXbUcxVye3tA+ozpdD1UhRi/DPeYsFqGnquQmB+H
hw0ktD9nxqfH9TOjmoXouQr5z8hFVjZMjp4z4+fl7qg6Zv4pPFdh+ukrl4Xm
MvRchTQ0+E984ChGz1VI0vGyBwkfaX+uQnwmrRuSFiRHz1XIw0Gf6rRbqOcq
JPzK5kGCvbQ/Z+7X4odJJ9voeitzf0a2Bk+Ol6PnzPz6VryMM6AYPeeQ83nT
79kNkaHnHPL4Y8m9SaPpeiyHVNmc/fjwBO3POcRk6plNhkVy9JxDpk/KKMrx
pv05hwyCz+oqLRL0nENE1+SnDpVRzzlkVbAwKH8d9ZxDvu48IKv9QfdrOGSW
r/B11YQi9JxDNkd8fDR2FX0fg0M+BFsbODDjUeE5h6yu0mtJ7EP7cw7xkF4+
OHeeDD3nEPp+sMJzDimqGbZ1VBz1nEN+xp69L3hYhJ5zyBZz24gtf+ToOYck
aKy6Mf4w3f/hkBi5+rwFtjL0nEPMNgWFbRwuR885ZPagnxXGQyXoOYdkZc7s
2GokRc85JC9s376Xj+ToOYf8jVy+8PMsMXrOIdrr7ooCwqnnHPJig49+ygPq
OYc0Wf1Wf+lBPeeQsDVN6SPv0v0kDvHuufzyw570fTDm+ZQ4VK46L0fPOaS3
353GabF0/ZlDXHfFqKpIitBzDplwRRSXeZmuR3MIO+hk5vx9QvScQ3Lf/3ar
+0c955C0DSO99Vxpf86Mj/G/JJWr6PtkHDL4q6w9dpMMPeeQRQuqnD80FqHn
HBK7+V39VV4xes4hS/fPZGmWUc85ROLQar7xDO3POeSI1lmzw1Fy9JxDLH64
b3KdRj3nkKiTSxaq60rRcw7RUW3++/AW7c85xNxXrLa4QI6ec0jHkd+Fx2/Q
91E5RGu2a3vuMOo5c3y3HieGSannHGL/43nM7ZfUcw7RHd5f8PFrEXrOIY7i
hb9SUmToOYecKFu4dQjTPys8Z57Ht91Xr32QouccUnP+0Ir9I2XoOYcEbBj/
ZtopKXrO/P4d13va/yhCzznku7WRc+E3ul/OIT1ftweNPEH305jxsbfcP+Qv
9ZxLItxad9dEyNFzLtkysAx+GcjQcy4RnZ2kt9Ncjp5ziYlw6obNtTL0nEs4
Rgbnroyl+29cIrlb8nxpTxl6ziWpEWdNZcz8VXjOJcYlun/i2+l6O5esmKTX
cwdTXxSecwnd71J4ziV0v0rhOZfsWriYsM2K0HMuOb/p5+u60iL0nEuSZohO
9ztE+3MuKT79906xGX0/h0sWTbN3TmM8VnjOnG8qf9n53kXoOZf0N/BpWTuT
9udc4uDquuBtHzl6ziWPVs5buVBM19u5xCM1KE9pkAw955LAo9dMC5n6rvCc
S2pOKl9J0Kb9OZfwvjjMSJtCPeeSkY38W5pnJeg5l9xL7LhZEkDX27mE7kcp
POeSbT8sHoEF9ZxL+nb9uZ4PfR+IS06olh01/U495xK6/6LYT+SStN1vauLE
9P0BLuk9z7B0yBkxes4lVqti9X/PkaPnzPHdyvbvY/KownMuKUh0X3bITIqe
c4mlxfnBquNof84liVesUrIyZOg58zz39n92Ipx6ziV6IbGmI67I0XPm+3bz
N05slaLnzPOs2FkQzPRLCs+5xEKs3vy0ga63c4kdZ6dNDJPHFJ5zSb+Ko47L
2ml/ziXWe7/0La6QoOdc4vby8uMTM4vQcy55uH1NY60jXW/nkpYtxzIfzaJ/
T8Ql3BvZp/6up+vtXNLjgvLogWEy9JxLIvf7DRw3WYaec0lA3rnrz5n5rPCc
eX7F3gG1FbQ/5xIvafJvbiD1nEvaSnXucH/R9xmZ+VZhJFvmT/tzLjEPe240
mydBz7mkemjHoMM/6H4plxj+NFjwZWoxes4lPs1Tj/o/laLnzPw8cZDd4FWE
njPjfdDSIWZraH+uSmZt5n/In0Q9VyXvqta8y6mSoueq5L+8f39WrpKh56pE
dLR2teH+IvRclWyoVDFe2F6CnquSJWs4o3x20vV2VXIoxu7fmoVF6LkqMTsw
7zO8L0LPVcmi2byKOx5y9FyVfJf7ZIWNoP25KlnlPqXRlyNHz1XJi+09Sw+H
UM9VSVJQ7RW/NCl6rkom22mXnqgRoeeqRDNm9bC/hjL0XJUYTFt2sX6XDD1X
JTXLnbZ595Cj56rEQVvQPPo+XW9nrmdpWsOmOtqfqxLfS/NZ7yzl6LkqGREw
8INZFX2/Q5U0iCxWJV6jnqsSdu2HqZkrZOi5KtlzjqV/fXAJeq5K7l5f/sS8
ha63q5JjjZ90eprI0HNVEtH+qTT4Fl1vVyUCjRP1c8TUc1VSVe5iazNcjJ6r
Ej9bx+OeFXL0XJX89JLO2dBJ3xdRJZ5Xdigne1HPmfN9/1j1KzP+FZ4z52vu
87POT4qeqxKvB0cP21jL0XPmfJzvK51IoZ4zz0tjYnvJeCl6rkrWbk/iWrIk
6LkqMSyL7Wj0lKLnqmS5ut0Da6Dr7aqEZfDkfNkPut6uSrg5Lm6vYuh6O/N8
Iib+VN1OPVcl5tNGT61g5pfCc1Vif/RrHy8r+vcjqmTLdbeANpkQPVclgdKL
XzzqZei5KlmRPO/+LEcZes48T81poXrNxei5KpmgfWzv5QD6vpoq6R/1712/
QLrerkpi74+Pj/ArRs+77s+Y6OHT5Og58/zcJ4LgnRw9VyXOUv0NfTPoersq
+dd/9Pv3NnS9XZUMXuOTaMr0IwrPmfMbW5o98hV9f12VpAXDjsftUvRcldgu
Dj+V3FeGnquSm86/MnqViNFz5vmA2/n7W6jnPHIpOislajp9/5VHAj2dyzlM
vlB4ziNnPZdIFobQ9XYe6b9sQXbRGNqf80hZc1GL/3y63s4jblp9trq1ytFz
HpkV5VaW5VuEnvMI+876lxp9aH/OI1tOJuj07iFGz3mkyGKvqThfjp7zSKLJ
ReUj8bQ/55Gw5Yvkh5i8qfCcR5bL3Z0+SGh/ziO+Y7/apTL9nsJzHtl2Y2No
DOO3wnPm/LPOTWefoevtPBKboOR1mk/3z3kk6uy583Ouy9BzHql6/Dts7T66
3s4jAeN3LfvXKUHPeWTBoGNa2XPoejuP3C67c+VNG/WcR0rUzwr/OsvRcx7R
zqrOjzkkQ895xC725vz3unS9nUdSgqysvudI0XMeeTfw/q9fMXL0nEcatHVI
WIIcPeeRtLedyZPXydFzHhk1Or3/OkO63s4jemuWD9aYRd/35ZGadctLw04W
oec8cnylqf19ffq+EI94GU41XP62CD3nEdN5O3q9VaXvD/HIoT2HdzvYy9Fz
5n4kk7+OmkXoOY8oSZckb9gjRs955LJbfuRDfxl6zowXjWVZ+w3oejuPmLsP
qCiZQftz5nm5mu/bZEH3z3nEbN3cEzEbJeg5j/hszokzMqCeM/djUbHFmpUS
9JxHHvbm3lJj8pjCcx4p9g5ZpXWOrrfzyI4B7uEfbsrRcx5xYd1dOme9DD3n
kZ81pvMH1dH1dh6pc3IZ/9qK/n0Rj4TLx283UqeeM/Nl4DeB9yXan/PIlLFn
aoZr0PcXmfOvbcxMXS9Hz3lE/1HpK+NFtD/nEYdvzea8PbQ/5xHLeds+2q+n
nvP+v96o8Jy5f3LulnWD5eg5j9w1fP5jgH8Res4jKwZ994w5Rt9/5JEbLhb+
xgdpf65GbhuPqCiSStFzNWJhIK4Jq5Wj52rkwEmLNUeWi9FzNeK9e2ia4CXd
P1cjkc1u+1gr6fuSasQvr3rM3hjqOXN898fGkv97rkZ2vH0c2reXFD1XIxFV
5reUx9D9czUy7uvoJRe/Us/VyOUfPRsy66XouRrhtxllz/Oi++dqpMfTOWNy
/xWj52rEZ+B3zfgNcvRcjQwMzfk0IYf+PYUa8VV/t9e4kPbnaqSu+D+XYCa/
KDxXIzpfEs5bnKP9uRrRvef9ScL0LwrP1YjzHjF/2EzquRoxA6MhFnvpersa
SRzi47pyHfVcjWzoHb3ESUr7czXiEFc7e7ypFD1XI5LFgVKNvcXoOXN/hd7z
l+8sRs/VyNKda05WutD3O9XIryFRD8boS9BzNfIz1Jd9fx/tz9VIiQXryuAS
6rkaKRK0DPp9l663q5EhoXNGxDbR/XPmem0PfawvpevtamSL7fv7431k6Lka
ianSPDJqN30/VI3wBuwb4nZUip6rkYLgJO8X5rQ/VyNlNXON/UX0fTI1Yile
9vxXG/VcjdhaPAtecJB6rkbevJyaO3Ua7c/VyI1B+b3KIuj7ZmqkJnCGz0fm
ehSeM8cbv7Q4Lpy+f8aML8v8k6nfaX+uRsJP/tBjiSXouRoJYOUMOsT0SwrP
1UhhxNOvozh0/1yNhBWMmWpTRNfb1cgYQ6NPi3bR/lyNuIo/v8g4QD1XY/oj
/989mH5E4bkaWfZFIzqtkPbnasTg4NWXqp20P1cjoRai/NgkGXquRm45mFbJ
f4rRczUyPTRYK+Ee9VyN7MrJ/9Mho+vtamSd7e5+s5xk6DlzPTkttkYj6ftv
auTY4aVBXufo/jnz/DeYaF3tkKHnfOJ7P2CR8/ci9JxPXqUvHjXNQ4qe8///
/pjCcz5ZJt0TUztOip7zyRLPmHsTn9L1dj45ZJiy44yUes4nJlPe7jptWYye
84nDy/9WTr0nR8/55CK4x5Qw9VvhOZ+sGZASYzaTes4n05t+rk7eW4Ke80mk
de6PH5+p53wyKqq67xht2p/zSVtxRofPEOo5n0RZ3xQfLJCi53zyYWnZ9bua
tD/nE9VAnSXTBPTvaZjz/5qr/MmiCD3nk9MnAx7l+ND34fhEEBd51L2Yrrfz
SdaGhWtv3aX9OZ9kv3dNyvhD98/5pCzwiotyDPWcTzZsdG8/dagYPeeT95Ex
xzTD6N/XMtefF6zHBuo5n2xTOlb5ZFMpes4nESP7Pku4Xoye88mRLw+cFt4r
Rs/5ZJFF5YSpAfR9OD5xbTTy8J8tQ8/55O/Ka7XzSyToOZ/kXTvRQ/BXip7z
yaS/VlEt26nnfHI7rlfdRWsZes6c373cRrebReg5n7wJdX10VqkI3w/mk5LW
QkG5jK6380na7DdjbdaU4PvCfBJqcukadz5db+eTAL8p+Vcri9BzPtl8+67Z
sSAJes4cz6491jhehp7zyWzfiMi5s6nnfOLsm3v/n3kxes4nKc1+aTrRdL2d
T/Ztr9m9aK8EPeeTliV3yYp+YvScT1wGFn80e0I9Z8aXhv/Dt8Nof84ns/ze
B9wS0v6cT4z2THI3ekj3z/nE7uWeGqMR1HM+cfMbkJbBzD+F53yyqiLMr2o1
fR+OT84OMhm8y0mKnvPJPQf74A25YvScTyy/qk582yJDz5nnt7Q2WS6i6+18
kjCo5UYvJeo5n4TYOb+wukX7c+b6Z3y9sf8iXW9nxpdgntakA7Q/VydaPpbh
fQ8WoefqhB97uOXrS/o+nDp555aV9fI43T9XJ1Y+fjaftxej5+r/7wcVnquT
MSN6WO3LlqPn6qRBLph9Ya0cPVcngW4d9Wet5Oi5OlkV5be4UrMYPVcn3usu
pB3wpJ6rE91v7NTPzPhUeK5OLj+aH2v7gPbn6uTn/p7XopbTv59QJ+fLBPdG
vf4fV28eF/P7/f9nydY0zb6XJGsoSVLSEZJkJ0mKJElIWZOQsku2bElSSCQh
2bIllYg2qSylZbYihFeS3/X+zHXme7v9/uw2zXOu57Wc+/Oc8zjniTzXgx1z
FXs6pSDP9WB718JzeTmfKc/1oLP/x04PTqN/rgdHP68MGqhGnuvBtgu16U/X
Yryd/P5j9wutf+opz/WgeF3g6r/BCspzPZiRfmGcsIuS8lwP4pa+SV91D/1z
PTAWrrue7Inxdj247BpSEeiP+XM9sDAb8Nn8APrnerB71fLnYsIXDc/J/QZP
7zvkF/JcDwIeF/wNJc/nGp7rwc499wfppjVQnutBnsEDPnRFPZweWCdOWmx+
AvPnehD6a/IGF8JjDc/JegTw4jnEfmp4TtbPJvBVxAg55bkezDq9jfvrMfJc
D8JNRx42L0Ce6wFjrLXJjNUqynOyH1bN0LkVWkd5rgfTmoOMuwyqpzwn43uc
XWbj1Eh5rgeP+1jafeegf07md8MV3aVkPBqek/Up8EhKmoz+OZmvROeD3oR3
Gp7rQZ//va7kGPJcD3g1PikB+9A/14PmEWELP1ghz/W0+QgNz/Wgnbfjuquq
kfKcrDdn6AdWJdaP6sFNL/NZ74tRD6cHhwcal1pux/y5Hvjf8D/S2QP16XoQ
xus0nGeJ/jlZrznp4af/U1Ke64H6elT0kEiMt+uBIDXEav1fjLeT/R82ae5/
X5HnehDd3MZ6sA/9cz3I/fB52PNRDZTn5DzXjJV/D0aeMyDtwbXi7PUKynMG
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
M/v+Q/+cCTq5ScOnlGD+nNxPxBWza29Q3072a2X16VfsRspzJkRw6hf0TUE9
HLk/8xp9F/cGynOyP3aZmz28jvlzJhy1ftGctwZ5bgCHMxf6xfk3Up4bgPHN
7FrHmQ2U5wZwiTXP/OpbOeW5AUSykp/d6475cwOwlleUd8mQU54bwF1eOmtd
BMbbDaDSq+beK2KvNTw3gICoX13f3UGeGwB0L/rdNQzj7QYwrXyM32Q9BeW5
AfD4+W/frZFTnhtATszs6MiVCspzAwg6rWxrW4T+ORmf//dai8VKynMDKDX4
dGnnJPTPDeDWM/DyH1FHeW4AO81kCkNf1MMZQKbpBp32P+ifG8Ci6RsWvvuB
8XYD+MpZbnOfgTw3gFhnh4YpqchzA6jVK3wonYb6dgO44NkiLK9C/9wA/JpX
xganYLzdABrU17aNf4zxdgNwqXC3sz3aSHluAMr/zrrsnNhIeW4AYxOdRvx7
0kB5bgDD2ifU6hB/X8NzA/BcZ7kmQ4n+uQHcWVQ9/91h9M8NtP61hucGkG0e
VPejDv1zAzg3plj3wXXUw5Hf29DDWNCE+nYyH6YRbfr9GijPDeCI63qfv411
lOcGEMj4GOw9Vkl5bgCCaF2zAt1GynMD2Lt03JUj85HnBjCm/b+yiFT0z8n+
a6+Ij+M0Up4bgGVIyb8cD+Q5uf6aZTZLfykozw3AtWbBMvFtrFczgLR1XTIH
pcgpzw1g8L1RpwJ/YbzdAD7MfnK34yfy3AB8X/jesb6npDwn+9XwWuSRGeif
k/3UOnPJ66fIcwMIPb484Y8z5s/Jfm/ttGaxAuPtBhCh69Nl3XgF5TkZ/283
wcp+yHMDuH/G+Nm2tAbKcwOYM1T8eXcHxtsNoHNK3u7KRoy3G0DCrwmH5vdq
pDwn96vTq/vQGchzA7jpsD0jfzTy3AC6TTXS0ffF+nMWBHoc7TyZ2H/NeWeB
aN3L1WfXYf8JFlzQ6fvqkAOef/L/g7oWNpkrKO9ZkGTf9jxpDD7fs+DJ074L
JpXVU/6zoFud7d8P5PlJYx9Y4JLTtHDlQzl9HmDBlawhJWmxWA/DAv+otDn3
bsjp8wELhjEaaz81ov1ggdPnYfvVo1Fvx4KuRaOzl3ZGe8ICk+Mn99z0xvo4
FoDffWUo2W8a+8KCzsNcz0ZkKOjzBAtiYkbWDJuD9oalrdfQPF+wIDF18W+O
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
oP6CDV7hanVI90bKczbs/9LBHtahojwn81G1kR13UEV5TvbjgJajacRea3hO
5ufRSZ9YrX9I9stZ76FZofWU52yItua/FExFnrOhoONOzJMFCspzNpRzDl3/
vgl5zoa8bUb/bHRQz0HO35M3u8OslZTnbK2eR8NzYh9q8rt9uIw8Z8PgtJvj
sg8hz8n6hueEjDmF/iZZj5MFKyfvQP0HOc9ts1kVD5HnbMitf3Gj/gLynNir
T8tV97xRz80G/4fjbrfGoT6EDTbx4ZGO0xWU5+T6le1JkWWNlOfEXjmPc7wy
F3lO7PN2b4cyTwXlORuudd3yfs9DrM9mw5Or5qNa3eWU52R8CWFX3mdjP0M2
7HUbqb/IFfNR5H6PuT+TEX9Vw3Ny/hjmS1+JFJTnbMgK0Uu8Rp4XNDxnw637
RYdzZHWU52R+Ha+mrxyhpDwn9lcdk/ygWE55Tu7n6sgpAnfUk7Oh+FKU+v2n
espzNnRUFniv4Ckpz9nw6nDmbctZGA8j9iJwsq3/fjnlORssdnw+u7wS813k
vEzoldsmwvw2G8aEe034bzrqU8l+KmoPtyWfa3jOBsu2j57fCuWU52y4XP1V
Z2wL+tdsiApadHWJLupd2CAbNGLX+jXob7Phhx6X9y4FeU7s07hOC874oN6N
8GFa5I0peaiHIftVfHa2IlVBec6G5tmPvOJdkedsqA4c33/SAQXlOQemHXsc
/jUD9a8c7fOZhucc8Imfc+3yKCXlOQdqTz46t4zYWw3POdCtU0q3fVPRP+dA
kPOBMI8q5DkHrPotM/7vEvKcAx4c5TheCebfObB+sf7d4DjkOQeyvR5Fyns2
UJ5zoNeu8U8j5mO9KwdsMhSLDUzllOcciK888PYgA3nOAeNe39x//UT9HQes
LZ/t0emDelsO7DzJD30+AuP9HKiMaD65uQvqdTgwsHxv+zw7OeU5B+73X5nF
f4I850CkdeQpPQHm9zmwKmVgUrslxgvJ/YTYdKooQp5zYG3Ph3F/HdE/50Do
zIrBA8wx/8+BU0xxa/In9M85wEnJHRJqj/kDDuisWXe/e0Ij5Tm5fqJDy9Vm
5DkHyjOfLLv2HvOHHJBNX8Coi8J+mxy4ecSs9veoJspzDrgrvzzrwsb6ew5s
vLiJ+EBKynMOuAn7PbSOwPo9DrRd7jk12Av9c3I95amm8wwl5TkHCpfs69Yg
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
ZqbVQ6v+cspzcv6CTqWmHcD6Yx5k6CafXeOC+XMeGA2ImulSjTzngcmcD3o/
liLPebBqqHdPQRTmz8l5CgldndQJec6DwwFn77dPwfw52W+jqoRhtUrKcx7w
wg6NmFSI+miy32Yde1s5UU15zgO11Tav6ReR5zwIezKaZ2ymojznafudaXjO
g4FGyVnX25HnPHAz0p8wtwX9cx44ynxO3KlC/5ys/+QTD2UmWC/Fg5/9x+0y
1EGe8yDRbOfrPl3QP+dBodXL3KGdMX/Og9e9veRf7iLPeeCqLLR8QHio4Tm5
/vQRR66IMH9OxvPmyGQff6y/IOth9XpG9nb0z8n/99tXs/oxxtt5AN6GgtAy
5DkPlN5D2H+D1JTnxF5N75nNI3zX8JwHdTWB2e3tSspzsh8G5p8NLsb6LB7U
Jq3pEtKIPCfrbR2+UylAPRg5L5mPR2/tgfUcPK2+WcNzHlyOSP0b3o79lHiQ
d1xg2t6M+XMyf6dNztSPxfw52S/x3NXMKvTPedDZ/ceMhz2xfyJP229Ow3Ni
D3SuSa64on9O5pu1wWbJaQXlOdlfphuHDXmD/jmZj4Lplw8byynPeRD5caFD
+CQl5TmZX3VgndNdzJ/zYBajuzo2FetHiL1mxjrZz8J+LsReTS2ye+WF8XZy
f6y4Ab32YP6c2Ne88beSlPg+K2J/XtowbLmoP+dBjJVRY+F1zJ+T86EL8V5l
6J+T+c07/zp3JPKc2GP3xM5fI5Hn5G+TPkMfketreE7sT+uIzNDLWH9GxrfX
JlbmjzznwRhfg8/h4SrKc3Ke8/SzCkoVlOdkf+73PfposZrynPBvplOBygR5
zgPLrUtCTh1XUZ7zoWOd46mlC5SU53yIcTd7tomD8Xbyd1TKqgIyHxqe84FV
98JcuR/j7Xzo3z6RNXw45s/5IA94H9xjEOrh+RC4xmj3JHIeNTzng86X+R1p
nbAfDR88J8zfO9oI61v50OPKnMSEIchzPgTfSb418g32o+LDt97qmIBg1MPx
ofbBy628GCXlOR8y41clObSrKM/5ELkw3VgZp6I850PbtstTZuujHo58vsvA
pGczxtv5wGzQy505TEF5zocLS97F/XBB/5zMh2Pz154xKspzPjxROz1f/Qv7
VfIhImLZiFnG2P+GD7sruktP16Felw9hCX1lD5Zi/pwPvNHlt3YWo39O7ifk
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
OL60zWZ/XinE69zL8X1E9+1DpBBs3iB3PlxO/FwKYabaMzPnkz/3UHx+yzn2
74NZ3y6FHJ12h2MSWN+O45fcw7f5G86fS0H7TP8LP0cwP5dCdEzhkwM+nD+X
qv1iVfxcCiOSd9dd+sn+A1Lwt1qzSOcW9dO0luL5+kNsaW/m5/j+VuMX2L0g
PZwNrt/Bq661vcP+/lI4pd1YGxjA+nZ8n6fvnhc3cT8+XI8Lt8XVaJJ/qN3/
5kPFz/H3ia+2um7l/LkU8jpYrHokYz8DfF7R4S7eelQfNUEKNfe/jhhax/p2
fN5RvePjGgjPHfDzD/7Ojyrh+kgpxM3MW961N+fP8f/bPjswK4vz51LwWnap
f/3dEuLnOP+dXXU2dKD79ilS6K2xT9lvZhnxc9zPzzYE/F5XTPxcCvsS2nYf
P436fU7H8bo1RN9GwPxcCvbjz2tuNGZ+LoV3oyJWHr7Dfki4v/buW5EhrCR+
ju/r3KMiMpX17fj7yd13LXpA9dauUmg7I3nlx1j2V8B4pr+g1zKHMuLnUig9
OwmSejI/l6r7xar4uRT0qp1XCQK4HxGu34bA5b4PqT7bHX/WyDK7spv9laRq
fbyKn+P6ivXs0qM783MpZMXqT37dqZL4Ob7v/i5rv33hfgdSmDr8epFnMNV/
LUY8iZq+ZA+e91T8HOfjdVRhv6cfiZ9LIdBWEVV5jPRwS/D7/Zt8t0tY347x
cdBRy5cH2a8Jx7NfUUlyOfNzjKcVpb2c9nH+HONJddC66R/Ir80X99/MsZFe
Uez/IFXfB6n4OcbLf8tpDrNfI/79/WdJX1NZ347znWFQlPOD+Tk+v52O8Z3F
zM8xPuenxUQFc/5cCnaX8+O2TqT79vVSCBmedqz7JfaP+N/+VfFzfL6goLNT
fNkfSgoefkm934SRHm6jFHpuGfLtyV26b/fHeJOwVTugJ9Wrbcb15/Zhx4YC
1rcjvgvd9x8sryJ+juvpz8/jJkWsb8f95J7UMfod83MpDE39K9Ne3T8Z47t+
fVE7Dda34/vJ+hwyPEZ6uO1SuCGZZay1kvm5FCR3E/dDEftD4/r8EV7Ye08J
8XPcj449v0/R4v4PuD6jX5q3Kf5E/Bzjn8Y57ykxrG/H5106rPj7Fer/EiqF
VpEO9h9LCc/3IH6t62Uz4Sf52YRJwSLv7J4Yf/a7wOexyfGeVMr8HMfv6s+5
C5uxn5UUNB9YLnzgx/p2/Py7Z8c3H8L+0//bXyp+jvM5o/qC/28l8XMpmN97
+vPBnSri51Lo0fCxNGAC69vx+T/mjoutrSR+jnh2MMpNv4b9sHC+M3p2+vOY
/Omj8flNLjR+f85+l1IQGDuYDJaXEj/HeJTxr+MB95vC81Gt8XfHc9QvNhbP
IxO7he26xvW5UkgWeRwTBzA/x/mtGGby0Zv7UeHzNnr3a/uN+TnGl67xNvtN
OH+O6/X4sEWGPszP8Tx3vELPoYL7VWE80D+5SDOJ6tVOScHMxHaX2wX268D5
1o+zLHjJ+XMp/Nf+xoX7TUvV+TAVP5dC04aKHT2NmJ/j/n/X6+fXznTffk4K
EyZ2nT+rhPXtiOf5x/V3+BCen8f18LTwT5dc9u/C86DZhBqjVqSHu4Dz1T2i
243sMuLneH7wPBO6UoP0cBelEJn4T2F6P+6nIYX63VGj73uQ/89lKdy16TVG
5Mp+X1LQiRl6retKwvOreN4pHHTftoD5Oc7nhxrHEmvy+7suhWFb0wP2dWd+
jueDq9Pu3K9jfTvGF9OYa7+XsT+YFN4Yd6rWsmJ9O66HzAuvFYbsL4J/H/vT
Vu5AeH5bCvBWMTZLxvwc8fq/fzXEzxEfg2blX5/B+nY8H5iferWtC+vbpdD3
8uWlR9K4nwf+ft+fRZNdCM8fSNX6HBU/l0KF0fDotkV03/4Qv89nkCK2ieub
cT0077TPxJru2x/h+dPaJb99f+63je/z9oOD90rm5/h9nh1a1zVQvVoO7sf6
z8EPTZmfS8FEoNvH1oDrofH79O73+G5EfsPPpbAk6EVXs8fsX4Z85mmr6uu3
Wd/+b/xv+jThIOF5Lv68ZaVonIT5Oe7XJdVmi6CE+Dnuj3WDsj6zn2G+FIaM
F7c+/pDq1f5BfPgg7VBYx/lzjCfQr22kJuvbER8kG1rvdSM93BspZH//06X5
SO4/gniYdqHctDfVq72TQutjWf2HzWd/NIzPd8V2EXZK4ue4Pw5YVoQ3cP9Q
KWTazbn9/DDp4T5iPNXxOgynS4if43pruDrSQJP5OeLd2scdDPLLiZ/j+Lo8
ddPrSX7IpYh/NlPj7L5x/lwKzm6dVgys5fw5jm+pnUM/C/ZDx3iUN2rC0EGc
P8f9F3Q6umHOJ+LneD54c+LQ3PAy4ucYPzf42A+yYX07xiuvL0MaT5YRP8d4
nRHR2uIA69txfW8eGx9rTX6MNYg39gNK43qyXxvGo4b4l9sHK4mfI/4nbSu7
WsX+bXi+C/V85veM6tW+4flN3zi25VXOn2N8lFSXxRuRf2Md7u/xHbNHYDxW
8XPcL1F92i8qp/5J9XjeLU3euHwz+73hfkhd1Gf7DvKPaJCq85kqfi6F+Scu
VI3+Q/2PG3G+jSY4vJ7H/Bzn9/rPvp2G0H17E+73Ntfnjcrl+nMZ9B28/2Do
eda3y6DCo0u4wXvC8xYyOJX+M0XbifyeW+LPLr6VrQ8zP5eBc1t9UcvVpIfT
kEHOtZAVj3/RfXtrGeStHrvZOegT8XMZdMmUJBqUsl+sDG7n5N5w2k31au1k
6vsgFT+XQfiSCXfrGc+1ZOByefchjSNUr6Ytg+MFnuXlAta3y2DYiPU3J6zh
+nMZmORvTvNtzvXnMkjOvxoYksb5cxls3pk+fdBW8qPsJIOGAd1OH33GfnUy
tX+6ip/L1H66Kn4ug+iRViHDLhCed5XBEuPduitfcf5cBv/RwVecP5ep8VnF
z3H8I8ctqL1B/tT6MpBtSt6kZ0d43kMGPdp4jByQWkL8XAapz8/oPJjO+naZ
un+kip/LYFk7J+PFMsJzgQwUsWvvKw+UET/H8W0IijkWw/1iZbB8lsZqh+3M
z2VgUTopzF+T+83JQE/aekrSMtLDSWXg2eQydrkV94eXwaq8k0LDl6xvl0FI
UI6rrzp/LoNM//DSon6E571wPLJLa246sx+PDG6svpKYVM/15zIofp6d3tOX
/fZk6nozFT+XQYronOPIHaxvl8F7v4zBm425/hzXZ/3YBZEJ7Jcvg/zNf3+5
Nonw3FQGLar0PcfO4344OJ7ujf2tQgnPzXC8A/12xedz/bkMunXV3fFjLd23
m+N8568wferC+XN8/s/zo+dtJj2chQz8jFos3x3E/FwGK1Yf2VY6h+7bh8hA
EvHR8sVCzp/L1PkXFT+XwdCI3vPmKtm/VwZxujfSrntw/lwGpi6fh8Vosv8f
jo/OtL8n4Piq+DmOr/LCkFbduP+ODFq/dVqXUcr8HOd38ueiP4Hs9yuD+Pv5
BqtnMz+XQaRtwbzhPZmfy2Dq3LrsFcO5/hz3V94Zt2WJ5cTPZRBYMd0xQYPz
5zheV0M+P/vA/Byfxz5TL2UK83N8f8mVlUoR+/9jPMgTlkkfkB7OXgZn3NIf
tMxk/2B8XpuaZwunMj+XwZwU3aC/JjA/l4HXht9fzv3i/Dnun0fS9ZFzWN+O
z9vmW1nS4lLi5zh/yrfto/tx/lwGWTWxeYvWcv05rtc5xWPmSljfLgPdJ39r
9ophfo6/lzkWySxZ3y4Dp9Tb5a8u0X37dBmk6bZstz6zjPg5ju/mpu8Bw8gf
ZQZ+3uXC0lwx15/j/rE5mnI/ju7bZ+F85V04cWtjGfFzGWiPW18cPpD8TV3x
fRvEj242cX8CGZTPvnvlrA3r22Vwba6ZXLCc+wPLINbAyae1N+G5m0ztZ6/i
57g+I7xyjAWsb8d4/laaPvgk83MZPOvf7NNTW/JfWYjr3Wt12QJz5ucy2JYE
t/uyX+oijPcRXbKibOi+3VOmvk9R8XMZzNeZ92SOM/sly2By+vWGZqs5fy6D
xkvG4q0JnD/HeFP9ru26oZXEz3F9BHV2zunN/RFk8MVKoCGyUhI/x/XSevwH
Uc8q4ucY75bsvTEtnevPcbxatW1c+aOE+LkMAg4WGts+Zn4ug5u9WvbIBCXx
c5nar1zFz2XQJ1F7Spu7ZeT3hPgQM9g06Cvdt6+VwTx348o7T0uJn+P4y7Qr
H2yn+/b1uJ/EkbvGa30mfo7x2nOkYWEp4flfMtCZv+j2ynL2h8L4Lru6LKsf
4flGjE9fG9wWvGV9uwzslXf02uD6VvFzfN+KoiO3ddnfGePb7SkZrV5QvVqA
DAr2hUXO2sP5cxmsiwjdc9yC+bkM2j5qYZ12j/k5zk+GnfWPUPKT24bx8+bD
B1OsWN8ugwU7vlTuf6Akfo7ruzgeRh8lPdxOmTpfqOLneD6wv12xyZ/9JRF/
XV923BvM9ecy+GY4YtaIt6xvl0HM5j/SC52o/0uoDCZ01bKNP/GJ+DmeB0SF
Q+tj6L49TAZ1lYnSFXHFxM9xPhIG9uiM/EDFzzF+Jue3GHSa+zvi+v5SOOLo
6BLi5zLIiCuaWd+f/adlkN1S/+ksqZL4uUzdP0HFz3E+u2rqrcnh+nNcT+O/
rhvnyv0mZLBvZ7i2SWUp8XOZun+Sip/L1PWYKn6O8507oNwqi/s/4/yk3mhR
FsL5c1xv1UeyXr/l/Dl+nnxBuKc6f47PL7sV8Kkv83NcL4W2uetbsL4d4+P4
P7G7ZnH+XAbN1uQ2xC4iP5k4XO/Bgc+yqzh/LgPl+vZ/pzqwvh3PNwnOZ2cE
cf05joeVxojr41nfjngFz25dmV1F/BzXT/CMJy2akx4uCeNn0AMD0Qnm5zII
/RbfrOTRZ+LnMnX/RBU///e80P/Ym9nMzxHPm+S5ipPcvxKfp5fZS/sAwvPz
eN7rrKdn6Mr9LHE9m1zV6f6c8+cy0LQcs/WvKM6fy2DE/qEHHl1kfo7nw1vV
ngo97l+NeJPr2dn2AufPcf98nlN81Jj17Riv2+7dlXiD/P2u4vwn/GuYwPwc
1/Ouz1bZ8czPZeAf29S32zrm57g/ThzK9l/I/BzjaWa2rfF85ue4n3Or1/uE
k7/vLRnYdJBVX27H9ef4vkUDum28WkL8/F98itxvPZL9w/D89myurOpjJfFz
PD/ljy95kMH6djxvFUY+mDFJSfwc4/ek87NkG5mf4/woe/fo8Y78gR9gvEls
G2Xrw/6hGC8Pxx467836dhy/6NJdFUZVxM9xf2WvlWbv5vw5Po/H7Wfenqxv
x//vPK1bN51K4ue4foxsh15z434g+P0zJUl3zpYRP8fxlCnez57A/Bzj+ffU
M5Ji1rf/ux5v7D4yhvPnMji0IdnEt470cH/j/vip+8zKnfRwuYh/Ff7RyUdY
347vf7R6wP43zM/xvN+1wzMLKfNzXD+a20ffCWB+jueZ8Uth8iTSwxVgPDSN
yxEsY36O79dt7qrnymLi5xifdPMSJxszP0c+4KMxvKyM8+d4HlozUufla64/
l8GQXo/WvppP9+3vZep+Qip+juft2u0uF06yvh3xZKVl/7YnOX8ug54Rq7OG
j2V9u0zdz0vFz/G8ckDw4Pk85uf4fG32l7VbxH6pGD9LbBN7Lishfo7Pa1ay
71Ix588x3rtGFnXtx/lzHG/fbZ0r1f5rGL+u98sJPsH5cxyPkN1WveMIz6tk
YPZnRNSuA3Tf/lmm9n9T8XOcj7uvxZqZ1M+wBsdjXflcnbGsb8f19KLca0Uw
1at9kan7gav4uQyaigJf9x1AerhveL4N/rgnJFRJ/BzPD+7Dl7+qYH6O57Hv
U26ZLuP6c/z/pkdCnhyuJH4ugzdevv3jCrn/6b/nCzvtIZdZ347rMavSKc2D
+bkMbHO9j+SZkR6uEc/3Wyp3VS9mfTvGH5v4L93Xc/4czztDBs3M6lNC/FyO
57EC7R7q+nM5DE1ePAg+cD90ORy/3vLnl110395SDjofdx0OqOR+LXKY6t7W
ZWNIKfFzOdTNrFl4Wsn6djn0/mA1x/1rKfFzOcQbu33Y0JX17XLo4XO30X4X
15/LoefJMS82yLn+XA6zt443bv+U9HBacnV9t4qfy6FG3zG94C/yj26Pz3d1
d8/ml7n+XA4pbn0sD70nPO+In+9beEJrJOfP5dD0y75OPIv5uRw2h7z545FI
eK4rBxPLhSED1Pp2OQyb+se6oInz53Ko36xX2b05+8PJoe+fHgVd/Lj+HL+/
68WR3bIriZ/LoU+toqNbENefy8G69mKJli77w8nBw9/cx20I69vlaj86FT+X
w43Zs/tpTmZ9O/79ZcnW573Jv9pQDmlrrQVuq7k/rBwsNF2XGXtz/lyuPg+o
+LkcPifde/T9KNefy2HFhsa7mxTMz+WQ2qZk0D+VXH8uR/7Uep04i/Xt+HmD
QX/PdPK/lsthiGXdzWHhzM/lUO5+ZvjjC8zP5aC7ZsGfvx6yvl0O/tPuZQWH
FRM/l0N2hUbL/M1cf47j1/aThf0c8tfsKwfF8Ns/du4sJX4uB4cmXXFRGuvb
cb0apf3jP43738jhY9ikvDt6pIczlUPsynt/SVK5/lwOFUFapRM2cf5c/v/y
53KIUSpuXh3I/BzXt/KsrKgb15/LYcHUhtmfctkfTg4vnp5fcWMR4flgfJ+z
Ju3ubeX8Oc7H3JCiZTGcP5fDslsL1y25SH4yQ+UQ0Fgz+Hlf9uOXg51GqPlS
Dep3PQzXx7qP46vHcv4c12erDXrJoz8TP5fDJdHClbVnWN8uhyu+j7TsIkgP
B3JILo8bFGzLfr/4Pkl3j9zLpvt2a1w/iZ6XPK9VED+Xq/37VPwcnyfGr/fH
OM6fy6HbmufLdcoJz23lYOo5dve8MObncsh5mufmPo3q1ezkYO4TvbWzgP2C
5XC/X3+R6zK6b7eXQ3DEIpuoGObn+H5pfRQJkeQXPkEOZtE7Hvfeyfwc40Nu
XqpmAtef498Pl4x6k8j6djkU6PTtW1JBeD4Z5yutYOCQDNLDOcrhQJrhM/MH
rG+Xq8+PKn4uB/vDHpEeRaxvl8O6gtdLY5Bvq/i5HPzut6jVXsX8HONHtH+z
sYO434AcAp/bBEndmZ/LofTr+4ubLLj/AMark97VjuXMz+Uwwefwz4AYrj/H
+S5aGTgOz/cqfi6HZvVb9AfpMj+Xw7jPE+aG6JAebq4c5r9ZNCLNvYT4Oc73
7JpPJ1szP8f5efR71p0o5uf4fRFXFgx1IDx3x+e96u9lYsn9BnF/N566WPSL
7tsXyqHBZdf7KOQfKn4uh/CzD5IcF5QRP8fx3fDPAMsi9oeTQ4sN68pLMzl/
LodvFfs2StwriZ9jfFvrFXHoYynxczm8mdNnifIU9zfC+d1rMMj+LPmrLsXx
t3KKPxzP+nb8Ponh6j8HCc99MN5UXIn8Kef+xLheq3SyD36oJH4uh+KCL/nH
t3A/JDl4Tcz66RfM9edycPk6b29CL/aHw3iwOWPk2rmkh1uN719hdzR3eyXx
c5yPlEWuryczP5er/QZU/FwO75v9iD68kfxb1+P+LBh15MM2zp/j+yjTW5Uu
LiN+LodDLn0ixg3n/LkcJHm7+uzQ4fy5HFodjJ9lrM/9luSw6kP5B/fDpIfb
jPu5IODtxiLOn+N4Bjl/ye5P9WoBcrWfrYqfy0FzR9iqTi+4/hx/XpP89mEc
93NAPLt/R/v5bdLDbZOr/elU/Fyu7ueo4ucY39M3XFugV0r8XA5zssSTQ/1K
iZ/LQdl+av5yEdefY3xp08fE4gjnz+WQURQyPrmA8+dy9X2Aip/LYcnZoQPa
BJQSP5er+2mo+Dnuv4Up63dIuP8Tnj9GLSx5WlxE/BzPK7eEToUm7A+HeHor
bvapRXTffkAOYUsKnRZUcf4c19/TDNmeEs6f4/NNsrWtacv6dpzvr8aZv0vJ
7/UQjk9mSJgwiP2pcfx2pGx8cJDz53IQjMsYMnUP95/A9bZgfXaAIefPcT08
celak8f153LI+r407Z4Z83M53M0rbjkD15+Kn+P4pkY9avaN/Otjcf5He7xP
qi0lfo77bah72uMc8pM5jvv7+mS356XMz/H7NSu7xUuon2wcxtu85PScKZw/
x/lZe0ZjYRfOn+PnnX+i0+Mi159j/C4JaJkVS/ftpzC+xxa1c3zH/tg4P0kX
j1v3Z384/H67cx+Wj6N6tTNydb21ip/jfE33kl87zflz3L+u+4/ddWF9uxye
+bfoY7eW+bkc9jWZrMiXsj8cnuesgu0CA7n+HOPT6tZwrTfXn+P8NN804Osg
9ofD+CMJfLHiIvXLuSiH5WuObZ/+nPtj4fmou0W3HlnkJ3NZDnlGBoO/rOL8
OZ6Xvt+e892N/eHwfPesuneWjZL4Ocb7N86mW6yoXu06nqei0qNePOR+Wvj8
zhv3TEQ+rOLn+PxaVXXNy8qIn+P4lPcY86yI9e14Pq/SVdTtYn07nofN2mt/
duT6cznopcYtTl3B/Trkav2bip/j+1hEaejMYn6O5ynnXZ1r5HTffk8O81wG
/BPZift54Plp+8GZLRqpXu0Bnp/3u1sNrGd/OLna71zFz3H87h59MGcP69sR
j23f3Dhyv5z4Oe7Pu0e8m4qZn2M8mvk4bmAu588Rr+KiW1vlsr5drvZ7U/Fz
OTxOTH7zHdgfDuPhptTB/0STHu65HJxsHWMuhHK/EDxvCbLG14+kfgJ/y+Hd
h0vR9vnsN474bvLSTRs/T8XP5WDTVXtV3jruD4brMddnWsR25uf4/d8L5DMd
mZ/jeElSWnqvJT1cAcYDq/x3+9JID/ca10NVlwBnC+ov9Abje2JTzgID7ieG
7+8l//59Bunh3uH+X/LxzbclpIcrxP3cP9XpdjeuP5eDp+fOX30zmZ8jn8Lo
deUl1at9xO8LKfu57gXzc4wPXYsbYrTovr0Y9+sUvwO+y9nvHNd/rHBBow7d
t5fK1X48Kn6O8dbPzT70IvUjLJer+/Op+Dmun9rxTW1Wcv5cDpOjv1zo25v8
ZCpxPK9vzPi5kf3hMJ6416/dYMn5czmc3u/452mDkvg54oni7zIXbe5Xivi6
IPGClTnXn+N6+LpzSEcvzp/j+X2PT/jDm6xvx/V4wGPcrb3cnxzP+6sdMhNm
cP4c3y/97dzuRdzfVK7261Dxc+SjfTNyluzi/mj4vub+Laobuf4czw9/a04N
1GU/djnc3P1g1c3eJcTPcX1MerXu10j2h8N4WWDZb95brj9H/HndttvaWu6/
gue1pFdtZhwpU+F5E873/XkpOV3YH04BZ64fMG7KZH6uANvxu8e17sz8XAFh
Lsb31uty/lyh1ger+LkCPDRGPQ49TfftGgp4M0nw5EpUBfFzBXSxPX7TaQTz
c4W6v4aKnyugrn2Jpt90wvN2Ciie0r/v/q7kJ6OJPy8qurqxhvBcSwHh+kPq
VodwvxcFLL8c3GE14puKn+P/N88ediSA9HAdFKBbOLbF6VecP1dAtKzcyNGH
/GR0FBAYtO31VluuP1dAzZKFu1x/sb5dAbMTDx0VP6d6tc4KsMhd+tPiLfNz
Bdj/Ts1evbSK+LkCWqfsEjgtZn27AhwOB896+4v94RSQ7HYof3Yu588VkBHR
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
4861ZtGU347n7eJ9lRP9qP4c7fmY1PZ31ZTfjv6156YvZ1yZnkwN8sNbUe66
/DrG5/g8OdZbP+QSn+N5t1Ew5uosip+j/TP+3V42iOrP8Txh/W7N+QKKn6P9
evv6RnU99RPH8XM/qPOtm+XDNeL4Ciw01LRJHw79V1HleYUqip/jecY32Pmm
poTxOe4X4XGOgiXxOdqfH13JQ36zerUvHFDuSC2aeIvi53gedrtRuU2P+JwD
BfFv68/+Q/XneB562Kf0TTLlt6M/Hhx7wkGthfE5R3b/IuVzjkx/ScrnOP/G
W84+FkkYn+P3j21+oxHVzPicA7WpAToL+jF//gu/7/qQK2HiFsbneH5st3V7
fo/lw/1G+/F99cvO3xLG52jvVAavCvldz/icA82GlSc3dlP8HM8nxtA68R7x
OVeWDyrlcy54eok+rx9FfM4F8yXZUWvNKb+dC0UzY//lzaL4OVdWvyTlcy7o
prla3rKl/HYufAgZEXgJ/ZWUz7mQbj4mrCSR8tu5sOGPY9PAQ0xPpi8XzsVz
5u9MIH04/P936xXWF1L8nAtx35VnVSSyfDglruz8L+VzLjgtsThqfon4nAv2
4lG1v3ybTKL+x+dcWFl4v3byAuJzLgR9f2i1tY304bgg/njp2c9BzJ+rcqE0
Y+jy66NYvdpgLki8l5x+vZbqz7n/NRs9Pv0gu28fyoU9xrN1dx2n+DkXlNcN
H7c9geXDDeOCN88mqL8Bxc+5EOIa37ztJem3c8HR5sIR95EUP+eCmceabxv+
UP9zLvBXFkfkazUxPudC1dfNB5a/p/g5/sw1+vlTg+rPubBFVbLPLpj1YxnN
hUzuvoO9resYn3OBC7z5b25QfjsX0gyaJ1ztR3zOhWSP83O0JlL8nAvN3be/
Za0lPueCJsxbl7apkfE5Fy7v8z7csY36n3NBq9r/6oXtlN+O8/t1yqgjqXWM
z7my/oJSPsf5NeL9nbiS8tu5svtoKZ/jeEe1LJ05jvThuOC2c22TamAt43Mu
LPXoLB57gPThuDC9KD/Ndxj1P+eCxbKXU4RdzJ9P5ML69N4f9T1Ivx3nL+Hf
P3WJxOdc+KEeGGx7hPgc17fRw5qB6sTnXJgfMzJ3eB+qP+fCiYavPoaPKX7O
hTmDH12dIcfy4Qy5cGHplqWLd9UxPsf1aDt+1asMym/Hz88517+nGsXPcb1d
Gz7qxCoJ43N8nxXP5gyrJj7nQm76WPmunqQPx4W5ZZ4+F5ZQfjsX1EbOypsk
63+O+9t/qebVaHbfPhPn23OBvWYb1Z9zQa/rvcu3xw2Mz7mgaqQ2p9W/nvE5
Pr/bm7gfVsTn+Dw32y+eS6H6c1zfR/OKdJZS//P/W29SPueCc8GKnLB1lN/O
BX0vfUFhWx3jcy4U+A48WOggYXzOhRle95c841J+O76f7tc+T76TfjsXshNK
f4+Sxc9xPVeURN+pkjA+58JOpOOFxpTfjuv1cPtJb3nicy5UqNvPXvub+JwL
0SrON40XMj0ZOy70FsavcRxF8XPcXxYGFrFC4nMuXGlep7oxkvLbuRC18c3K
gykSxudcKP+YVbIllfThuFActXHe792k384FDzd+3uEuCeNzrqy/iZTPuRDh
9GmIixLz50u4svijlM+5kLDg9T8XN7YwPsf5OfpXvzuS6s+58NhjUntcQxPj
c9yPGtV92/c2MT7ngkHXrXXW7ym/He3LyFVaVoup/pwLnz6+XZL/lficC/KV
U1781aP6c7TfR3zqfVWY3utqtHdg+1BlHOnDof0cY9x104TpyazBn69mjtWQ
1Z/j/vbXtxy2lenJrEX7p/Sp+0se1Z+j/YsxffOlhPnzdVwY83CDX3w81Z9z
wfShvIa6I/U/x/k9Gvzpewrrl+rLBa+r9zaG8+oYn+N6L06qrdcn/XYuTMss
/7t+dx3jcy40Bq6p8/pOfI7+oDnx45jnlN+O+2fYH3+dxgbG51zQgACXhe7U
/5wr07+R8jkXVnRp/Wp9SXyO66VU81p3HvPnW7ig0mHCWVdE8XMubCpevWFE
L3bfHoT7u7uw9xtP6q+G9rFQ0U4Oz7tSPudCbD9Fj5OHmhmfo724Glmuerue
8TkXbo/fUPpIm+LnaN/0D2bkbyE+58r06KR8/t9+6H/cpp3023H+Y+6eWa3D
7tv3oP0d3CBead7M+Bztnd3OS9E+EsbnuN+3JG9IO9PE+Bz987F4n/P7KL8d
91PnFKN6A9Jvx+cfNeHImxZ23x6O82FuzzVTpvpz/H43k8dTjrJ+LBFozwoy
+i781iD155FcuJSe2Xr/IPU/R3/qxpnUa2s943OurH+2lM9xvSb8dTa3IX04
nJ+4Rx4TokgfDu1ZYMsmh6kSxudcEDY+b9ymRfntuP/cDm9YXUj91XC+9ika
7EJ+kvI5F/rsOv1q+h/WLzUG91/b9oaJ3ZTfzoXnzWZrB9qQPhyuz8rcyuK1
lN/Ohbf5c98ORn8n5XMuyPUzyX9lS/nt+DxDi2wsv7H79tM4X3WLs+/2ofx2
rqzfoJTPcTwsx+68cLWZ8TlXph8j5XN8ntbQnhtbic+5MGRyITdoF8XPcbyU
OO1zfNh9+wUuBDuqblHvS/XnaJ+fGB0riab4ORcy+o8IdbZj9+1J+HmOZnf0
Sii/nQsBwyIvTBvL+qVe5kK/BU7z/hpTfjuO//tRItW7LB/uCheOpLRnXMmk
/udoX416ezWNIf123G/2byb0mk7157hfisI/FpWTfjv+Xjyr54tJ1P8c11+W
gvzl2s+Mz7lwN9VeO86c+BzPs7qzdj+2ofpz/PnGwDnRmpTfzoWS4HceL5AP
pXyO833ea9ROtFdSPsfz8ph5BqOMqb8a2vNXb1uLhlL9ORfGVwY9dKml+Dn6
1w2pV2OeEZ/j8z8JcK/7h+rPuXBLN6ZM6R+qP+dCYebn9MxAqj/H/Zfy/L7i
Q4qfo/+TxMZ132L+vADPY2b8Z2lVlN/OhfjUom1jI5k/L8T9/2fTfO2/FD/n
AuiG3vdIJv12Lvgueb22TZ/6q+H4h21dtW4K1Z+jP1MvNI2KIT7nglVp3urk
U9T/nCvT85fyORcMY29cdOhNfI7+OazIr6me4ufo/73Wng7uov5qeN6s2zbq
9Qbqf86FkduqM8/7NDM+R38cxv28rprqz/H5VIqd5KxJHw7/PyhWI8mD+qvh
+cN8vu+um6QPh+Pfy+GDoyHVn+P/O2f0/4u/l/I52nub7ZbLQim/He1NTeSr
Gc6k386Fzpk+Xa6OxOfoj/Yv5rmlUP057o9eATlV2tT/HP1XenPT6bPU/xzP
1wmj+sS5U/05fv+Sl9d1P1D8HNdLw6Gd5o6U347juyAm8mQs8+cf0Z+vDFEq
ayM+R//buT2vbDX1V0O+ia/Z7VBI+e1ob79P0tseRfXnuN6m1qX19W5mfI6f
H7fb9ERfpvda/998692YN5H4HNdHpSRt+S7Sh0P7l1K2rXgU5bdzZfEPKZ9z
4Vvwm50f9BsZn6P9GV8S9NuB+JwLf/7dH76vu5bxOZ4fyw2v7M0k/Xb0v48y
Us4fJf12Liy3aVWztyH9djxfedp4ix5Q/BzPC7sjrBW+svv27+hPvoieZJpQ
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
PtOA+JwPXlWdvndi6xif80HNb73exjFUf86HTLvgry80iM/5cMup59ePXcTn
fEgwnfzPgyaKn/PhXUrwRkMzdt+uwoc5aY90b3+l/HY+TF+nOnDpGcpv50M/
hWPnWq8wPZnBfEhziL1fcJbpvQ7hQ3e05qxyc9KH48MJc4seciqfGZ/zZf2o
/ufPh/EhuXi6v50a6cPxYY+Zzo0zvSm/nQ//a7c3lfTh+BCQV9kry5Di53xQ
WlKb79aH+qvxofRPz8Fp4UxPZhQfnk16eD83spbxOT6/RPdG5wjmz0fj+/0d
HpzxgvTb+dA5rX1In0qmJzOWD1UZF6Jv25M+HB/2OgWefdBC+e34/t91L7Wq
ML3X8XwIagP5DkuKn+N4akXE2/el+Dk+n2pmQuxq4nM+fPWXX750ZRPjcz7U
Oi93fbaf6s/5Mj1RKZ/zIbbg7O9xJcTnfLAPDwi4l8Hy4UT4PE9sX8bLkX47
jm9zdE/NbcTn+H6PD9bGyOLnOD/rAvZ8ONbC+JwPVmlTn++spfg5Hzpexjot
CyB9uP+bLymf43j2GrB0jSLFz3G+mtsvPJ9N9ee4HguP8VJV2H37FPz8LVaL
IxzZfbshH7wTsiqcRrL79qm4nm/OmnG9kt23T8P1cnvK6uE6TYzP+bBS8UvP
HBPicz4425Q4VKN9k/I5HyKvu6UO0q1hfI7fd/RU3uZYym/nw7TznWviSpg/
BxyviEufGhZSfzU+BIclpgU8Y3oyprjeCtoO6XVRfjsftt0LTFJzZv7cjA8e
wdtGb59B9ef4ed1O9wLGkj4cH4b76MUN3E7153wY2bHi1vW+TYzP+XDZv0F5
TTv1V8P5vGn0dKIe9VdD+xE2J7m2nerP+TBmgdJQ22xWrzaHDxpO0zbOiaL6
c/x7OVUz54mU386HiP8lbJN+Ox+cbqq932/G/Pl8PhgYGTicm0L67TjftgaN
Dc8ofo7r/96aHWWLSb+dD5LixMRjyym/He3hqrab47eTPhwfVNV72B+4wvRe
F/Jh/dTBM1a8JT7nw4bGpgGzconP+bJ8ZSmf4+/D5UbN8KL8dtwvgePuvPei
+DlfVl8n5XM+bCrifLjuSvFzXE/9Tlf9jGP37cv4UC4SFXbfo/x2Phi2jb/e
o5L6q+H8KAU9wTlgfM6H3DH79D3uU347fn/d+WPKtdT/nA/KWfLlWwdS/BzH
+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
ZRFlEuJzIfx6IL7QY34t43O0fwdmiKfuoPx2ITz1itC7b8zy4Y7jeL2PSn9Q
TfpwQvD+s1Ad3Kn+HO3rvPhLH8JZPlws2kPPi8LgdubPTwpB6eh50e9ZpA+H
9tPMqLpGnvThcP+ePeatmcPu2+OFkGa/VPdxQDPjc/TPkk+ajU0UP8fvuzjo
RvdL4nN83zDftYuV2X17IvpHhZTr0ZaU347jtcxy9vrjFD9Hf/Z23dM3FhQ/
R3939HDbceRZKZ8LwSq9QK1PeIPUn19E+2xoaTSd6tUu4f43KNXVMKf8diG0
vjy5J9KS4ue4vj1jy/trUf9zXF+mY1faaZM+nBAMHjiBzdpmxufoX1xU5+UG
UP9zIdxV1Y67o9DA+Byf371hhH8P1i/1Gs6PS/PEumv1jM/RPltnfl3nQPFz
IRwpGfRjzyxWr5aB6yfY3+5UI9Wfo733GGO6qJPqz4Wy+IGUz3E+CtJTO2ZT
/TnaT388ZGZT/Tn6kxcfrsG9OsbnQvhq4ZSaFkvxczx/1X1ebnSX9OHw/HvS
YHKShPVjyRPC3u9nRefErB/LbVwvBW6fs0yZnswd/KqwDduDBpA+HNrfVoO1
Hrcpvx3fp1u5Ttuc4uc4nz5VR7efp/7naP9bFzsPvEz67Wh/2vgPxr6l+nM8
z+mXXtYUUn77/50/pHwuBHn9zS9tbjA9mWIcL6fJhxa7U381PM+Zpqatm0T6
7WgfW++qru9Vy/gcz9d9P7ysqaT8drRfZZ3Dxg6l/ufIBxaG57rKqf4c14Oy
z+/Jt6j/Of6/oOOR+RmKnwuhSH1r9PrDVH+O9nFoYVvDbNJvx/Oz0UnHrMvU
X00Iyzse5BQFNzM+x/PZzZWBMQFMT6Yc16+Cadft7cTnuN447/gj7IjPcb3u
cLlhVk367Xh+v8rdfDqe+BzHt8dz2+g64nP8/kS39PGKxOc4Xy711j/CWD+W
alw/xT++rqpjeq/vhLL7YimfIy+07E5JSaL4Oe7HRt3eCetIvx3f97uJc34E
xc9xv6hmd3cNIj5H+5u5OevQa3bfXov8Umh3MK0v8TnOX8cj/7CXpN+O9vBm
2tXZXey+vV4Ic/UK/vqcofi5EDgb+ydf8KplfI7nrYbvv4qtic/RHx97nJ/+
q4XxOfqb+DuF71Ko/hznszt8ZWs46bejv+5RfVH+poTxOc6/oc33bjPic6Gs
P4eUz9H+xST+GKRG+e1CkIvfXXR4HNOT+Yb+Q/3Z9MQCqj/H91c8frokh/gc
99c8+Ypxr6n+HP2PXf+1I/9l9WodeL4Q5RW/nkB8jt/vf/Hp4xPE52hfTfd9
6dCg+nP0t4ldnfONmd5rF66v9z92J28jPsf9b3Vi1vDpFD/H801x1cKJj+oY
n+P5Z8zrkg3txOc43tWV06wCGhmfi0BfPDbu1n3icxGo2M9VVJen/HYRPC+e
cnBFM9Wfi8Al7WHZEnPicxFkuEVEbYil/moiiIqa/FFsT/FzEZiJyyOn4/6T
8rkI1BpXvbK8wvRk+ohgpGPXh9pW0ocTwYZhnlmHJ1H8XARvzaKd7V80MT4X
wd7iKyUVS9l9u5II9o+IT8r4SvrtIuhWFyT0ukn6cCKAhLzmzSOo/lwERS+e
Blbfp/7nIlh+uHi6+bomxuciUEpalFOnSfpw+L67D+QH+BKfi6A8pdhhz2jm
z4eIwKBi+56ZQnbfPlQEFVfHHb4SQHwugj9Vdhe+5jQwPhfJ+utK+Ry/r2vD
Wc1epA8nAvdrx+KWXa5hfC4C+XUzwNGN3bePEIGvychrmYUSxuciqJ1pc9S6
gerP8f214tZefEb15yIY7ugRkvSpnvG5CBoN7v7ItKD+5yK47Llx1v13VH8u
Au2IozrnV1P9OX7/ILmFNi9ZPtw4EXSY2NudSaT+5yJ4rL3W5cYwqj/H7/sy
oLBHEPG5CCKsl+WmXmhifI7fLyj6dHA/xc9FMH5Z97vD05neK08kix9L+VwE
yZNnjR6fR/3P8WfRfcNFz9h9u0gEBc7gpP6A+Fwk65cp5XMRNGQu8NpvQvrt
+LP6gqZ+tuy+faIIWn3FHlZmzJ/riSC45mZyuR/rxzJJBIk2+VmCTNKHE8nu
R6R8LgKNwuR832zShxPJ+qFJ+RzXt/Dk+/uniM9FEK3/6+eEQup/ju9zxaCg
w6qF8blI1s9AyuciKIm6+3d4OOm3i6DUeIWdxUSmJ2MsgqAQ7iMNe4qfi2T5
6lI+x/2sMKco4SXxuQg8bAxiZgYTn4tkekNSPhdBj6YbKmsuMH8+SwSFfi4z
7J4yvVczEXjO6xNVK6D6c9w/pj/kBZGU3y4C+zybxdN3sPv22bheXs8wP/+M
9OHw86q2v27YRnwugg8XPD7n7qT+avh+WgPbXFoovx0/rzhq1K5/SB9OBDuD
dl09N474HD9f7fQe4wAJ43MRxLt8+6f3NdKHQ3sR++PAoewWxuci4Lr3mcAr
pPg5rt+TR7VOulB/NRH0EwgfjsmqY3yO9s+uUG3ZGao/F8GnZRu+WM1pZnwu
guyN7u9fHyQ+x/0UFhdn95z4XAQr/Tzcjz6m/moiiNXvfNjeyurVnEVgejS+
KcmH+p+LYH1lTuqJY82Mz0VwJPzPym3D2H37EhFIXLb2iZpB8XORrN5Xyuci
mf6SlM/Rfor6vHIop/x2EVxqFCeb3KP4OdorgcG7dC7lt+P6k8R1uqwi/Xa0
5wvenFHUamF8juu7TPv85h0UP8f1c+3l5y9ZrYzP8fPUJp+e+qqO8TmuN9G3
4zvcJYzPRbApPVeuPpzy20VQpl7/qryK9OHQXqhPHX/BleLn+P/pwj/9BSwf
bp0IQlzr406+ofi5CLpc7PP2XqD+aiI4FixeDFNJHw79ScovL5/+pN+O88vf
eWTVEab3uh7tbUzYizlBpN+O4/encH9ZKOvHEoDrTSvMpddkym/H/XSz/LFm
HsXPRTDn/AvNo3qU3y4Cq5vJJ7V/kz6cCFaYFf1+Mp3qz3F9K/q/sztL8XMR
pM/UaWh/SvntOD4mKyeda2d6r0Hofzy/XFmrTfntIsg9/j3qRgrpw4mgKlPC
1e6g/uciEOedbLO6RvrtuF5Ojv/1z2fSh8P1kF2t7HuI4ue4n50K+l+waGB8
LgKLwRdbH3ym/uci6PSf88n6KPVXE8ECl4j14wbVMT7H949fONUoi+rPRZB2
wfvf6h3U/xzX/6OVNw1yqL8avr/+NMOCMVR/LgLdi1+3qRlRfjvag8ezbysd
ovi5SFafLuVz9B8lvbsCNEgfTgRf1fsMyAskfTgcD+fh7z8uovx2/L6+3ePf
WFH8HM8L4ev01n9geq+H8X091brW3yb9drRPc+SuDmsn/XYReD26bDS+uZHx
uQi+qRUG1rqy+/bjIuD0XfxQ4yzLhzuBz+9Q7XonmfLbRTDd56RDjUUj43MR
zL+9wdr+I+W3i2T3u1I+x+e1cFnl94X4HD+vbtDb9SLqr4brpXtS2ZNJ7L79
NP6/Wb1exivic/w+zeB1ySuJz9G/NPbNOfGK+qvheSh4p4Kvh4TxOf6cPrG2
257dt59D/+jlfvPgc9JvR38SdCneehDFz0Wwpzy4bKgxu2+/iOcfvaA3nzQo
vx39b1H/yNvfiM9FoGVrW/ivdR3jc9wPYSW8y9Mpvx3XY/9QY/Eoip/jfmt9
vW2DBem34/+3DE3b07+J8TnaT+MxdVv/NpjU/o/PRdB8q2PR81jqryYC1Y69
r/c/pvx2XI/+90YXKFL9OdqPJ8pTEn9Tfjuex9zlBvW5T/3V0F/r3/n11kjC
+FwEcd6mQaqlEsbnaP92PNR+85v4HO3NDpte65c1Mz7H+fGP1x2hQfntOB56
jZsuKlP9uQi27Zy1vlKxjvG5CKYZDXL/15Li53jeMj+ncb2B+quh/+8RHraq
L+W34/o8bjT4bBXVn+P+cb9tXtnA/Hm+CIoDo8PLJpM+3H/vu7D+Tk/Sh0N7
bt028nM66bfj+9cozqw7w/Lh7otk/TClfI7rK/h06NHLFD/Hvw9UTjMqpf5q
uB4Gnw42h2bG52hP8qxepPSk+LkIzCu28T/ieUDK5yK466X1ZfmPBsbneH7b
HbxW7lQj43MRnNPf191Dm/qricBbtKyv2m7mz5+JYIti80b+XZYP9xzX69tl
VlMSiM/xvPBe4+wOID7H9zm2UzNNg/nzlzgfZkt9+RZUfy6CMd2RrcFKrF6t
HL+/0S5Gkkb15+ifw2t9GhaQPhy+3+SbYk/nFsbnIpBrCzjvc4P6n4tk/e6k
fI7+zK1Ke3cJ1Z+LQHOwRsA2Rao/x/WW5av+wYn04USQ8NPs0KJ+VH+O+0H7
U4xgfx3jcxy/U+kTcm+x+/aPuB8yXQy9DhOfo/+ZuufesE7Sh8P1aPXZLatJ
wvhcBEtFrqs26FD9uQic/zT3UvrG6tUkeB6ucpCzdSc+x/PNy6ZNf8ZR/Bzt
hdLd42/mUf9zfF943bPfxGbG5yJQVkps3GXA8uGa8Dxkkfx7+2jSb8f9aDdo
u3E36cOJoHfcmrbEWIqfiyB05gOXBW+ZnswXPK9EJKmoiyi/Hfmr7+vJekso
vx39UYaVzhLkQSmf4/PZv7WbNIj02/F8UTflp+VX6q+G/jTq6a4cfep/jvbS
0eTNzATSh8PzlpvlCfXPLB/uJ+7Pm5d/7jlP9ee4/vOn/Tr9qZbxuQjm2kfO
vrG8kfE52rNT+y+H2pB+O9rzA0mz1pE/78bzwxZRlYcqxc+Rhz+mLNp7iNWr
/cH5M/0ZkaNMfC6GWB1FwdgRzJ/3FMOmjVWtowSU3y6G5frjf7ekMX/eSwzT
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
lQ39JhWRPhyO33uzTepOFD/XgekjZ7w2Jb1XdR2ouHb5zaSRVH+uAxAxvvf8
H8TnOuC5+6f8m5uU347/nxS38NME6n+uI+tHKeVzHdn5RMrnOjD8hlJBz9Ok
D6cD2+b0t3noX8v4XAdu6cwZF/yY1atp6UCI58DssY2U364DDRfS1iZfZ/lw
43Wgy2q99szNxOc6oMYxfuaSQvXnOrDFTElr8b3PjM91ZPV4Uj7XgTmZVzPW
ttQxPtf5fz2de1TTVxLHUcuha1kUq61opaAIPjvWKq5algGXiByji6LLUmx8
8ahFQVFCWcVTWtQKKAIWkUdXoNiocBZlKYhIjo3oCaRSecimkKIm4RHBIghI
2brj5k7+/J2T88vvd+/cO/fzm5nv4F9lryIezOeAju3n8qR7RT+WRYBfVtKp
fqVJ8Dmgb+W9k5ourj+n+fdsDn4RLvw5AOaN3b2ZVdMt+BwwetaCOPXbBsHn
gDvLfBvHrnH8nOzxD9E7N1azfjvgqZoBp84Irj8n+6sbXpufI763Lyf7OH59
naKb89sBdRHJLbvThT9fAahNtQlo6ez2rPw/nwMaE+wX35KIerWVgMqNEsmv
r3N+O9lj2QlD+GquPwfUH9aPDK0xCT6n8a9IG/+sg/kcsOjt4s2pq0S92p8B
36vEstnBzOf0/nKf7/oHmc8BG6YWH9OPZz4nez3itDk/plfwOaDr7kKN30SO
n4OlX6uZzwFnHJI1aD83CD4HvLnaKlDtLPy5BCz6ZGY+p/vX+ESW9zOfA8Zs
ffO7dTquPweU1GanZwVw/JzeN8T+B6038zmN78w2mVIjvrevp/nv92y5fVB8
b5cCtiX+0bt4vknwOb3vhNGB5mUmweeAQWVppX6nuf4c8MmA1G3qFuHP/QEP
xI2pjrr2CD4n+9ymtOp9yvXnYKkvNvM53T+u2MqL3tfM5/R82fsepKu4vxqg
+/w37DxfYz4n++mckpz3DvM54N3aUNXTN3sEnwMWVq1XTE5jfTiy38pppUGR
3P+c/v+X2hF/e46fA9quPPVB1gWOnwOukoUN3vmXyIeT0f9VTspdGcX67YDJ
RRsG3W4aBJ+TfTvUX7Vfw/ntYOnvZ+ZzwNCBaYnz5Vx/Dha9TjOf0/NZJ11q
SxT+PJTmLzag4GCq0HsNA0t8xcznND4u0oW79ZzfDthXP1Z6qoP5HHBRXOYP
EaVcf07r3bhpxqST3F8N8HDr4j8duNgl+BzwXFr1iy9cuf85rYft7w41Z7F+
O6DaZmFw6AHmcxo/622zvnQQ9Wr7Ac+siXZ3vK0XfE7+rr9JecZKfG+PJn+n
6rD5zcT67bRe1PI56hSuP6fxmaJy8Zgs9GRiADMiJkz92VroycjJfjTerTPD
WL8d8Gp+X4OdJ8fPaTxT7Z0qVnN+O+D49ve+X/cj9z+n/fvFUa+Gz5nPX413
U9BoEsfPwdJfyszngKqMkrort5jPASuut16Jo/Vp5nMaz+V5b3yrFP48ge5X
HdWXoOL4Oa0Hv+qlNfOZz2m8bZbP861l/XbavwyF4To75nOw9F8z8znglaBm
b8MmoSdzAnDiO04LehWc3072OFKR8nTGE8HnNF/FD/9pnMf57YBfW81d8Kzb
KPicrj+brlHJRb1aCmBC3fZxMaGc307zoawsyvz9oeBz8j+uIb4Z0zm/nfz3
rtFG7WNRr3aG7MWxQ78oSOi9pgEOXev6XhvO+nB0nXv58R4jx89p/DfusQlz
Fv1Sz5L/lpSATxDHz2n9Dp/46JhR6MlkAp4PuLQnbtQk+BwwOGsoz8uH89vJ
PkLu6/JShT8/D5Z4p5nPaT90cVfKvhH5cDmA+bP2vnXHUfRLzaX1MbF+tdMy
kQ+XR/7lXtIWQyHHzwHLG/Pvdsxi/XbASXcffbpJLfz5Bbr/odhMz/3c/5z+
f4fsdW9n7q9G49cWezZTwfFzwHgP34+vRbB+O+03PUnPnPaL7+1FgMsu1p2K
lAp/fhEwKjrhl7mXOX5O5xO3bpfFh1kfDrBE3nylfivXn9PzPv5tekFBl+Bz
Gv94yeDBzawPR/uHl+ynEoPol1pC9nSvCEadmM9pfrW7l8xTM5/T/b4qn6Yv
6RR8TvPdlJj26TDXn5O/3v9Jxu0LnN9O/lXb/PcjHqzfTu//rmnnqlzWb6fz
xFhjxeUurj8HPKHZWnl6Eeu303xa+TlkPTCa/XkFPZ8i/lKyLdef0/UXccaz
k5nP6f6BSR3Z24TeaxXtf0dKlSMKveBzsPTnNPM5nXfbb8hUiZzfTu+zZ4uu
JIr5nOwx3tV08zTntwMOlh962ZDA8XPaT7bleMY8YD6n+VM+Rr0Dx89pvT4/
u/i/3zCf0/lrbPiz2eNYHw7w2fqx80PPuf857aet2qoDUs5vB9wQGOiSr2A+
B6yXZj5KzzMJPqfzbdDEKafTRb9UNVjqk818TufnaTmxpVquP6fx8n75+4cV
Qk9GA5Z+T2Y+B4s+jZnP6fxx//2Zqams307nhfVrLx4sEvVqP73aT+VhYU3M
54BOiqVRumNcf07+zz/FURHPfA64qbBfd75V9GNpofXdVnBO9jX3VwPc8Te9
m23WI8HngL9GyaeH+zGfkz3kpvu51xsEn9P1DqV/hpfIh/uZfv/VSb3pCee3
03lNaojN/5Hj54ABKx7IqlJYv53OKz3qluA5nN9O56ugkuH266zfTv6jYklS
pEn484eAU3u333jtBuu3k33vmi2d4s/57eQPbNdIvHUmwed0/q/uXPjCnePn
dP7R5A94XBX5cEbaX7OjPhjcx/FzwKWBK3qrJnP8nObfw/pWeQjXn5M/rAkt
yjkp/HkPoEvy+621xRw/J/tVrD2a4Mz57fQ8dvXJdxKZz8k/rdBdsN0pvrf3
0XoO2X7cwZfz28mebG3vH2/m/HbAvyT6ZHd2i+/t/bRfyDdICqINgs9pf4uM
vZVjzfFzOh9u7lR8q+f4Ob3f83+7X9vF+nDEN4Ym/8y5rA8Hln4NZj6n+Wt+
2b53gvDnI3SerUteum8e57cDhmcv+4/vh0LvdZTm87ndncYbrN8O6DyzoU9T
qhd8Tv52WFbmWMjxc/LH7sVe0YEcPyc+3TXnH96u3F9tCUrG9UjcLvV4/g8h
Fnq4
            "]]}}, {{
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}}, {
      ImageSize -> Scaled[0.5], AxesOrigin -> {0, 0}, PlotLabel -> 
       Style["Simulated HG kinetics", "Subsection"], 
       Frame -> {{True, False}, {True, False}}, 
       FrameLabel -> {{"Signal / INT", None}, {"time / sec", None}}, 
       FrameTicks -> All, PlotRange -> All, DisplayFunction -> Identity, 
       Ticks -> {Automatic, Automatic}, AxesOrigin -> {Automatic, Automatic}, 
       FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {{}, {}}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{}, {}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     Placed[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]]}, {"Signal"}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> "Column"], After, Identity]], 
    Placed[
     PointLegend[{
       Directive[
        PointSize[
         Rational[1, 360]], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]]}, {"imported data"}, 
      LegendMarkers -> {{False, Automatic}}, Joined -> {False}, 
      LabelStyle -> {}, LegendLayout -> "Column"], After, Identity]], 
   TableForm[{
     MouseAppearance[
      Button[
       Tooltip[
        Framed[
         Style["Initialize", "Section", FontSize -> 18], RoundingRadius -> 15,
          Background -> GrayLevel[0.85], FrameStyle -> Directive[
           GrayLevel[0.85], 12]], "Initilize the values"], {$CellContext`nb = 
        EvaluationNotebook[], 
        NotebookFind[$CellContext`nb, "initialroutineHD", All, CellTags], 
        SelectionEvaluate[$CellContext`nb]}, Appearance -> None], "LinkHand"], 
     MouseAppearance[
      Button[
       Tooltip[
        Framed[
         Style["Save Parameters", "Section", FontSize -> 18], RoundingRadius -> 
         15, Background -> GrayLevel[0.85], FrameStyle -> Directive[
           GrayLevel[0.85], 12]], 
        "Saves the set values of the parameters"], \
{$CellContext`initialparameters = {$CellContext`h0in, $CellContext`d0in, \
$CellContext`ga0in, $CellContext`tmax, $CellContext`stepsize, \
$CellContext`kequhdin, $CellContext`kequhddin, $CellContext`kequhgain, \
$CellContext`khd1in, $CellContext`khdd1in, $CellContext`khga1in}, 
        Export[$CellContext`savePath, $CellContext`initialparameters]}, 
       Appearance -> None], "LinkHand"]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777741970441499*^9, 3.7777420018147244`*^9}, {
   3.7777421123932705`*^9, 3.7777421656922054`*^9}, 3.7777422670367637`*^9, {
   3.777742627312339*^9, 3.7777426588241277`*^9}, {3.777742712106391*^9, 
   3.7777427418460774`*^9}, 3.7777429145554733`*^9, 3.777743015422398*^9, {
   3.7777449120091324`*^9, 3.7777449177510166`*^9}, {3.777744978687644*^9, 
   3.777745016301306*^9}, 3.7777450788761635`*^9, 3.7777457132719393`*^9, {
   3.777745750898851*^9, 3.7777458119251995`*^9}, {3.777745844925635*^9, 
   3.777745873419031*^9}, 3.7777459544476132`*^9, 3.7777459979945345`*^9, {
   3.777746136606469*^9, 3.777746180172854*^9}, 3.7777462456055193`*^9, 
   3.777746280569045*^9, 3.7777464750416727`*^9, 3.7777466223508873`*^9, 
   3.778409435794705*^9, {3.7784094704830837`*^9, 3.7784095020620546`*^9}, {
   3.7784097625474215`*^9, 3.7784097704212646`*^9}, {3.7784098092075377`*^9, 
   3.7784098511032624`*^9}, {3.778409883375185*^9, 3.778409921286892*^9}, {
   3.778409958515006*^9, 3.7784100402182274`*^9}, 3.778411845937909*^9, {
   3.7784119168126583`*^9, 3.7784119297808795`*^9}, 3.7784119671537867`*^9, {
   3.77841203124319*^9, 3.7784120804440928`*^9}, 3.7784121307188864`*^9, {
   3.778412270500002*^9, 3.778412303343974*^9}, {3.7784124447651176`*^9, 
   3.778412453108365*^9}, {3.778412626335956*^9, 3.7784126562240276`*^9}},
 CellTags->"initialroutineHD",
 CellLabel->
  "During evaluation of \
In[663]:=",ExpressionUUID->"057f660d-b4a1-49af-ab4f-d4b1e6df9d30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox[
    InterpretationBox[GridBox[{
       {"\<\"Exact input parameters \"\>", "\<\"Value\"\>", "\<\"Error\"\>", \
"\<\"Unit\"\>", "\<\"Fixation\"\>"},
       {
        StyleBox["\<\"  \\!\\(\\*SubscriptBox[\\(K\\), \\(equ\\)]\\)(HD) = \"\
\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[Dynamic[$CellContext`kequhdin],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`kequhderror, None],
         Background->GrayLevel[0.85],
         FieldSize->
          8], "\<\"\\!\\(\\*SuperscriptBox[\\(M\\), \\(-1\\)]\\)\"\>", 
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`kequhdfixed], {1},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"Fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`kequhdfixed], {2},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"not fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         RadioButtonBar[
          Dynamic[$CellContext`kequhdfixed], {
          1 -> "Fixed", 2 -> "not fixed"}]]},
       {"\<\"\\!\\(\\*StyleBox[\\\"affinity\\\",FontSlant->\\\"Italic\\\"]\\)\
\\!\\(\\*StyleBox[\\\" \\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\
\"of\\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\" \\\",FontSlant->\
\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\"guest\\\",FontSlant->\\\"Italic\\\"]\\\
)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\"for\\\",FontSlant->\\\
\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\"host\\\",FontSlant->\\\
\"Italic\\\"]\\)\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
       {
        StyleBox["\<\"  \\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)(HD) = \"\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[Dynamic[$CellContext`khd1in],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`khd1error, None],
         Background->GrayLevel[0.85],
         FieldSize->
          8], "\<\"\\!\\(\\*SuperscriptBox[\\(M\\), \
\\(-1\\)]\\)\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\"\>", 
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`khd1fixed], {1},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"Fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`khd1fixed], {2},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"not fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         RadioButtonBar[
          Dynamic[$CellContext`khd1fixed], {1 -> "Fixed", 2 -> "not fixed"}]]},
       {"\<\"\\!\\(\\*StyleBox[\\\"ingression\\\",FontSlant->\\\"Italic\\\"]\\\
)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\"rate\\\",FontSlant->\\\
\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\"]\\)\\!\\(\\*StyleBox[\\\"constant\\\",\
FontSlant->\\\"Italic\\\"]\\)\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>"},
       {
        StyleBox["\<\"  \\!\\(\\*SubscriptBox[\\(k\\), \\(-1\\)]\\)(HD) = \
\"\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[
         Dynamic[$CellContext`khd2in = \
$CellContext`khd1in/$CellContext`kequhdin, None],
         Background->GrayLevel[0.85],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`khga2error, None],
         Background->GrayLevel[0.85],
         FieldSize->
          8], "\<\"\\!\\(\\*SuperscriptBox[\\(s\\), \\(-1\\)]\\)\"\>", \
"\<\"\"\>"},
       {"\<\"\\!\\(\\*UnderscriptBox[StyleBox[RowBox[{\\\"egression\\\", \\\" \
\\\", \\\"rate\\\", \\\" \\\", \\\"constant\\\", \\\"                         \
                  \\\"}],FontSlant->\\\"Italic\\\"], \\\"_\\\"]\\)\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
       {
        StyleBox["\<\"  Signal-0 = \"\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[Dynamic[$CellContext`sig0in],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`sig0error, None],
         Background->GrayLevel[0.85],
         FieldSize->8], "\<\"a.u.\"\>", 
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sig0fixed], {1},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"Fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sig0fixed], {2},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"not fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         RadioButtonBar[
          Dynamic[$CellContext`sig0fixed], {1 -> "Fixed", 2 -> "not fixed"}]]},
       {"\<\"  Startsignal\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>"},
       {
        StyleBox["\<\"  Signal-HD = \"\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[Dynamic[$CellContext`sighdin],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`sighderror, None],
         Background->GrayLevel[0.85],
         FieldSize->8], "\<\"a.u.\"\>", 
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sighdfixed], {1},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"Fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sighdfixed], {2},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"not fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         RadioButtonBar[
          Dynamic[$CellContext`sighdfixed], {
          1 -> "Fixed", 2 -> "not fixed"}]]},
       {"\<\"  Signal from HD complex\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"},
       {
        StyleBox["\<\"  Signal-D = \"\>",
         StripOnInput->False,
         TextAlignment->Right,
         FontSize->16,
         FontWeight->Bold], 
        InputFieldBox[Dynamic[$CellContext`sigdin],
         FieldSize->8], 
        InputFieldBox[Dynamic[$CellContext`sigderror, None],
         Background->GrayLevel[0.85],
         FieldSize->8], "\<\"a.u.\"\>", 
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sigdfixed], {1},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"Fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              RadioButtonBox[Dynamic[$CellContext`sigdfixed], {2},
               DefaultBaseStyle->"RadioButtonBar"], 
              StyleBox["\<\"not fixed\"\>", "RadioButtonBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         RadioButtonBar[
          Dynamic[$CellContext`sigdfixed], {1 -> "Fixed", 2 -> "not fixed"}]]},
       {"\<\"  Signal from dye alone\"\>", "\<\"\"\>", GridBox[{
          {
           TagBox[
            ButtonBox[
             TagBox[
              TooltipBox[
               FrameBox[
                StyleBox["\<\"Click here to fit\"\>", "Section",
                 StripOnInput->False,
                 FontSize->18],
                Background->GrayLevel[0.85],
                FrameStyle->Directive[
                  GrayLevel[0.85], 12],
                RoundingRadius->15,
                StripOnInput->False],
               "\"Fits the model to the data\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Fits the model to the data", "Tooltip"]& ],
             Appearance->None,
             ButtonFunction:>{$CellContext`nb = EvaluationNotebook[], 
               NotebookFind[$CellContext`nb, "fixinitials", All, CellTags], 
               SelectionEvaluate[$CellContext`nb], $CellContext`kb = 
               EvaluationNotebook[], 
               
               NotebookFind[$CellContext`kb, "fittingroutineHD", All, 
                CellTags], 
               SelectionEvaluate[$CellContext`kb]},
             Evaluator->Automatic,
             Method->"Preemptive"],
            MouseAppearanceTag["LinkHand"]]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[2.0999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     TableForm[{{
       "Exact input parameters ", "Value", "Error", "Unit", "Fixation"}, {
        Style[
        "  \!\(\*SubscriptBox[\(K\), \(equ\)]\)(HD) = ", Bold, FontSize -> 16,
          TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`kequhdin], FieldSize -> 8], 
        InputField[
         Dynamic[$CellContext`kequhderror, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], "\!\(\*SuperscriptBox[\(M\), \(-1\)]\)", 
        RadioButtonBar[
         Dynamic[$CellContext`kequhdfixed], {
         1 -> "Fixed", 2 -> "not fixed"}]}, {
       "\!\(\*StyleBox[\"affinity\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"of\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"guest\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"for\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"host\",FontSlant->\"Italic\"]\)"},\
 {
        Style[
        "  \!\(\*SubscriptBox[\(k\), \(1\)]\)(HD) = ", Bold, FontSize -> 16, 
         TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`khd1in], FieldSize -> 8], 
        InputField[
         Dynamic[$CellContext`khd1error, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], 
        "\!\(\*SuperscriptBox[\(M\), \(-1\)]\)\!\(\*SuperscriptBox[\(s\), \
\(-1\)]\)", 
        RadioButtonBar[
         Dynamic[$CellContext`khd1fixed], {
         1 -> "Fixed", 2 -> "not fixed"}]}, {
       "\!\(\*StyleBox[\"ingression\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rate\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"constant\",FontSlant->\"Italic\"]\
\)"}, {
        Style[
        "  \!\(\*SubscriptBox[\(k\), \(-1\)]\)(HD) = ", Bold, FontSize -> 16, 
         TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`khd2in = \
$CellContext`khd1in/$CellContext`kequhdin, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], 
        InputField[
         Dynamic[$CellContext`khga2error, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", ""}, {
       "\!\(\*UnderscriptBox[StyleBox[RowBox[{\"egression\", \" \", \"rate\", \
\" \", \"constant\", \"                                           \
\"}],FontSlant->\"Italic\"], \"_\"]\)"}, {
        Style["  Signal-0 = ", Bold, FontSize -> 16, TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`sig0in], FieldSize -> 8], 
        InputField[
         Dynamic[$CellContext`sig0error, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], "a.u.", 
        RadioButtonBar[
         Dynamic[$CellContext`sig0fixed], {
         1 -> "Fixed", 2 -> "not fixed"}]}, {"  Startsignal"}, {
        Style["  Signal-HD = ", Bold, FontSize -> 16, TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`sighdin], FieldSize -> 8], 
        InputField[
         Dynamic[$CellContext`sighderror, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], "a.u.", 
        RadioButtonBar[
         Dynamic[$CellContext`sighdfixed], {
         1 -> "Fixed", 2 -> "not fixed"}]}, {"  Signal from HD complex"}, {
        Style["  Signal-D = ", Bold, FontSize -> 16, TextAlignment -> Right], 
        InputField[
         Dynamic[$CellContext`sigdin], FieldSize -> 8], 
        InputField[
         Dynamic[$CellContext`sigderror, None], FieldSize -> 8, Background -> 
         GrayLevel[0.85]], "a.u.", 
        RadioButtonBar[
         Dynamic[$CellContext`sigdfixed], {
         1 -> "Fixed", 2 -> "not fixed"}]}, {"  Signal from dye alone", "", {
         MouseAppearance[
          Button[
           Tooltip[
            Framed[
             Style["Click here to fit", "Section", FontSize -> 18], 
             RoundingRadius -> 15, Background -> GrayLevel[0.85], FrameStyle -> 
             Directive[
               GrayLevel[0.85], 12]], 
            "Fits the model to the data"], {$CellContext`nb = 
            EvaluationNotebook[], 
            NotebookFind[$CellContext`nb, "fixinitials", All, CellTags], 
            SelectionEvaluate[$CellContext`nb], $CellContext`kb = 
            EvaluationNotebook[], 
            NotebookFind[$CellContext`kb, "fittingroutineHD", All, CellTags], 
            SelectionEvaluate[$CellContext`kb]}, Appearance -> None], 
          "LinkHand"]}}}, TableAlignments -> Left]], "Subsubsection",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontSize->18,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", 
   StyleBox["\<\"Please keep in mind, that in this fitting model, all \
concentrations should be known and fixed. The affinity constants should be \
known as well as the ingression rate of the dye.\"\>",
    StripOnInput->False,
    FontWeight->Bold]}],
  SequenceForm[
   Style[
    TableForm[{{
      "Exact input parameters ", "Value", "Error", "Unit", "Fixation"}, {
       Style[
       "  \!\(\*SubscriptBox[\(K\), \(equ\)]\)(HD) = ", Bold, FontSize -> 16, 
        TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`kequhdin], FieldSize -> 8], 
       InputField[
        Dynamic[$CellContext`kequhderror, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], "\!\(\*SuperscriptBox[\(M\), \(-1\)]\)", 
       RadioButtonBar[
        Dynamic[$CellContext`kequhdfixed], {
        1 -> "Fixed", 2 -> "not fixed"}]}, {
      "\!\(\*StyleBox[\"affinity\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"of\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"guest\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"for\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"host\",FontSlant->\"Italic\"]\)"},\
 {
       Style[
       "  \!\(\*SubscriptBox[\(k\), \(1\)]\)(HD) = ", Bold, FontSize -> 16, 
        TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`khd1in], FieldSize -> 8], 
       InputField[
        Dynamic[$CellContext`khd1error, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], 
       "\!\(\*SuperscriptBox[\(M\), \(-1\)]\)\!\(\*SuperscriptBox[\(s\), \(-1\
\)]\)", 
       RadioButtonBar[
        Dynamic[$CellContext`khd1fixed], {1 -> "Fixed", 2 -> "not fixed"}]}, {
      "\!\(\*StyleBox[\"ingression\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
 \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rate\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"constant\",FontSlant->\"Italic\"]\
\)"}, {
       Style[
       "  \!\(\*SubscriptBox[\(k\), \(-1\)]\)(HD) = ", Bold, FontSize -> 16, 
        TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`khd2in = \
$CellContext`khd1in/$CellContext`kequhdin, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], 
       InputField[
        Dynamic[$CellContext`khga2error, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", ""}, {
      "\!\(\*UnderscriptBox[StyleBox[RowBox[{\"egression\", \" \", \"rate\", \
\" \", \"constant\", \"                                           \
\"}],FontSlant->\"Italic\"], \"_\"]\)"}, {
       Style["  Signal-0 = ", Bold, FontSize -> 16, TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`sig0in], FieldSize -> 8], 
       InputField[
        Dynamic[$CellContext`sig0error, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], "a.u.", 
       RadioButtonBar[
        Dynamic[$CellContext`sig0fixed], {1 -> "Fixed", 2 -> "not fixed"}]}, {
      "  Startsignal"}, {
       Style["  Signal-HD = ", Bold, FontSize -> 16, TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`sighdin], FieldSize -> 8], 
       InputField[
        Dynamic[$CellContext`sighderror, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], "a.u.", 
       RadioButtonBar[
        Dynamic[$CellContext`sighdfixed], {
        1 -> "Fixed", 2 -> "not fixed"}]}, {"  Signal from HD complex"}, {
       Style["  Signal-D = ", Bold, FontSize -> 16, TextAlignment -> Right], 
       InputField[
        Dynamic[$CellContext`sigdin], FieldSize -> 8], 
       InputField[
        Dynamic[$CellContext`sigderror, None], FieldSize -> 8, Background -> 
        GrayLevel[0.85]], "a.u.", 
       RadioButtonBar[
        Dynamic[$CellContext`sigdfixed], {1 -> "Fixed", 2 -> "not fixed"}]}, {
      "  Signal from dye alone", "", {
        MouseAppearance[
         Button[
          Tooltip[
           Framed[
            Style["Click here to fit", "Section", FontSize -> 18], 
            RoundingRadius -> 15, Background -> GrayLevel[0.85], FrameStyle -> 
            Directive[
              GrayLevel[0.85], 12]], 
           "Fits the model to the data"], {$CellContext`nb = 
           EvaluationNotebook[], 
           NotebookFind[$CellContext`nb, "fixinitials", All, CellTags], 
           SelectionEvaluate[$CellContext`nb], $CellContext`kb = 
           EvaluationNotebook[], 
           NotebookFind[$CellContext`kb, "fittingroutineHD", All, CellTags], 
           SelectionEvaluate[$CellContext`kb]}, Appearance -> None], 
         "LinkHand"]}}}, TableAlignments -> Left], "Subsubsection", 
    GrayLevel[0], FontSize -> 18], 
   Style["Please keep in mind, that in this fitting model, all concentrations \
should be known and fixed. The affinity constants should be known as well as \
the ingression rate of the dye.", Bold]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777741970441499*^9, 3.7777420018147244`*^9}, {
   3.7777421123932705`*^9, 3.7777421656922054`*^9}, 3.7777422670367637`*^9, {
   3.777742627312339*^9, 3.7777426588241277`*^9}, {3.777742712106391*^9, 
   3.7777427418460774`*^9}, 3.7777429145554733`*^9, 3.777743015422398*^9, {
   3.7777449120091324`*^9, 3.7777449177510166`*^9}, {3.777744978687644*^9, 
   3.777745016301306*^9}, 3.7777450788761635`*^9, 3.7777457132719393`*^9, {
   3.777745750898851*^9, 3.7777458119251995`*^9}, {3.777745844925635*^9, 
   3.777745873419031*^9}, 3.7777459544476132`*^9, 3.7777459979945345`*^9, {
   3.777746136606469*^9, 3.777746180172854*^9}, 3.7777462456055193`*^9, 
   3.777746280569045*^9, 3.7777464750416727`*^9, 3.7777466223508873`*^9, 
   3.778409435794705*^9, {3.7784094704830837`*^9, 3.7784095020620546`*^9}, {
   3.7784097625474215`*^9, 3.7784097704212646`*^9}, {3.7784098092075377`*^9, 
   3.7784098511032624`*^9}, {3.778409883375185*^9, 3.778409921286892*^9}, {
   3.778409958515006*^9, 3.7784100402182274`*^9}, 3.778411845937909*^9, {
   3.7784119168126583`*^9, 3.7784119297808795`*^9}, 3.7784119671537867`*^9, {
   3.77841203124319*^9, 3.7784120804440928`*^9}, 3.7784121307188864`*^9, {
   3.778412270500002*^9, 3.778412303343974*^9}, {3.7784124447651176`*^9, 
   3.778412453108365*^9}, {3.778412626335956*^9, 3.778412656250371*^9}},
 CellTags->"initialroutineHD",
 CellLabel->
  "During evaluation of \
In[663]:=",ExpressionUUID->"9d8fdb70-ffca-4be6-b066-c764977d6092"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ParametricNDSolveValue", "::", "ivres"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputparameter", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"subparameter", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"concparameter", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"output", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Dye", " ", "affinity", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "h0", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "d0", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"d0fixed", "==", " ", "2"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"operator", "=", "1"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"inputparameter", ",", 
        RowBox[{"{", 
         RowBox[{"d0", ",", "d0in"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"(*", "else", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"d0", "=", "d0in"}], ";", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"subparameter", ",", 
        RowBox[{"{", 
         RowBox[{"d0", " ", "->", " ", "d0in"}], "}"}]}], "]"}], ";"}]}], 
    "\n", "]"}], ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Dye", " ", "affinity", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "khd1", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"khd1fixed", "==", " ", "2"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"operator", "=", "1"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"inputparameter", ",", 
        RowBox[{"{", 
         RowBox[{"khd1", ",", "khd1in"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"(*", "else", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"khd1", "=", "khd1in"}], ";", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"subparameter", ",", 
        RowBox[{"{", 
         RowBox[{"khd1", " ", "->", " ", "khd1in"}], "}"}]}], "]"}], ";"}]}], 
    "\n", "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "khd2", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"khd2fixed", "==", " ", "2"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"operator", "=", "1"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"inputparameter", ",", 
        RowBox[{"{", 
         RowBox[{"khd2", ",", "khd2in"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"(*", "else", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"khd2", "=", "khd2in"}], ";", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"subparameter", ",", 
        RowBox[{"{", 
         RowBox[{"khd2", " ", "->", " ", "khd2in"}], "}"}]}], "]"}], ";"}]}], 
    "\n", "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "kequhd", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"kequhdfixed", "==", " ", "2"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"operator", "=", "1"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"inputparameter", ",", 
        RowBox[{"{", 
         RowBox[{"kequhd", ",", "kequhdin"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"(*", "else", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"kequhd", "=", "kequhdin"}], ";", "\n", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"subparameter", ",", 
        RowBox[{"{", 
         RowBox[{"kequhd", " ", "->", " ", "kequhdin"}], "}"}]}], "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"Clear", "[", "sighd", "]"}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"sighdfixed", "==", "2"}], ",", "\n", 
    RowBox[{
     RowBox[{"operator", "=", "1"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inputparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sighd", ",", "sighdin"}], "}"}]}], "]"}]}], ",", " ", 
    RowBox[{"(*", "else", "*)"}], "\n", 
    RowBox[{
     RowBox[{"sighd", "=", "sighdin"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"subparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sighd", " ", "->", " ", "sighdin"}], "}"}]}], "]"}], ";"}]}],
    "\n", "]"}], ";"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"Clear", "[", "sigd", "]"}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"sigdfixed", "==", " ", "2"}], ",", "\n", 
    RowBox[{
     RowBox[{"operator", "=", "1"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inputparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sigd", ",", "sigdin"}], "}"}]}], "]"}]}], ",", " ", 
    RowBox[{"(*", "else", "*)"}], "\n", 
    RowBox[{
     RowBox[{"sigd", "=", "sigdin"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"subparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sigd", " ", "->", " ", "sigdin"}], "}"}]}], "]"}], ";"}]}], 
   "\n", "]"}], ";"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"Clear", "[", "sig0", "]"}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"sig0fixed", "==", " ", "2"}], ",", "\n", 
    RowBox[{
     RowBox[{"operator", "=", "1"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inputparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sig0", ",", "sig0in"}], "}"}]}], "]"}]}], ",", " ", 
    RowBox[{"(*", "else", "*)"}], "\n", 
    RowBox[{
     RowBox[{"sig0", "=", "sig0in"}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"subparameter", ",", 
       RowBox[{"{", 
        RowBox[{"sig0", " ", "->", " ", "sig0in"}], "}"}]}], "]"}], ";"}]}], 
   "\n", "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.777727091735077*^9, 3.777727092088112*^9}, 
   3.7777402201066866`*^9, {3.778412396618924*^9, 3.778412415138305*^9}},
 CellTags->"fixinitials",
 CellLabel->
  "In[677]:=",ExpressionUUID->"4bb6783b-9e89-447c-a8ed-19e8f6aa075f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"fitsignal2", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"adjusteddata", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"kinHDParaCacheSignalall", "[", 
          RowBox[{
          "h0in", ",", "d0in", ",", "sig0in", ",", "sighdin", ",", "sigdin", 
           ",", "tmin", ",", "tmax"}], "]"}], "[", 
         RowBox[{
         "khd1", ",", "khd2", ",", "sig0", ",", "sighd", ",", "sigd"}], "]"}],
         "[", "t", "]"}], ",", "inputparameter", ",", "t"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "h0", ",", "d0", ",", "sig0", ",", "sighd", ",", "sigd", ",", "khd1", ",",
      "kequhd"}], "]"}], "\n", "\n", "\t", 
   RowBox[{
    RowBox[{"bestfit", "=", 
     RowBox[{"TableForm", "[", 
      RowBox[{"fitsignal2", "[", "\"\<ParameterTableEntries\>\"", "]"}], 
      "]"}]}], ";"}], "\n", "\t", 
   RowBox[{"(*", 
    RowBox[{"signal", " ", "results"}], "*)"}], "\n", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{
    RowBox[{"sig0out", "=", 
     RowBox[{"sig0", "/.", 
      RowBox[{"fitsignal2", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"sig0pos", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"bestfit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", "sig0out"}],
        "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumericQ", "[", "sig0out", "]"}], ",", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{
       RowBox[{"sig0error", "=", 
        RowBox[{"First", "[", 
         RowBox[{"bestfit", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "sig0pos", ",", "2"}], "]"}], "]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"sig0in", "=", "sig0out"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\n", "\t", 
   RowBox[{
    RowBox[{"sighdout", "=", 
     RowBox[{"sighd", "/.", 
      RowBox[{"fitsignal2", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"sighdpos", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"bestfit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
        "sighdout"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumericQ", "[", "sighdout", "]"}], ",", "\[IndentingNewLine]", 
      "\t", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"sighderror", "=", 
        RowBox[{"First", "[", 
         RowBox[{"bestfit", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "sighdpos", ",", "2"}], "]"}], "]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"sighdin", "=", "sighdout"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\n", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"sigdout", "=", 
     RowBox[{"sigd", "/.", 
      RowBox[{"fitsignal2", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
    ";"}], "\n", "\t\t", 
   RowBox[{
    RowBox[{"sigdpos", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"bestfit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", "sigdout"}],
        "]"}], "]"}]}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumericQ", "[", "sigdout", "]"}], ",", "\[IndentingNewLine]", 
      "\t", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"sigderror", "=", 
        RowBox[{"First", "[", 
         RowBox[{"bestfit", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "sigdpos", ",", "2"}], "]"}], "]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"sigdin", "=", "sigdout"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"affinity", " ", "results"}], "*)"}], "\[IndentingNewLine]", "\n",
    "\t", 
   RowBox[{
    RowBox[{"khd1out", "=", 
     RowBox[{"khd1", "/.", 
      RowBox[{"fitsignal2", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"khd1pos", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"bestfit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", "khd1out"}],
        "]"}], "]"}]}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumericQ", "[", "khd1out", "]"}], ",", "\[IndentingNewLine]", 
      "\t", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"khd1error", "=", 
        RowBox[{"First", "[", 
         RowBox[{"bestfit", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "khd1pos", ",", "2"}], "]"}], "]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"khd1in", "=", "khd1out"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\n", "\n", "\[IndentingNewLine]", "\n", "\t", 
   RowBox[{
    RowBox[{"kequhdout", "=", 
     RowBox[{"kequhd", "/.", 
      RowBox[{"fitsignal2", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"kequhdpos", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"bestfit", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
        "kequhdout"}], "]"}], "]"}]}], ";"}], "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumericQ", "[", "kequhdout", "]"}], ",", "\[IndentingNewLine]",
       "\t", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"kequhderror", "=", 
        RowBox[{"First", "[", 
         RowBox[{"bestfit", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "kequhdpos", ",", "2"}], "]"}], "]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"kequhdin", "=", "kequhdout"}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\n", "\[IndentingNewLine]", "\t", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "accumulate", " ", "data", " ", "for", " ", "export", " ", "file"}], 
    "*)"}], "\n", "\t", "\[IndentingNewLine]", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "accumulate", " ", "data", " ", "for", " ", "export", " ", "file"}], 
    "*)"}], "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"fitplot", "=", 
     RowBox[{"Manipulate", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Show", "[", "\t", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a2", "*", "adjusteddata"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a1", "*", 
             RowBox[{
              RowBox[{
               RowBox[{"kinHDParaCacheSignalall", "[", 
                RowBox[{
                "kequhdin", ",", "khd1in", ",", "h0in", ",", "d0in", ",", 
                 "sig0in", ",", "sighdin", ",", "sigdin", ",", "tmin", ",", 
                 "tmax"}], "]"}], "[", 
               RowBox[{
               "khd1in", ",", "kequhdin", ",", "sig0in", ",", "sighdin", ",", 
                "sigdin"}], "]"}], "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Fitted Signal\>\"", ",", 
            "\"\<[\!\(\*SubscriptBox[\(HD\), \(2\)]\)]\>\"", ",", 
            "\"\<[D]\>\"", ",", 
            "\"\<[\!\(\*SubscriptBox[\(HG\), \(A\)]\)]\>\"", ",", 
            "\"\<[\!\(\*SubscriptBox[\(G\), \(A\)]\)]\>\"", ",", 
            "\"\<[H]\>\""}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", " ", "Large"}], ",", 
         RowBox[{"AxesOrigin", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", " ", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Fitted Data\>\"", ",", "\"\<Subsection\>\""}], 
           "]"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a1", ",", "1", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Fitted Signal\>\"", ",", "Red"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a2", ",", "1", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Data\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlPlacement", "\[Rule]", "Right"}]}], "\n", "\t\t\t", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exportbutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{
          "\"\<Save Fitting\>\"", ",", 
           "\"\<Save the simulated data as comma delimited .csv\>\""}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"SystemDialogInput", "[", 
            RowBox[{"\"\<FileSave\>\"", ",", "\"\<.csv\>\""}], "]"}], ",", 
           "output"}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ",", "\"\<LinkHand\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datageneratebutton", "=", 
     RowBox[{"MouseAppearance", "[", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{
         RowBox[{"stylesButtonGenericStyle", "[", 
          RowBox[{
          "\"\<Generate saveable Data\>\"", ",", 
           "\"\<Generate Datapoints for CSV export\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"output", "=", 
           RowBox[{"kinGenerateOutput", "[", 
            RowBox[{
            "kequhdin", ",", "khd1in", ",", "h0in", ",", "d0in", ",", 
             "sig0in", ",", "sighdin", ",", "sigdin", ",", "tmin", ",", 
             "tmax", ",", 
             RowBox[{"N", "[", "200", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"outputinfo", "=", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"TableForm", "[", 
              RowBox[{"output", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"1", ";;", "12"}], ",", 
                 RowBox[{"5", ";;", "7"}]}], "]"}], "]"}], "]"}], ",", 
             "\"\<Menu\>\""}], "]"}]}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"Appearance", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ",", "\"\<LinkHand\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"fitplot", ",", 
     RowBox[{"TableForm", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "datageneratebutton", "}"}], ",", "\"\<\>\"", ",", " ", 
        RowBox[{"Dynamic", "[", "outputinfo", "]"}], ",", "\"\<\>\"", ",", 
        "exportbutton"}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"put1", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"fitteddata", ",", "units"}], "]"}], ",", "header1"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"put2", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"adjusteddata", ",", "units"}], "]"}], ",", "header2"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"output", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"put1", ",", 
        RowBox[{"List", "/@", 
         RowBox[{"put2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"List", "/@", 
         RowBox[{"put2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"List", "/@", "column1"}], ",", 
        RowBox[{"List", "/@", "column2"}], ",", 
        RowBox[{"List", "/@", "column3"}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"exportbutton1", "=", 
      RowBox[{"MouseAppearance", "[", 
       RowBox[{
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{"stylesButtonGenericStyle", "[", 
           RowBox[{
           "\"\<Save\>\"", ",", "\"\<Save the fitted and acquired data\>\""}],
            "]"}], ",", 
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"SystemDialogInput", "[", 
             RowBox[{"\"\<FileSave\>\"", ",", "\"\<.csv\>\""}], "]"}], ",", 
            "output"}], "]"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
          RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
        "\"\<LinkHand\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"halflifebutton", "=", 
      RowBox[{"MouseAppearance", "[", 
       RowBox[{
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{"stylesButtonGenericStyle", "[", 
           RowBox[{
           "\"\<Calculate Half-Life\>\"", ",", 
            "\"\<Calculate the half-life of the reaction\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"hl", "=", 
           RowBox[{"signalmodeldata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"signalmodeldata", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"SelectFirst", "[", 
                  RowBox[{
                   RowBox[{"signalmodeldata", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"#", ",", "0.001"}], "]"}], "\[Equal]", " ", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"2", "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{"signalmodeldata", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
                    "0.001"}], "]"}]}], "&"}]}], "]"}]}], "]"}], "]"}], ",", 
              "All"}], "]"}], "]"}]}], ",", 
          RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}], ",", 
        "\"\<LinkHand\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Print", "[", "\n", 
      RowBox[{"fitplot", ",", "\n", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"TableForm", "[", "inputs", "]"}], ",", "\"\<Section\>\"", 
         ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", "\"\<  \>\"", 
       ",", "\n", 
       RowBox[{"TableForm", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
          "\"\<  You can save fitted data:\>\"", ",", "exportbutton1"}], 
          "}"}], "}"}], "]"}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"Print", "[", "\n", "\[IndentingNewLine]", 
      RowBox[{"TableForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<half-life:\>\"", ",", " ", 
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "hl", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\"\<sec\>\""}], 
          "}"}], ",", "halflifebutton"}], "}"}], "]"}], "\n", "]"}], ";"}], 
    "*)"}], "\n", "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.7251845499625125`*^9, 3.7251845853644776`*^9}, {
   3.725184623214929*^9, 3.725184704757572*^9}, {3.7251847668319445`*^9, 
   3.7251847830907893`*^9}, {3.7251848538560224`*^9, 3.725184854084258*^9}, {
   3.7251851962707114`*^9, 3.7251852152576284`*^9}, 3.725185312779334*^9, {
   3.7251853607073584`*^9, 3.7251853609467173`*^9}, {3.725185423585928*^9, 
   3.7251854240057216`*^9}, 3.725185462713163*^9, {3.725185537822959*^9, 
   3.725185568222003*^9}, {3.725185616843117*^9, 3.7251857020116525`*^9}, 
   3.725185739747748*^9, {3.7251857902682767`*^9, 3.725185819405298*^9}, {
   3.72518597978321*^9, 3.7251860528726997`*^9}, {3.725186166583143*^9, 
   3.7251861744500294`*^9}, {3.725186215085828*^9, 3.725186237433365*^9}, {
   3.725186307160355*^9, 3.7251863285862975`*^9}, 3.7251863798607855`*^9, 
   3.725186845480851*^9, {3.7251868962120347`*^9, 3.7251869186603165`*^9}, {
   3.7251870030132046`*^9, 3.7251870101402297`*^9}, 3.725187044033323*^9, {
   3.725187092411556*^9, 3.725187132004463*^9}, {3.7251871944610977`*^9, 
   3.72518726668149*^9}, {3.725187297063648*^9, 3.725187308653159*^9}, {
   3.7251873452269344`*^9, 3.725187423906593*^9}, {3.725271221424288*^9, 
   3.725271237003111*^9}, {3.7252713751547728`*^9, 3.725271376051978*^9}, 
   3.7252714334009547`*^9, {3.7252714870027466`*^9, 3.7252714970653706`*^9}, {
   3.7252715284092083`*^9, 3.725271558441044*^9}, {3.7252716095657673`*^9, 
   3.7252716243021917`*^9}, {3.725271668627808*^9, 3.725271676127891*^9}, {
   3.7252717544881268`*^9, 3.72527178914612*^9}, {3.7252718736591206`*^9, 
   3.725271886592582*^9}, 3.7252719287528944`*^9, {3.7252721025817175`*^9, 
   3.7252722751935997`*^9}, {3.725272305628664*^9, 3.725272325390746*^9}, {
   3.725272639334804*^9, 3.7252726447223597`*^9}, {3.7252738386128907`*^9, 
   3.7252738798474183`*^9}, 3.725273981659726*^9, {3.72527401844901*^9, 
   3.725274049185861*^9}, {3.725274096160689*^9, 3.725274112319371*^9}, {
   3.7252742193662767`*^9, 3.7252742527851353`*^9}, {3.7252744579102745`*^9, 
   3.725274458436466*^9}, {3.726902768181862*^9, 3.7269027941459994`*^9}, {
   3.726902825890523*^9, 3.726902859984959*^9}, {3.726903075405266*^9, 
   3.7269030931782355`*^9}, {3.7269052591487055`*^9, 3.726905274651101*^9}, 
   3.726908035637476*^9, {3.726908261178851*^9, 3.726908275103622*^9}, {
   3.7269083095695543`*^9, 3.7269084606549463`*^9}, {3.7287157649818125`*^9, 
   3.728715864149555*^9}, {3.7287160083923464`*^9, 3.728716010742987*^9}, {
   3.7287160720014415`*^9, 3.728716098691599*^9}, {3.773127594067698*^9, 
   3.773127624893218*^9}, {3.7731277496241336`*^9, 3.7731277636769533`*^9}, {
   3.773128316737774*^9, 3.77312837173063*^9}, {3.7734729712117224`*^9, 
   3.773472974175985*^9}, {3.7734730045706606`*^9, 3.7734730081127467`*^9}, {
   3.77347303921204*^9, 3.7734730435730085`*^9}, {3.7773067879696984`*^9, 
   3.7773068284362464`*^9}, {3.777307285910142*^9, 3.777307299697218*^9}, 
   3.777307341208592*^9, {3.7773084515172606`*^9, 3.7773084988019257`*^9}, {
   3.7773536482257156`*^9, 3.777353702481797*^9}, {3.7773537490949693`*^9, 
   3.7773538492223434`*^9}, {3.777353886147212*^9, 3.777353901771652*^9}, {
   3.7773539430315514`*^9, 3.7773539932390842`*^9}, {3.7773540234130964`*^9, 
   3.777354040161734*^9}, {3.777354148846103*^9, 3.777354151580378*^9}, 
   3.7777258255234184`*^9, {3.777725856080305*^9, 3.7777258743619814`*^9}, {
   3.7777260224340615`*^9, 3.7777260599177327`*^9}, 3.777726292444254*^9, {
   3.777726417489626*^9, 3.777726481353912*^9}, {3.7777265388022304`*^9, 
   3.7777266245239043`*^9}, 3.7777270754077406`*^9, {3.777727239279913*^9, 
   3.7777272454835596`*^9}, {3.7777273320265427`*^9, 3.777727334543431*^9}, {
   3.777739883994472*^9, 3.777739997722148*^9}, {3.7777446096386347`*^9, 
   3.777744611403118*^9}, {3.7777447558971844`*^9, 3.7777447690928864`*^9}, {
   3.777744800479626*^9, 3.7777448107464585`*^9}, {3.777744888543298*^9, 
   3.7777448933025336`*^9}, {3.7777450571811557`*^9, 3.777745057712152*^9}, {
   3.777745422164372*^9, 3.777745465538499*^9}, {3.7784123448212085`*^9, 
   3.778412352764347*^9}},
 CellTags->"fittingroutineHD",
 CellLabel->
  "In[697]:=",ExpressionUUID->"642c2290-ced0-41e1-8269-25f55d006250"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"8.002`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,697,38,17016513351014373485,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.777745891680766*^9, {3.7777459823054376`*^9, 3.7777460098729334`*^9}, 
   3.7777462279383802`*^9, 3.7777462941783466`*^9, 3.7777464231100454`*^9, 
   3.777746485090888*^9, 3.777746634386791*^9, 3.7784095135227575`*^9, 
   3.778409864234026*^9, {3.778409902594094*^9, 3.7784099262781415`*^9}, {
   3.7784100287680798`*^9, 3.778410053109735*^9}, 3.7784124641240406`*^9, {
   3.778412641517814*^9, 3.778412666536543*^9}},
 CellTags->"fittingroutineHD",
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"7f61d47f-ddd3-4140-a1f7-9f2f53d0909f"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"8.004`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,697,39,17016513351014373485,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.777745891680766*^9, {3.7777459823054376`*^9, 3.7777460098729334`*^9}, 
   3.7777462279383802`*^9, 3.7777462941783466`*^9, 3.7777464231100454`*^9, 
   3.777746485090888*^9, 3.777746634386791*^9, 3.7784095135227575`*^9, 
   3.778409864234026*^9, {3.778409902594094*^9, 3.7784099262781415`*^9}, {
   3.7784100287680798`*^9, 3.778410053109735*^9}, 3.7784124641240406`*^9, {
   3.778412641517814*^9, 3.778412666702427*^9}},
 CellTags->"fittingroutineHD",
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"f3d44a05-c9e7-4192-a72e-2228584d6ad2"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"8.006`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,697,40,17016513351014373485,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.777745891680766*^9, {3.7777459823054376`*^9, 3.7777460098729334`*^9}, 
   3.7777462279383802`*^9, 3.7777462941783466`*^9, 3.7777464231100454`*^9, 
   3.777746485090888*^9, 3.777746634386791*^9, 3.7784095135227575`*^9, 
   3.778409864234026*^9, {3.778409902594094*^9, 3.7784099262781415`*^9}, {
   3.7784100287680798`*^9, 3.778410053109735*^9}, 3.7784124641240406`*^9, {
   3.778412641517814*^9, 3.7784126668597345`*^9}},
 CellTags->"fittingroutineHD",
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"527e4e25-d6a8-45ad-9895-5d39fe38c962"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,697,41,17016513351014373485,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.777745891680766*^9, {3.7777459823054376`*^9, 3.7777460098729334`*^9}, 
   3.7777462279383802`*^9, 3.7777462941783466`*^9, 3.7777464231100454`*^9, 
   3.777746485090888*^9, 3.777746634386791*^9, 3.7784095135227575`*^9, 
   3.778409864234026*^9, {3.778409902594094*^9, 3.7784099262781415`*^9}, {
   3.7784100287680798`*^9, 3.778410053109735*^9}, 3.7784124641240406`*^9, {
   3.778412641517814*^9, 3.7784126670375595`*^9}},
 CellTags->"fittingroutineHD",
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"695a6cf7-37bd-468f-b0b7-73eb463b109e"]
}, Open  ]]
},
InitializationCellEvaluation->True,
InitializationCellWarning->False,
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
CellContext->Notebook,
CellEpilog:>SelectionMove[
  EvaluationNotebook[], All, EvaluationCell],
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "loadcellHD"->{
  Cell[3176, 96, 47520, 1067, 19, "Input",ExpressionUUID->"336ae152-ac88-4e87-a725-d05aef132b48",
   CellOpen->False,
   CellTags->"loadcellHD"],
  Cell[50721, 1167, 5651, 123, 43, "Print",ExpressionUUID->"6c723d1a-ee87-4425-96ff-b4160d21b009",
   CellTags->"loadcellHD"],
  Cell[56375, 1292, 2198, 38, 28, "Print",ExpressionUUID->"203d6dab-52a6-45bd-97b9-bcbff594af3f",
   CellTags->"loadcellHD"],
  Cell[58576, 1332, 7892, 184, 55, "Print",ExpressionUUID->"fc793b85-f9d3-4897-ac1a-e755ea7c6820",
   CellTags->"loadcellHD"],
  Cell[66471, 1518, 3941, 88, 73, "Print",ExpressionUUID->"1454ac4b-e89c-4457-b3d1-3b4c9f78f65f",
   CellTags->"loadcellHD"],
  Cell[70427, 1609, 8807, 224, 237, "Output",ExpressionUUID->"1d9b38aa-d107-4ccd-a0c5-ad9943bbcc36",
   CellTags->"loadcellHD"]},
 "initialroutineHD"->{
  Cell[79271, 1838, 22196, 505, 19, "Input",ExpressionUUID->"65e619f9-c74a-41db-8215-0c65d8f5a4cc",
   CellOpen->False,
   CellTags->"initialroutineHD"],
  Cell[101492, 2347, 250981, 4246, 603, "Print",ExpressionUUID->"057f660d-b4a1-49af-ab4f-d4b1e6df9d30",
   CellTags->"initialroutineHD"],
  Cell[352476, 6595, 26703, 601, 426, "Print",ExpressionUUID->"9d8fdb70-ffca-4be6-b066-c764977d6092",
   CellTags->"initialroutineHD"]},
 "fixinitials"->{
  Cell[379206, 7200, 6218, 175, 19, "Input",ExpressionUUID->"4bb6783b-9e89-447c-a8ed-19e8f6aa075f",
   CellOpen->False,
   CellTags->"fixinitials"]},
 "fittingroutineHD"->{
  Cell[385449, 7379, 21127, 486, 2563, "Input",ExpressionUUID->"642c2290-ced0-41e1-8269-25f55d006250",
   CellTags->"fittingroutineHD"],
  Cell[406579, 7867, 898, 17, 23, "Message",ExpressionUUID->"7f61d47f-ddd3-4140-a1f7-9f2f53d0909f",
   CellTags->"fittingroutineHD"],
  Cell[407480, 7886, 898, 17, 23, "Message",ExpressionUUID->"f3d44a05-c9e7-4192-a72e-2228584d6ad2",
   CellTags->"fittingroutineHD"],
  Cell[408381, 7905, 900, 17, 23, "Message",ExpressionUUID->"527e4e25-d6a8-45ad-9895-5d39fe38c962",
   CellTags->"fittingroutineHD"],
  Cell[409284, 7924, 896, 17, 21, "Message",ExpressionUUID->"695a6cf7-37bd-468f-b0b7-73eb463b109e",
   CellTags->"fittingroutineHD"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"loadcellHD", 410657, 7959},
 {"initialroutineHD", 411462, 7973},
 {"fixinitials", 411909, 7981},
 {"fittingroutineHD", 412082, 7985}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1589, 39, 19, "Input",ExpressionUUID->"dc523fa3-dec0-4f7d-a881-a3a7b4c3a679",
 CellOpen->False],
Cell[2172, 63, 967, 28, 91, "Output",ExpressionUUID->"54990900-7df1-4ff5-ba5b-272dbb900e15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3176, 96, 47520, 1067, 19, "Input",ExpressionUUID->"336ae152-ac88-4e87-a725-d05aef132b48",
 CellOpen->False,
 CellTags->"loadcellHD"],
Cell[CellGroupData[{
Cell[50721, 1167, 5651, 123, 43, "Print",ExpressionUUID->"6c723d1a-ee87-4425-96ff-b4160d21b009",
 CellTags->"loadcellHD"],
Cell[56375, 1292, 2198, 38, 28, "Print",ExpressionUUID->"203d6dab-52a6-45bd-97b9-bcbff594af3f",
 CellTags->"loadcellHD"],
Cell[58576, 1332, 7892, 184, 55, "Print",ExpressionUUID->"fc793b85-f9d3-4897-ac1a-e755ea7c6820",
 CellTags->"loadcellHD"],
Cell[66471, 1518, 3941, 88, 73, "Print",ExpressionUUID->"1454ac4b-e89c-4457-b3d1-3b4c9f78f65f",
 CellTags->"loadcellHD"]
}, Open  ]],
Cell[70427, 1609, 8807, 224, 237, "Output",ExpressionUUID->"1d9b38aa-d107-4ccd-a0c5-ad9943bbcc36",
 CellTags->"loadcellHD"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79271, 1838, 22196, 505, 19, "Input",ExpressionUUID->"65e619f9-c74a-41db-8215-0c65d8f5a4cc",
 CellOpen->False,
 CellTags->"initialroutineHD"],
Cell[CellGroupData[{
Cell[101492, 2347, 250981, 4246, 603, "Print",ExpressionUUID->"057f660d-b4a1-49af-ab4f-d4b1e6df9d30",
 CellTags->"initialroutineHD"],
Cell[352476, 6595, 26703, 601, 426, "Print",ExpressionUUID->"9d8fdb70-ffca-4be6-b066-c764977d6092",
 CellTags->"initialroutineHD"]
}, Open  ]]
}, Open  ]],
Cell[379206, 7200, 6218, 175, 19, "Input",ExpressionUUID->"4bb6783b-9e89-447c-a8ed-19e8f6aa075f",
 CellOpen->False,
 CellTags->"fixinitials"],
Cell[CellGroupData[{
Cell[385449, 7379, 21127, 486, 2563, "Input",ExpressionUUID->"642c2290-ced0-41e1-8269-25f55d006250",
 CellTags->"fittingroutineHD"],
Cell[406579, 7867, 898, 17, 23, "Message",ExpressionUUID->"7f61d47f-ddd3-4140-a1f7-9f2f53d0909f",
 CellTags->"fittingroutineHD"],
Cell[407480, 7886, 898, 17, 23, "Message",ExpressionUUID->"f3d44a05-c9e7-4192-a72e-2228584d6ad2",
 CellTags->"fittingroutineHD"],
Cell[408381, 7905, 900, 17, 23, "Message",ExpressionUUID->"527e4e25-d6a8-45ad-9895-5d39fe38c962",
 CellTags->"fittingroutineHD"],
Cell[409284, 7924, 896, 17, 21, "Message",ExpressionUUID->"695a6cf7-37bd-468f-b0b7-73eb463b109e",
 CellTags->"fittingroutineHD"]
}, Open  ]]
}
]
*)

